(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    244229,       4823]
NotebookOptionsPosition[    242195,       4754]
NotebookOutlinePosition[    242538,       4769]
CellTagsIndexPosition[    242495,       4766]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Preamble", "Chapter",
 CellChangeTimes->{{3.780771541527303*^9, 3.780771547398859*^9}}],

Cell["\<\
This section contains the program\[CloseCurlyQuote]s pseudocode and a few \
definitions that should only need to be executed once (as long as the \
parameters are not changed).\
\>", "Text",
 CellChangeTimes->{{3.780771585873912*^9, 3.780771622034917*^9}}],

Cell[CellGroupData[{

Cell["Pseudocode", "Section",
 CellChangeTimes->{{3.7803292543397837`*^9, 3.780329256110973*^9}, {
  3.7807721136837177`*^9, 3.7807721151272697`*^9}}],

Cell[CellGroupData[{

Cell["Define the road network.", "ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678766351327*^9}}],

Cell[CellGroupData[{

Cell["\<\
The network consists of a square grid of stops, with routes running N/S and \
E/W to define the grid (plus a dummy turnaround loop on each end). Between \
each pair of grid intersections we can also place stops.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678805404803*^9}, {3.7806789159593525`*^9, 3.7806789159643526`*^9}, {
  3.780681600251603*^9, 3.7806816134123807`*^9}, {3.780682029623898*^9, 
  3.780682038601019*^9}, {3.7808488461528215`*^9, 3.7808488685825534`*^9}}],

Cell["Each stop is a node, whose coordinates we store.", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678805404803*^9}, {3.7806789159593525`*^9, 3.780678938594097*^9}}],

Cell["\<\
We define arcs for each line, with slightly randomized travel times that \
depend on distance plus a constant boarding time.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678805404803*^9}, {3.7806789159593525`*^9, 3.780678946325615*^9}, {
  3.780681957166153*^9, 3.780681990746385*^9}}],

Cell["\<\
Each stop is within walking distance of the four stops immediately adjacent, \
with walking times based on taxicab distance.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.7806788303897915`*^9}, {3.7806789332048225`*^9, 3.780678933210821*^9}, {
  3.780682076815765*^9, 3.780682088783948*^9}}]
}, Open  ]],

Cell["Define population centers and facilities.", "ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806790038531685`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Population centers are somewhat uniformly distributed, and each has \
coordinates and a population.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.780679059001484*^9}}],

Cell["Facilities are somewhat clustered near the center.", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.780679061739606*^9}}],

Cell["\<\
All population centers and facilities receive walking arcs to their nearest \
stops depending on the grid square that they fall into. They can also be \
adjacent to each other if inside the same grid square.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806791448949413`*^9}, {3.7806868399016275`*^9, 3.780686839909628*^9}}]
}, Open  ]],

Cell["Define OD and fleet sizes.", "ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806791520776386`*^9}}],

Cell[CellGroupData[{

Cell["\<\
For each stop, decide the travel demand to all other stops according to a \
gamma distribution based on Euclidean distance.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806791963604383`*^9}}],

Cell["\<\
The total outgoing travel demand for a stop should also depend on its \
population. For each stop, determine the nearest population center, and \
equally distribute the center\[CloseCurlyQuote]s population to all of its \
associated stops.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806792946319265`*^9}}],

Cell[TextData[{
 "There should also be an overall scaling factor to adjust the daily traffic \
as a fraction of the overall population (my Chicago data shows that the \
number of daily boardings is approximately ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "/", "3"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " of the total population)."
}], "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679686257347*^9}}],

Cell["\<\
The fleet sizes of each route should be proportional to the number of people \
using them, which can be quickly modeled by assuming that all of the travel \
demand travels along its shortest path.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.7806868545819197`*^9}}]
}, Open  ]],

Cell["Evaluate the objective function\[CloseCurlyQuote]s shape.", \
"ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.7806868700739527`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Pick several pairs of lines at random. For each pair, vary both of the fleet \
sizes within a range and calculate the objective value for each.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.780686940147503*^9}}],

Cell["\<\
Use these results to generate a table of objective values, displayed as an \
array plot, in order to show how rough the objective looks.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.7806869729809537`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellChangeTimes->{{3.7807714143939443`*^9, 3.7807714158685155`*^9}}],

Cell["\<\
The parameters defined below can be changed to generate different types of \
example network. Everything below this point should also be re-executed when \
the parameters are updated.\
\>", "Text",
 CellChangeTimes->{{3.780771419110817*^9, 3.780771456481101*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hlines", "=", "6"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "number", " ", "of", " ", "grid", " ", "lines", " ", "running", " ", 
    "horizontally"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vlines", "=", "8"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "number", " ", "of", " ", "grid", " ", "lines", " ", "running", " ", 
    "vertically"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hgap", "=", "0.2"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"distance", " ", "between", " ", "horizontal", " ", "lines", " ", 
    RowBox[{"(", "mi", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vgap", "=", "0.2"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"distance", " ", "between", " ", "vertical", " ", "lines", " ", 
    RowBox[{"(", "mi", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jiggle", "=", "0.002"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "random", " ", "displacement", " ", "for", " ", "each", " ", "grid", " ", 
    "node", " ", 
    RowBox[{"(", "mi", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"horizon", "=", "60"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"total", " ", "time", " ", "horizon", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minbetween", "=", "0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "minimum", " ", "number", " ", "of", " ", "nodes", " ", "to", " ", "place",
     " ", "between", " ", "grid", " ", "intersections"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxbetween", "=", "2"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "maximum", " ", "number", " ", "of", " ", "nodes", " ", "to", " ", "place",
     " ", "between", " ", "grid", " ", "intersections"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wspeed", "=", "0.0455"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"pedestrian", " ", "walking", " ", "speed", " ", 
    RowBox[{"(", 
     RowBox[{"mi", "/", "min"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minbspeed", "=", "0.3"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"minimum", " ", "bus", " ", "speed", " ", 
    RowBox[{"(", 
     RowBox[{"mi", "/", "min"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxbspeed", "=", "0.5"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"maximum", " ", "bus", " ", "speed", " ", 
    RowBox[{"(", 
     RowBox[{"mi", "/", "min"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minbstop", "=", "0.5"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"minimum", " ", "bus", " ", "stop", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxbstop", "=", "0.75"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"maximum", " ", "bus", " ", "stop", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minbturnaround", "=", "5"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"minimum", " ", "bus", " ", "turnaround", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxbturnaround", "=", "30"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"maximum", " ", "bus", " ", "turnaround", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"facilities", "=", "10"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "facilities"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populations", "=", "20"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "population", " ", "centers"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7807714685817165`*^9, 3.780771469692157*^9}, {
   3.7807722664852037`*^9, 3.7807723285478315`*^9}, {3.7807723622388773`*^9, 
   3.7807724136701546`*^9}, {3.78084871435122*^9, 3.780848790950302*^9}, 
   3.7808553189388647`*^9, {3.7808554668835506`*^9, 3.78085547840916*^9}, 
   3.7808563896968355`*^9, 3.780856483595828*^9, {3.780856916720811*^9, 
   3.7808569330009212`*^9}, {3.780856989281165*^9, 3.7808570479088755`*^9}, {
   3.780857133645026*^9, 3.780857136792862*^9}, {3.780857191360109*^9, 
   3.7808572266899395`*^9}, {3.7808573219851074`*^9, 3.780857331801365*^9}, {
   3.7808607186237993`*^9, 3.7808608617713127`*^9}, {3.78086801485207*^9, 
   3.780868022792763*^9}, {3.780868625444586*^9, 3.7808686683276653`*^9}, 
   3.7808687167390623`*^9, 3.780868928273485*^9, {3.780868975178445*^9, 
   3.780869029117138*^9}, {3.7808711560911093`*^9, 3.7808711605126915`*^9}, {
   3.780871826919999*^9, 3.78087182838951*^9}, {3.780919353945106*^9, 
   3.780919355858287*^9}, {3.7809194392511005`*^9, 3.7809194602362547`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execution", "Chapter",
 CellChangeTimes->{{3.780771565651047*^9, 3.780771567477462*^9}}],

Cell["\<\
The contents of the following sections may need to be repeatedly re-executed \
to generate satisfactory example networks. They should always be executed in \
order from top to bottom.\
\>", "Text",
 CellChangeTimes->{{3.7807716306375384`*^9, 3.780771649293496*^9}, {
  3.7808685835746193`*^9, 3.7808686061162567`*^9}}],

Cell[CellGroupData[{

Cell["Network Construction", "Section",
 CellChangeTimes->{{3.780771521038786*^9, 3.7807715235126934`*^9}, {
  3.7807720128307896`*^9, 3.7807720163927107`*^9}}],

Cell["\<\
This section builds the underlying network of stops and other locations, \
along with the line arcs and walking arcs to connect them. A map of the \
network is shown once this process is complete.\
\>", "Text",
 CellChangeTimes->{{3.78077198108607*^9, 3.7807720376299205`*^9}, {
  3.7807720965858326`*^9, 3.7807721011810923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initialize", " ", "data", " ", "structures"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ncoords", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"list", " ", "of", " ", "node", " ", "coordinates"}], " ", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ntype", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"list", " ", "of", " ", "node", " ", "types", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"0", " ", "for", " ", "stop"}], ",", " ", 
       RowBox[{"1", " ", "for", " ", "boarding"}], ",", " ", 
       RowBox[{"2", " ", "for", " ", "population"}], ",", " ", 
       RowBox[{"3", " ", "for", " ", "facility"}]}], ")"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nname", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "node", " ", "names"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"nline", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "boarding", " ", "node", " ", "line", " ", 
      "IDs"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"nval", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "node", " ", "values", " ", 
      RowBox[{"(", 
       RowBox[{
       "population", " ", "or", " ", "facility", " ", "weight", " ", "as", 
        " ", "applicable"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"nrows", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "lists", " ", "of", " ", "boarding", " ", "node",
       " ", "IDs", " ", "for", " ", "each", " ", "street", " ", "row"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ncols", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "lists", " ", "of", " ", "boarding", " ", "node",
       " ", "IDs", " ", "for", " ", "each", " ", "street", " ", "column"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"arcs", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"list", " ", "of", " ", "arcs"}], ",", " ", 
      RowBox[{"in", " ", Cell["i\[DirectedEdge]j"], " ", "format"}]}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"atype", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "arc", " ", "types", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0", " ", "for", " ", "line"}], ",", " ", 
        RowBox[{"1", " ", "for", " ", "boarding"}], ",", " ", 
        RowBox[{"2", " ", "for", " ", "alighting"}], ",", " ", 
        RowBox[{"3", " ", "for", " ", "core", " ", "walking"}], ",", " ", 
        RowBox[{"4", " ", "for", " ", "accessibility", " ", "walking"}]}], 
       ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"acost", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "arc", " ", "times"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"alines", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "lists", " ", "of", " ", "line", " ", "arc", " ",
       "IDs", " ", "for", " ", "each", " ", "transit", " ", "line"}], " ", 
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Dimensions (mi): \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hlines", " ", "hgap"}], "]"}], "<>", "\"\< \[Times] \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"vlines", " ", "vgap"}], "]"}]}], "]"}]}], 
   RowBox[{"(*", " ", 
    RowBox[{"display", " ", "dimensions", " ", "of", " ", "network"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Lines: \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"hlines", "+", "vlines"}], "]"}]}], "]"}], 
   RowBox[{"(*", " ", 
    RowBox[{"display", " ", "number", " ", "of", " ", "routes"}], " ", "*)"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Generate", " ", "grid", " ", "intersection", " ", "stops"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ncoords", "=", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"vgap", " ", "j"}], ",", 
            RowBox[{"hgap", " ", "i"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"hlines", "-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", 
            RowBox[{"vlines", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
       "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "jiggle"}], ",", "jiggle"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"hlines", " ", "vlines"}], ",", "2"}], "}"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Insert", " ", "additional", " ", "stops", " ", "between", " ", "grid", 
     " ", "intersections", " ", "and", " ", "build", " ", "up", " ", "the", 
     " ", 
     RowBox[{"row", "/", "column"}], " ", "lists"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"col", ",", "row", ",", "inc"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "column", " ", "from", " ", "bottom", 
          " ", "to", " ", "top"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"col", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "node", " ", "IDs", " ", "in", " ", "current", " ", "column"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"col", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"col", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "+", 
                 RowBox[{"vlines", " ", 
                  RowBox[{"(", 
                   RowBox[{"j", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], 
             ";", 
             RowBox[{"(*", " ", 
              RowBox[{"current", " ", "node", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"btw", "=", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"minbetween", ",", "maxbetween"}], "}"}], "]"}]}], 
             ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "number", " ", "of", " ", "stops", " ", "to", " ", "insert"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"inc", "=", 
              RowBox[{"N", "[", 
               FractionBox["hgap", 
                RowBox[{"btw", "+", "1"}]], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "distance", " ", "north", " ", "of", " ", "current", " ", 
               "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "insert", " ", "stops", " ", "between", " ", "consecutive", 
                " ", "intersections"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"ncoords", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"ncoords", ",", 
                   RowBox[{
                    RowBox[{"ncoords", "[", 
                    RowBox[{"[", 
                    RowBox[{"(", 
                    RowBox[{"col", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], ")"}], "]"}], "]"}], 
                    "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "inc"}], "}"}], "+", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "jiggle"}], ",", "jiggle"}], "}"}], ",", 
                    "2"}], "]"}]}]}], "]"}]}], ";", 
                RowBox[{"(*", " ", 
                 RowBox[{"new", " ", "stop", " ", "coordinate"}], " ", "*)"}],
                 "\[IndentingNewLine]", 
                RowBox[{"col", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"col", ",", 
                   RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}]}], 
               RowBox[{"(*", " ", 
                RowBox[{
                "add", " ", "new", " ", "entry", " ", "to", " ", "column", 
                 " ", "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", "btw"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"hlines", "-", "1"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "topmost", " ", "stop", " ", "requires", " ", "separate", " ", 
            "processing"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"col", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"col", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "+", 
              RowBox[{"vlines", " ", 
               RowBox[{"(", 
                RowBox[{"hlines", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], 
          ";", 
          RowBox[{"(*", " ", 
           RowBox[{"top", " ", "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ncols", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"ncols", ",", "col"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "all", " ", "stops", " ", "in", " ", "column", " ", 
           "to", " ", "main", " ", "column", " ", "list"}], " ", "*)"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "vlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "row", " ", "from", " ", "left", " ", 
          "to", " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"row", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "node", " ", "IDs", " ", "in", " ", "current", " ", "row"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"row", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"row", ",", 
                RowBox[{
                 RowBox[{"vlines", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}]}], "+", 
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "+", "1"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"current", " ", "node", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"btw", "=", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"minbetween", ",", "maxbetween"}], "}"}], "]"}]}], 
             ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "number", " ", "of", " ", "stops", " ", "to", " ", "insert"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"inc", "=", 
              RowBox[{"N", "[", 
               FractionBox["vgap", 
                RowBox[{"btw", "+", "1"}]], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "distance", " ", "east", " ", "of", " ", "current", " ", 
               "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "insert", " ", "stops", " ", "between", " ", "consecutive", 
                " ", "intersections"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"ncoords", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"ncoords", ",", 
                   RowBox[{
                    RowBox[{"ncoords", "[", 
                    RowBox[{"[", 
                    RowBox[{"(", 
                    RowBox[{"row", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], ")"}], "]"}], "]"}], 
                    "+", 
                    RowBox[{"{", 
                    RowBox[{"inc", ",", "0"}], "}"}]}]}], "]"}]}], ";", 
                RowBox[{"(*", " ", 
                 RowBox[{"new", " ", "stop", " ", "coordinate"}], " ", "*)"}],
                 "\[IndentingNewLine]", 
                RowBox[{"row", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"row", ",", 
                   RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}]}], 
               RowBox[{"(*", " ", 
                RowBox[{
                "add", " ", "new", " ", "entry", " ", "to", " ", "row", " ", 
                 "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", "btw"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"vlines", "-", "1"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "rightmost", " ", "stop", " ", "requires", " ", "separate", " ", 
            "processing"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"row", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"row", ",", 
             RowBox[{"vlines", " ", "i"}]}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"right", " ", "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"nrows", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"nrows", ",", "row"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "all", " ", "stops", " ", "in", " ", "row", " ", "to", 
           " ", "main", " ", "row", " ", "list"}], " ", "*)"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "hlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"generate", " ", "node", " ", "attributes"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ntype", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"stops", " ", "are", " ", "type", " ", "0"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"nline", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "stops", " ", "have", " ", "no", " ", "associated", " ", "lines"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"nname", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\"\<Stop\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "ncoords", "]"}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "stop", " ", "nodes", " ", "are", " ", "named", " ", "according", " ",
          "to", " ", "their", " ", "node", " ", "IDs"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Stops: \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "ncoords", "]"}], "]"}]}], "]"}], ";"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{"print", " ", "number", " ", "of", " ", "stops"}], " ", "*)"}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Define", " ", "boarding", " ", "nodes", " ", "and", " ", "associated", 
     " ", 
     RowBox[{"boarding", "/", "alighting"}], " ", "arcs", " ", "for", " ", 
     "each", " ", "column", " ", "and", " ", "row"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"old", ",", "new"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "column", " ", "from", " ", "bottom", 
          " ", "to", " ", "top"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"old", "=", 
             RowBox[{"ncols", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "node", " ", "ID", " ", "of", " ", "current", " ", "stop"}], " ",
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"new", "=", 
             RowBox[{
              RowBox[{"Length", "[", "ncoords", "]"}], "+", "1"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "node", " ", "ID", " ", "of", " ", "new", " ", "boarding", " ", 
              "node"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"ncoords", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ncoords", ",", 
               RowBox[{"ncoords", "[", 
                RowBox[{"[", "old", "]"}], "]"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "node", " ", "gets", " ", "same", " ", 
              "coordinates", " ", "as", " ", "stop"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"nname", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"nname", ",", 
               RowBox[{
                RowBox[{"nname", "[", 
                 RowBox[{"[", "old", "]"}], "]"}], "<>", "\"\<_Route\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "append", " ", "line", " ", "ID", " ", "to", " ", "boarding", 
              " ", "node", " ", "name"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"nline", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"nline", ",", "i"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "node", " ", "associated", " ", "with", " ", 
              "current", " ", "line"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"ntype", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ntype", ",", "1"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "nodes", " ", "are", " ", "type", " ", "1"}], 
             " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"arcs", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"arcs", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"old", "\[DirectedEdge]", "new"}], ",", 
                 RowBox[{"new", "\[DirectedEdge]", "old"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "add", " ", "boarding", " ", "and", " ", "alighting", " ", 
              "arcs"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"acost", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"acost", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "and", " ", "alighting", " ", "base", " ", 
              "times", " ", "both", " ", "0"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"atype", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"atype", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"boarding", " ", "type", " ", "1"}], ",", " ", 
              RowBox[{"alighting", " ", "type", " ", "2"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ncols", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
             RowBox[{"Length", "[", "ncoords", "]"}]}], ";"}], 
           RowBox[{"(*", " ", 
            RowBox[{
            "replace", " ", "line", " ", "node", " ", "ID", " ", "with", " ", 
             "the", " ", "new", " ", "node", " ", "for", " ", "later", " ", 
             "use"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"(", 
               RowBox[{"ncols", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}], "]"}]}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "vlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "row", " ", "from", " ", "left", " ", 
          "to", " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"old", "=", 
             RowBox[{"nrows", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "node", " ", "ID", " ", "of", " ", "current", " ", "stop"}], " ",
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"new", "=", 
             RowBox[{
              RowBox[{"Length", "[", "ncoords", "]"}], "+", "1"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "node", " ", "ID", " ", "of", " ", "new", " ", "boarding", " ", 
              "node"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"ncoords", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ncoords", ",", 
               RowBox[{"ncoords", "[", 
                RowBox[{"[", "old", "]"}], "]"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "node", " ", "gets", " ", "same", " ", 
              "coordinates", " ", "as", " ", "stop"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"nname", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"nname", ",", 
               RowBox[{
                RowBox[{"nname", "[", 
                 RowBox[{"[", "old", "]"}], "]"}], "<>", "\"\<_Route\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "append", " ", "line", " ", "ID", " ", "to", " ", "boarding", 
              " ", "node", " ", "name"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"nline", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"nline", ",", 
               RowBox[{"vlines", "+", "i"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "node", " ", "associated", " ", "with", " ", 
              "current", " ", "line"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"ntype", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ntype", ",", "1"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "nodes", " ", "are", " ", "type", " ", "1"}], 
             " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"arcs", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"arcs", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"old", "\[DirectedEdge]", "new"}], ",", 
                 RowBox[{"new", "\[DirectedEdge]", "old"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "add", " ", "boarding", " ", "and", " ", "alighting", " ", 
              "arcs"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"acost", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"acost", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "and", " ", "alighting", " ", "base", " ", 
              "times", " ", "both", " ", "0"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"atype", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"atype", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"boarding", " ", "type", " ", "1"}], ",", " ", 
              RowBox[{"alighting", " ", "type", " ", "2"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"nrows", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
             RowBox[{"Length", "[", "ncoords", "]"}]}], ";"}], 
           RowBox[{"(*", " ", 
            RowBox[{
            "replace", " ", "line", " ", "node", " ", "ID", " ", "with", " ", 
             "the", " ", "new", " ", "node", " ", "for", " ", "later", " ", 
             "use"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"(", 
               RowBox[{"nrows", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}], "]"}]}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "hlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"nval", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}], ";"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{
      "stop", " ", "and", " ", "boarding", " ", "nodes", " ", "have", " ", 
       "no", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Define", " ", "line", " ", "arcs", " ", "for", " ", "each", " ", 
     "column", " ", "and", " ", "row"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"head", ",", "tail", ",", "line", ",", "d", ",", "t"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "column", " ", "and", " ", "generate", 
          " ", "arcs", " ", "between", " ", "each", " ", "consecutive", " ", 
          "pair", " ", "of", " ", "stops"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"line", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"current", " ", "transit", " ", 
            RowBox[{"line", "'"}], "s", " ", "arcs"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"tail", "=", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"tail", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"head", "=", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"head", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"d", "=", 
              RowBox[{"EuclideanDistance", "[", 
               RowBox[{
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "tail", "]"}], "]"}], ",", 
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "head", "]"}], "]"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "distance"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "time"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"atype", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"atype", ",", "0"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"tail", "\[DirectedEdge]", "head"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "append", " ", "arc", " ", "to", " ", "line", " ", "list"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"also", " ", "generate", " ", "revese", " ", "arc"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"atype", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"atype", ",", "0"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"head", "\[DirectedEdge]", "tail"}]}], "]"}]}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"ncols", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}]}],
            "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "turnaround", " ", "loops", " ", "to", " ", 
            "endpoints"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"atype", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"atype", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"arcs", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"arcs", ",", "line"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "arcs", " ", "to", " ", "main", " ", "arc", " ", 
            "list"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"alines", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"alines", ",", "line"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "line", " ", "arcs", " ", "to", " ", "line", " ", "arc",
            " ", "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "ncols", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "row", " ", "and", " ", "generate", " ",
           "arcs", " ", "between", " ", "each", " ", "consecutive", " ", 
          "pair", " ", "of", " ", "stops"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"line", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"current", " ", "transit", " ", 
            RowBox[{"line", "'"}], "s", " ", "arcs"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"tail", "=", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"tail", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"head", "=", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"head", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"d", "=", 
              RowBox[{"EuclideanDistance", "[", 
               RowBox[{
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "tail", "]"}], "]"}], ",", 
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "head", "]"}], "]"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "distance"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "time"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"atype", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"atype", ",", "0"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"tail", "\[DirectedEdge]", "head"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "append", " ", "arc", " ", "to", " ", "line", " ", "list"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"also", " ", "generate", " ", "revese", " ", "arc"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"atype", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"atype", ",", "0"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"head", "\[DirectedEdge]", "tail"}]}], "]"}]}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"nrows", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}]}],
            "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "turnaround", " ", "loops", " ", "to", " ", 
            "endpoints"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"atype", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"atype", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"arcs", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"arcs", ",", "line"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "arcs", " ", "to", " ", "main", " ", "arc", " ", 
            "list"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"alines", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"alines", ",", "line"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "line", " ", "arcs", " ", "to", " ", "line", " ", "arc",
            " ", "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "nrows", "]"}]}], "}"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Display", " ", "map", " ", "for", " ", "review"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"as", "=", 
        RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "pick", " ", "subset", " ", "of", " ", "arcs", " ", "that", " ", 
           "are", " ", "not", " ", "boarding", " ", "or", " ", "alighting"}], 
          ",", " ", 
          RowBox[{
          "since", " ", "otherwise", " ", "Mathematica", " ", "will", " ", 
           "have", " ", "trouble", " ", "drawing", " ", "things"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"atype", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", "1"}], "&&", 
            RowBox[{
             RowBox[{"atype", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", "2"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"as", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"as", ",", 
               RowBox[{"arcs", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "arcs", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "ncoords", "]"}]}], "}"}]}], "]"}], ",", 
          "as", ",", 
          RowBox[{"VertexCoordinates", "\[Rule]", "ncoords"}]}], "]"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.780839107164124*^9, 3.78083915348427*^9}, {
   3.7808529886701245`*^9, 3.7808530833436728`*^9}, {3.7808532037302055`*^9, 
   3.780853280910163*^9}, {3.780853317178815*^9, 3.7808533879777718`*^9}, {
   3.780853457168648*^9, 3.780853462433568*^9}, {3.78085356463711*^9, 
   3.780853633072615*^9}, {3.7808537304724464`*^9, 3.7808537380353975`*^9}, {
   3.7808538342490177`*^9, 3.7808538483777637`*^9}, {3.7808539124666233`*^9, 
   3.7808540575509076`*^9}, {3.7808542572469563`*^9, 
   3.7808543096302524`*^9}, {3.780854347862917*^9, 3.780854474240201*^9}, {
   3.7808545115873165`*^9, 3.780854676307379*^9}, {3.7808548632547855`*^9, 
   3.780855014481696*^9}, {3.7808550843718786`*^9, 3.7808552769123116`*^9}, {
   3.7808553967967243`*^9, 3.780855413977216*^9}, {3.7808555774179783`*^9, 
   3.7808557301665*^9}, {3.780855790665188*^9, 3.7808557935957537`*^9}, {
   3.780855835671893*^9, 3.7808558645704603`*^9}, {3.7808559930741315`*^9, 
   3.7808560790618153`*^9}, {3.780856323980884*^9, 3.7808563246606684`*^9}, 
   3.780856465052816*^9, {3.780856548882295*^9, 3.780856584267805*^9}, {
   3.780856615003056*^9, 3.780856901788807*^9}, {3.7808603019389634`*^9, 
   3.780860317156128*^9}, {3.78086035170458*^9, 3.78086038148343*^9}, {
   3.780860428991516*^9, 3.780860435457353*^9}, {3.7808604658149304`*^9, 
   3.78086050952096*^9}, {3.780860556421887*^9, 3.7808606160477905`*^9}, {
   3.7808606648544044`*^9, 3.780860710540225*^9}, {3.780860907399638*^9, 
   3.780860960083744*^9}, {3.7808609923943844`*^9, 3.780861002268216*^9}, {
   3.7808614083266163`*^9, 3.780861415731242*^9}, {3.7808674488267255`*^9, 
   3.7808674560002527`*^9}, {3.780867493857787*^9, 3.7808676378360806`*^9}, {
   3.7808677987501717`*^9, 3.7808678212702827`*^9}, {3.780867862227934*^9, 
   3.780867949501*^9}, {3.780868092313163*^9, 3.7808681093402576`*^9}, {
   3.780868186979131*^9, 3.780868217424326*^9}, {3.7808682729425497`*^9, 
   3.7808682735362525`*^9}, {3.780868358326125*^9, 3.780868420683856*^9}, {
   3.7808684585427685`*^9, 3.780868460139039*^9}, {3.7808687409260263`*^9, 
   3.7808687757503734`*^9}, {3.780868880625744*^9, 3.780868892893831*^9}, {
   3.780870935900695*^9, 3.7808710452466536`*^9}, {3.7809379375807977`*^9, 
   3.780937944736589*^9}, {3.7809381246671114`*^9, 3.780938187174043*^9}, {
   3.7809382591772165`*^9, 3.780938273790532*^9}, {3.7809383131739025`*^9, 
   3.780938356850897*^9}, {3.780939093467409*^9, 3.780939156819725*^9}, {
   3.7809392695848837`*^9, 3.7809393582053614`*^9}, {3.780939412961711*^9, 
   3.7809394631992383`*^9}, {3.780939558499921*^9, 3.780939642310735*^9}, {
   3.780939687843705*^9, 3.780939845176283*^9}, {3.780939888064414*^9, 
   3.780939928888777*^9}, {3.780939960397353*^9, 3.780940042330708*^9}, {
   3.780940166953786*^9, 3.780940206268397*^9}, {3.7809403054776125`*^9, 
   3.780940337977317*^9}, {3.780940441724405*^9, 3.7809407261527357`*^9}, {
   3.780940757703644*^9, 3.7809408016025276`*^9}, {3.7809409322198887`*^9, 
   3.7809409545637765`*^9}, {3.7809410004309034`*^9, 3.780941042994712*^9}, {
   3.780941082960945*^9, 3.7809410842868834`*^9}, {3.7809411692697725`*^9, 
   3.7809412842611666`*^9}, {3.7809416744128065`*^9, 3.780941696531839*^9}, {
   3.780941779338462*^9, 3.780941917628172*^9}, {3.78094200829214*^9, 
   3.780942129527347*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Dimensions (mi): 1.2 \[Times] 1.6\"\>"], "Print",
 CellChangeTimes->{{3.780868423583639*^9, 3.7808684275885077`*^9}, {
   3.7808684608857775`*^9, 3.7808684630347104`*^9}, {3.7808688947772064`*^9, 
   3.7808689358560357`*^9}, 3.7808709917257957`*^9, {3.780871026338699*^9, 
   3.780871046084386*^9}, 3.7808711653701143`*^9, 3.7808718354112587`*^9, 
   3.780919386393125*^9, 3.780937791610123*^9, 3.780939466576243*^9, 
   3.780939643604392*^9, 3.7809398550510745`*^9, {3.780940021233082*^9, 
   3.7809400432524853`*^9}, 3.7809403393486814`*^9, 3.7809407278101845`*^9, 
   3.7809407604733257`*^9, 3.780940802796155*^9, 3.7809409558791337`*^9, 
   3.7809410442430916`*^9, 3.7809410848437386`*^9, 3.7809411864133415`*^9, 
   3.7809412854957714`*^9, {3.7809416798943954`*^9, 3.780941697219434*^9}, {
   3.7809417912952814`*^9, 3.780941810910985*^9}, {3.7809419182629704`*^9, 
   3.7809419241565895`*^9}, 3.780942134574581*^9}],

Cell[BoxData["\<\"Lines: 14\"\>"], "Print",
 CellChangeTimes->{{3.780868423583639*^9, 3.7808684275885077`*^9}, {
   3.7808684608857775`*^9, 3.7808684630347104`*^9}, {3.7808688947772064`*^9, 
   3.7808689358560357`*^9}, 3.7808709917257957`*^9, {3.780871026338699*^9, 
   3.780871046084386*^9}, 3.7808711653701143`*^9, 3.7808718354112587`*^9, 
   3.780919386393125*^9, 3.780937791610123*^9, 3.780939466576243*^9, 
   3.780939643604392*^9, 3.7809398550510745`*^9, {3.780940021233082*^9, 
   3.7809400432524853`*^9}, 3.7809403393486814`*^9, 3.7809407278101845`*^9, 
   3.7809407604733257`*^9, 3.780940802796155*^9, 3.7809409558791337`*^9, 
   3.7809410442430916`*^9, 3.7809410848437386`*^9, 3.7809411864133415`*^9, 
   3.7809412854957714`*^9, {3.7809416798943954`*^9, 3.780941697219434*^9}, {
   3.7809417912952814`*^9, 3.780941810910985*^9}, {3.7809419182629704`*^9, 
   3.7809419241565895`*^9}, 3.780942134580578*^9}],

Cell[BoxData["\<\"Stops: 126\"\>"], "Print",
 CellChangeTimes->{{3.780868423583639*^9, 3.7808684275885077`*^9}, {
   3.7808684608857775`*^9, 3.7808684630347104`*^9}, {3.7808688947772064`*^9, 
   3.7808689358560357`*^9}, 3.7808709917257957`*^9, {3.780871026338699*^9, 
   3.780871046084386*^9}, 3.7808711653701143`*^9, 3.7808718354112587`*^9, 
   3.780919386393125*^9, 3.780937791610123*^9, 3.780939466576243*^9, 
   3.780939643604392*^9, 3.7809398550510745`*^9, {3.780940021233082*^9, 
   3.7809400432524853`*^9}, 3.7809403393486814`*^9, 3.7809407278101845`*^9, 
   3.7809407604733257`*^9, 3.780940802796155*^9, 3.7809409558791337`*^9, 
   3.7809410442430916`*^9, 3.7809410848437386`*^9, 3.7809411864133415`*^9, 
   3.7809412854957714`*^9, {3.7809416798943954`*^9, 3.780941697219434*^9}, {
   3.7809417912952814`*^9, 3.780941810910985*^9}, {3.7809419182629704`*^9, 
   3.7809419241565895`*^9}, 3.7809421346135674`*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTrZdW7WsZbtVy3bLtWxr2bat5WVjyzZXrfc8u3i/
//a7+f7gJu2rtAsMCAjIJEJuKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4
xCM+CUhIIhKThKQkI4jkBJOClKQiNWlISzrSk4GMIX3JTBayko3s5CAnuchN
HvKSj/wUoCCF+IEfKUwRivITxShOCUpSitKUoSzlKE8FfqYilahMFapSjerU
oCa1qE0d6lKP+jSgIY1oTBN+oSnNaM6vtKAlrWhNG9rSjvZ0oCOd6EwXutKN
7vSgJ73ozW/0oS/96M8ABjKIwQzhd4YyjOGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNH8xhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4U+OcozjnOAkpzjNX5zhLOc4zwUuconL
XOEq17jODW5yi9v8zT/c4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7y
ic/8yxe+8o3/CBl/IKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQg
IYlITBKSkowgkhNMClKSitSkIS3pSE8GMgb+/6++Az6VhWw=
      "], {CompressedData["
1:eJxN0NVWlVEYRuF/Y2O3iIWteDUee+QF6CVgAjZiIxZiInYgtiB2IHYidiK2
IupiOOcY6+AZe473ZH3/zpo8deKUtCRJJqWSpPU3J5gGezrsGbBnwp4Fezbs
XNh5yOXNnGjLD+bAngt7Huz5sBfAXgh7EewC2ItRwA350VYYLIG9FPYy2Mth
r4C9EvYq2EWwV6OIGwqjrThYA3st7HWw18PeALsE9kaU8EZxtJUGm2Bvhr0F
9lbY22Bvh10GewfKeLM02sqDnbB3wd4New/svbD3wd4P+wDsg7APwa6AfRgV
3FwebZXBEdhHYR+DfRz2CdgnYZ+CfRp2Fexq2GdQzY2V0VYTnIV9DvZ52Bdg
X4R9CfZl2FdgX4V9DXYt7Ouo5eaaaKsLbsC+CfsW7Nuw78C+C/se7PuwH8B+
CPsR7Mew62E/QT3fVBdtDcFT2M9gP4f9AvZL2K9gv4b9BvZb2O9gv4f9AXYj
7I9o5Jsaoq0p+AT7M+wvsL/C/gb7O+wfsH/C/gW7GfZvNHNjU7S1BH9g/4Wd
pP6zU7DTYLeB3RZ2O9jtYXeA3RF2J7R2C3e7pQedYXeB3RV2N9jdYfeA3RN2
L9i9YfeB3Rd2P9j9YQ+AnQF7IDL45vRoywwGwR4MewjsobCHwc6CPRz2CNgj
YY+CPRr2GNhjYY+DPR52NuwJyOY/yIy2fxK7k0s=
       "], Null}, {VertexCoordinates -> CompressedData["
1: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
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJy8e2k01d8XviFRZFaKREoiUxoMZUsqTcaMkTlTRWZpMIdMUUIRQiEiZYyP
EPde8+xeZLzm4RoTqf/5vvj14r5p/dd/rf+r1u5z7jln72ef53n2C0IWjtrW
dDQ0NHm7aGj++7dvLu54X5UhRrkYuLeq5jIobu/QnDfDQ1is4dM32kbYI8p5
luJXROD1U9agL1HDCvmyU8eURuBIkUbkvsVrYGne7qUaMgk+mgrD899OYSOK
NyZ8fs1DRz3zjG+FAXZ4XTQjQHwJlqurh/eLaWGxYRma921WwentKf4wbV2s
hnl+eW2vGTDFXzknHIWHIU+8Hq4RD+emxJeGnuCh+mFc+aEIInRJWcy7eOJh
fe7n2e0nR6ChsTAD/wIPJ3+e0Ul6PQmLIQ/leKzx8GmwcPcKHQVunmzdpWqH
h0lGrQ5/+SXIGHE++soLD+wvqwaKzVZhs9a5quQ6Ht49lR8xDdTHcPbXU28k
EeEUs60YixEeLunhc1JjiHBWz1g1ypsIK+fN9ljGEmFCdsrK6MgILNdx5Xq9
JcJx7AC/SewkfNO6teFVRARSEBuH3No8REaIhl37TIRX89VlP2WXIN3b6lnY
CyJYPEsKkTZfhbkdFNGQTCLk7a85f+OOKuyu+rDPV2YEzvh16DOR8OBbZeBz
W2UE5PKEC5h9iKCpZJpveHAEPDL3ldWg+sd5fpG7IDICvB1e0dmvJoEY5NCw
iOIUhQnJrevz8Ops8bd6xRGouFG5+kRmCY6v0Bl4nBoB+6v63zisVoGneOCi
n9QI2DpKO764pw/bzXLrR6In4UeLpIZ+GB4EFo+s6b2dhONu6R6694nAc/2W
eRvK8/ZxuihpdK8JdTF9pSeToMhptmYROQl8E5w/XKImoU+g6+EYIwW+lJer
0kdMgp+8D6lDYgmE+6K3qqagWKLdkRblzy0SqsaK4sEm9gG9i8og1LC/PgDh
VtjaPDeSgQdaVYG4lY15YMVJxkR4EaExXdWidGke1e/TkevKI7Dw7toVI1oK
lF25MS34ZhJq0oMzeWko8F7Q3QnQ/w+x+AkU/56HasPa/b3o/Gfrnin7FueB
ntMq7P6NVRBUXLVWQX2qfDzq8rWmneD8/PNlsjYZpK9tmew1uQp3hV8q4r3H
oc9XiWXkri68LVuwDSLMwI/Lt07eQX30zraDmGVeAlt3moq8C8RDZPB21k+k
fpj0TWeMe4iHpxyKvif5hwDaTnbUshLgQsgXqxzPMfiG2QxsQfX8qXpbjbWj
BHY/ufrA/RERpm7se5avQIauH323cAGoz0qjlI7eGge2Yp2MW55EqKHr4/iO
m4GCIKUyDRiBPjlaIY7lElATj/VkPTMC+f6rzmHfZiDa/ekjn7BJoOhGfXCJ
LIHluG+haumTsPEkwc2fcRBKLqq8joifhOIzJ07k647B22GdBm0GCjg/XmFu
TyyBSPegkze3odiEXL/4owU+khMOXWSmwIzSKaEQlU6oTDqQdGRmHlpjXz6P
YhgE49Ac61aES3bIjpsl+mTYOVGbQZyeh/MXuA+9cx6HgpyedED7h25kx5th
M6D5IjiHBfEBm5cBD+5MPkgXdPAoo/7cLT5qeGvLVwirUu2/fHwJhHjM05ZY
2sHI1EtQ6+gSaG/Sl9CP9sMR/sav+pJLkMW2dmFKYAi66u4c5RRdAt7M9fDm
0Rk4kxZ17L/+Yoj9oaN/qB2ql1PEstB7n2Yyp11f6weV2/T7vW6uQlxGj8Qn
kSG4TjL5aWO7Cl2EGo+Cy2SgObNNxA+9D7vT8ovhluOwXy0i6Iz1KhTxLos6
tk8D/s3V0Ddo/+pjX+6PrsyCXo5CMkNWHvyPP48NpBs86a/8G1tczJ0pW275
y6cZ4YvSNPKdf+Oe0401TObkv3y6bjo/JuY//jd+UoTbQXqx8JdP1zjOmIfs
Kf3Ll59pMh1FxVv/8uVP1dmCW46df2Mx8m/hiOWBv/xpf8QtqLVt5i9ffluo
E9vKvfCXL7voiIq7Di7+jXUKWPYEKJbA//hx+KKn4aWFlr/8KBLxJTHieOff
OOtLVdbq0MBfvnz8VjPaXqf9L59ZSAaKcrMu/OUnF4iVP7hv8W/c7NjKmKiy
/JevBn2GeXN1Vv7GBtf1fvj/KPnLV8NNmzuij7T/5Suvksmy+Mr+v3w18Hsn
jSPd0N842fZ4taXb2F/+unMuRjy2auYvf7kXO/L6pCz85a+YS0+nyUrLf/kr
7Xrqr1WNlb/xh6PNFW9k8v/y16AQxcZI6OvfWJvFpbutvP8vf11+1xvOTDv0
N35eN24a4TL2l8/mHj0VuNY185fPymUe+2pyLvzlsyaVuGhz4cW/cYd9t+wM
ut//+I3sPaG6ie73v5ha36n1llr/qPXoX/xIrR/UfEnN79T+gppPqfWfWo//
xbfU+knNv9T6Rq031H6Hmq+p/Qi1P6DW63/xO7W+UvM9tf5R+y9qPaD2R9R+
hdo/UOs5tZ5Q6y2136PWG2o/Ru2PqPWI2r9Q6xO1v6DWe2q/Sa1n1H7wX/pG
7d+o9Y7aX/1L/6j9ELUeUvsVar/8L72k9rfU+kntP/+lp9R+kdq/Uesttb+i
9vfUfptan6n98L/0mtq//ku/qf3mv/Sc2h9S8+e/9J6a3/6l//+ar/7lD/41
f1H7h//beYzab1Dz87/8BzVfUvuRf81z1H6F+j3/y7/8385/1H6HWn/+5X+o
9YDaD/3/nh+p/df/6zz5L/9GzR//8nP/mkep/R61flP7P2o9/ZcfpNY/an9I
rT/UfpGa36n9IzV//stP/ms+/pff/Nf8/C8/Sq331P6UWn+p/Sq1nv3Lv1Lr
x7/8LDU/s1kuToT4aGOVh0OiJNUug92NRwHOL73BLNEr7ZOHCnbPXm2yzTMM
cJ/yH2R1OmFCljRMW1SewSsGj7abPv7Yj+tKI1vux8EUjvT4UlUUpjDjxJwa
kwAdFqKzddlxmNZ+pYNkkwR4YFGxvvt2MraNxTJj78ALmDr5tLpOOw0r0RLS
Cb4UAyrvAvvHCt9iWTWCKjd/hUCXZohEp04W1rxXNqJu1g26ctUappayMasv
x1K281tjDJT6hjq395hglIYywTEQ211pG0HbnI05iM8ttvBFY4aH41LWWLKw
7NmQAf+TcVjwrae7anXeYjo6kyVR4a8wuU7Rc3q9b7BEf+VXszVJ2AUZld6e
ztdYkl2wIm9eEiZ+um+4K+MFJquxYPlF8xVmd8XA3/JNJOa96PTuafcLbNjU
Ke/hnC/mNsS01SX5Kea57bJGo9Bt7PvnNCdavQBMWfBt/qUHMtiP9zu1+P3N
MJ/j1h2PGy5DXtCTeUs/X2xjiv/2Sb9YqBwK+E3sDcAurPZq0259BT3vDJuf
vn+MWXb0MFo2JYNZ/td3g4shmKH/hvLLlDeA031XczvnCVZ/31xw814G4BrU
+WV7wzALqwf1PQaZkHfKif6hdziWaGD01Vv+PfAWMEfPh4djDlPfe2X4PoC0
4YB73NtQLH/FKdtg5SsE09h9PXgkFKuI3cAl5lSBk9aZgV3CIRjtLX7Lq9bV
QLG7gzGHP8aM9LYWr/PVAEUsv37BPhCb+9WVJN9aA9L7JIx2VPhhuwaT65IC
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
2KUPGlRDW5n1g+ENCkCV37zGnSbYObQecXgF+9mOlpDRoCbQmfAO1ViggOrJ
sIiFhCaICtPLY8T48v7crXq5ogm+qPou+2P8HVP0XLeONIFoAu1PCeqHPlBq
zxxDM4iWSx0hIF/qUiWUxb3NkNzX2u2O+I3hkD+HVjMcaHx0aB3PWx0/0u25
3AKGvgJH3CioP99z9a8FWkGyvsYwDe2vkh3zXh5phZOHYsq+zVHALJNV18as
Ff40jd22/ov6jRpVoL/fCv+OUBOakG89yxmLsyGtsPjur+PaGgVCVkf+nExt
Bdu25H0UnC+ef+T486e+FTqWqaJqGE+R1qglZcQZdnFcoRj/zX5nzof9agVh
2yGe18ivqPmLswFvW8HljSe9HOb/qWmGVEGXVqCqWRPvYP7NzHTcv2vaCr+e
Sq4YYD24xLdUE3S4FVIfvihtQLzH+fK6H38r3JnOmp1FXH9a4+a9pRaQnh8q
k0fMcH5i+z+NZti1K+w4De2t7agXmtqD8bmvcsQMsU3aT4WZTc0gotW0dh7v
Zxnj+8I/3ASXnFOk/qF/Z/8p57mXN4GWhtRzbdQnn+bBUCnkqzJYQkIB9VMT
oyJ6GPnsCbx/uAjzv5WORyzNrgnOGWs4GCP/f3cxBgb/boMyw+WXzzF+Ymd8
VNPb26Bti37bY+Sbm8V/r+XfNtCqs9M6hPzspHfhesDTDoPpa9aJWB/WiiI/
zR5sB5WqJ6cGMJ+FJXkl8s61g3GF5pfuUQrEFFe1EZzb4a0wZ/xHrBd2jyN/
T4W0gwTjoWeuXRR42FKp52jZCQPFi2MbOH+ccm05m+7RCea/dk+fxp/fEEi6
ufixExJ5XOyuYP/R5//sIJ3fCRFM2gQV7Pc25UcvHOvtBN5L+Q3d/RRQ4laX
5lrrBOqK3zY17P/CYdJM0bu6IIQxx8sa/dE+og6Nyl3g+niTm+oWKjxJtZY0
gC5Qp5e4JcxGBQtvkoP0ni7IEvMq/4z5cqts8Jnvpi54VDK1tWYbzuW11I+2
pE6QN/z8L5iLCo/Zq7ZOlXYCQ3n/s7+Yfxe/Gj7Z+7kTFst9+hYx3r1skR27
/fE9HyIuhWO+chlUzVOvdQJHwha7JKwHDCuR1+5EtoN8lUT+CGJFszcXpD3b
4W9jSE4hYr7MvBOjlu1Q++mm+yHECllFqukq7dDyxdtIB/kX2CJ77vOuduB1
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
X85F0Uen91Lh98DJ1MShSaDw+ZO+Iha+wM/6rHoS/nH63c0SpUKEi9B4uN8E
KN6iOPgiDns0Zet6ZwKC8w8oFOF5HdW9RVdNJ8BuUnuPA9oPuSb50VZ9Ata7
928Jwft7h3VDQyQngOXrVTpp9E8/4NuBeeTLxuqI62HcF14c0G5+h3y+ymCQ
zcX5RPL3es5T5Dt3gnF2coICDsdZthH5puGUEqe3G/Idu8evR1FuGqLrn0zs
6KOA/6GHxZ3Hp6HWpmepBeOf/oLfouLCNFi1GP9JQr5MFvjZZxynIX70QEsU
5vfJTzWSWkHTEPZeazi1ngKFfMd6MmLQ/uc64TGs13TTeieO/p4Gt4MjxenV
FAh6Gf29mBH3/tiFaFas7xwfLAZ0BHHOSBOe9sX+oS0hMFNykIL1M6R6F/ab
57vaZsX0KSDB/O1HC+pH/fCF7dZXcc9Yq76eiP55P3Z7deMhBRLzcrjD0f85
Mdky6WDca7N0lCKH0b/6H0ejv1Jg0/na3SyY7+tlYkmHE7DPpVe0l6Aeake/
9Y7gec4x1j1zOK+RWzIWwJ0Cy7uGdoRhPHM9+KzPXqNA6vAXhW+4n+/Yzvdd
+jT63ZMlKy9EhX23rwa3H6IAj6+cmATy83N2vvfabgoor9kGPkd8d9ew8+Bm
CsQfslISRz6H3V+xmedMww+vcxXLIlSwtm/rbIydBpW/hdFqiCWJvNWmz6ah
V2yzwizaJ05ZVNCckI/qZXVe5PtAc8uX35bToG10i/QN/Zt5kimVdmIanlMd
X6Sj/x4k+vlp5NOA9m1VHt+3T9nb+yH/NHTD+8N9uP/3nDeuKMA/KzkSl3bh
fK/tLbz9ENYNo7xDp5J8KUBoCHGexDgtBV8d0jOmwDvJe9Z2kjh38p98Q5PD
es/lcmlFC/cWPuKixy4KrJyODbp6lQqZInqnLiEmyR9dEvKjwgfxYXIknj8X
+PD+6zgqVCeFHSw2wvpysfbO/kLso3eDXyz74D53WjqtrAXt/ek+fg73Ab79
3nThQzj3nvwbz4Z+at9ufBI0SgXnE6tdbhjPkD3cqYeJVDi09+bNm2q4zxFU
Tiy2UoHAMFF11wznszcH9XoIOActlCg+uUkFn6EZpdDPVHjnPb6h4YT72vVU
qbMBVJj4/sa1BfGrJMd/72wwjyt5+xRvo53OiaZNJ6ngNydjznmeCuoiz7cL
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
et8kw/8Sny9eMZK4hn7KX34p8hHzTXr362mi38eHT/EaYz3H9dZtDUAeSvEH
k79hvVY22hGMWu1g5ivXnI39KBy/NteLPNv1susum+H9UPKadt+OdqA/kD7F
oIn+/Zn+PmTZBQMu54JK0C+pm/fF5gK6wLFU9UI/+mnevLbYILkLgiTtz+vg
/rHvdHcQKu+C+ex422Pof3vadkbx0S4QlLEyt0I+y1Jr+C0YuvFcTk9nQD15
UPpU4b5u6J2TdKVD7f86poNfqRs27Q5V1MB46xYXImQ9eiDenONFGmotyeDr
E8E98DiX4Ywp5pc8/L3ML7YHHrwntXtdIoO1jvBrjvQeyC28+34Z6w2qLvty
h+gBUS1ydzPy3dqgNZVb3QP5hyu1NlxDfu+6xUs6e+B956Ga6OtkeFnXnxgx
0QNrJOZ1eHA/SB9mr/w63gMCI9e+XUd/bf+WhWZ39MCTCI1lQB5t4HPuflUP
uAiKrvxwIMOVvNI5nm89wPGOrn0Cz1uBhsWkZ6k90L37WM9H3H9PAtfHLMb0
AHnyVxSPM84/1ziL2uMe2GtpVsuH+myrpGysWw/MybCvr8Z47Pp8+3vlu8Fg
/mm6HWqz/pnXj3Z3g3PiC/pczJ/851GZytpu8M7MtInBeZCJ+sghM9QFF17u
f7kb66XNvT9oXtIFzevTzFWwn/E0bfepxC5QEmub2WxJhgyaSzMNfl2g5eV0
zxv592acZRa2QF5iwzPPtZE/b3yNr04vyAXxHJbXQn/2m/N5mvUC9435PYpX
yWDz0Tnto0sv1EfZrn+J/gY50m1mf9gLz7ncKy9q4Pl6K7v+6bNe5G0qdQN5
bCopuCDyuhdETIx7vyMvklBXX8/HXrhyXnG7D2rz5TsdUYW9QPNW7Pdj5Ftv
xn1h6mkfLH3aOp6MuvLk3V/v4vpgkMPVVwDX85VPBeqm98FrPz6fOdTXrIdv
ryP64OERZbMdmD/monBVSFUf7Hr7zzse61NvWb+fpqMPTjbZke5j/Yxp8lNy
Y33wYn14cAb2FyeskXxpoQ98fO3mZ3F/MJ7anJiK2lxINlcJ/WMVV9H8iOuf
axsUKKK/MslQ+gDjdewY6R5H//lGsvT2VPcB9+t2HknkxfmX5nUC1hN9mpQi
hPMQ+ZwsuO5DH9y/OLu2GPU30fZQjfg+uGrBVUGP8yGnKxMVGdIHqZz7SIuo
O2Zj958p6oWMNaeWulD37ZTx9M/shbK3XTeNUQeFlo02oZ+MIlJ6zzGexlQt
h8jzXtj7kN3VHPOzsTx6F488/Dl19EawPm3f9AvH7vSC9eAQmRnrf51m/2gO
eXJ8LLzSiucDi/Ctyj7kbcA+sMUf/XCdsE3qNe6Hiy7fj6iiX3c9Bd+6O/XD
hzQRkgX6aRAeckHdpx/Ck3gsR5Bv1MnAtvNh/ZAmxx9CIA+ni/wmpq/64eaH
9ay//tuvzDVMLz/2wz+H81o+qFmFm772FfZDMN1wliNq7QQfZ6H6ftht+an8
CMZj67q7W/bdAKykD4EH6u6giDaf3AH4Fy4Zewj5PrRIvVdQOgD+z156H8d6
duqZbhhuGQB1xnfqMXh+rV1aCJwaGoAkx5Ejerjfr1Spba+ZH4CIi4bb3HC/
2+13HnGjHwRmJuUKsg4ZmM7lwQLHIOhtrns9heen9TPRLZdRO6SS/A/gfrNZ
ucuTtWYQuJy9qpnRb98xNrv+XwNw+H6k2hPkcVGBe2R4cAC4B0MOfsb97CDq
ebWieQCMHN+neeN9/NGp6dOzkgEo+2B0ew5156WaNZdyBuDYnmqGNXfwvu/m
VWZMGoD43OW50/h8xyvB6PnafihxrL6/gPFZfjGNpBb0Q1nQ3R0qqG9zkeXt
M/rhxBMuSTmsp4pfKutCQj/Y72A2/4n1DvskiymF9gPvh0r/Lcj/Wdal1//9
vwGHmi8kLOI8u1wTasty7IcvvOZzD/A86Ds+4iGDvM/9Iotw3yDD/qcG6bRe
g8DoyKXzFv3iEN256cbTQTgjIxcfjH6eEvAXm40dhJIqbplG9Hs9iWSelTYI
5wwyj9ohj8XmTLqX3wZh05EdWpbIKynGi+9N1SC4BJcoFSPPnoEnPQUdg7AY
LqZ3F7V8UbPa6PggNAd1wQTOw33NtVmyhUNQcsDwwzLqGoXgDtO6IXCs57W2
xPmSYm3MD+oZAh36DskT+Lxy+YJpwvQQuNnoht3GfD1+ByZfLg9BY0lU/SjW
86qyz+guyzDsJHEzl+M8B9/cz3po+zC893AXoMf+dAvKhFMODAP7PuupevRj
i2N4LhwchkuvLxbK4TwIt3Rp9OP6TV27711DP2mGbI+pbhyGsPOqfVy436S2
sPzzXxkC9k8ZY47IQ0lU2SieNARnRs/8uIu8wk1clKN6h6Df72XLLuSrt8v8
kVv9EOg/EPtmiXpZYd/Wq0VD4BPwsPsfzkdR+kImzeQghJFoLMdR2xZZBDZ3
DsLQGeW0u6jX/9mflFE9CCub/QdT8fkFmbUr0cQgdCat8/PGfHr3Glzj0gfh
4aUKFRqsJ/rENrriuEGQOai6iQ/nIyOxUWtTyCCkRQwtDWJ/vaePSoUhb5Oq
ytFHyFdut8ejzpfDwGZH2zWL/m12/yoGacNwbaLg5Bf0e7t4DnvHt2G4oyag
PYB89hELA++qh4GViaTy3/djmKrtxfiuYTjxfcOUNr4P2Dps7M+ZGgaahPHe
93jf09Ge5hxcHoZzm0SD9VEb13+/wMs6Ah9hpOcvvu8pLn1o8fw1AkvRQo6b
8H1Pz5DO6xv9KHSX9vYHo/Yol147u2kUlIuu91jj84KsOUWb9ozCFvWloY+Y
72FItiiv+CjYeHhIXMP6CuU462gVR0Gkz/HnTaw/yaJZIvfyKNyVLntRjP2x
cNfzSN0ehW1xrCl/8D6UAbkP31Db/23PDsZ5MOlfu15HYxQOPuDRLMX9c+sw
8/58jMe047PkSzxPr74q15jBfA63J85sQn/HOC+O/sF6lN/VvN2L88EylanZ
zzUKXhWkj02o7+nf25e9dhQktZLX8iMf7ifL4/fnR6Du8K9MX+QnZcR+awvb
CDysTdtphXrHv/xPnSvD8Pr14of/vj+Xw33E302jv8nuWRyoNS8zO/l2D4P5
9p7UGsz/u4aZ0a1mGDgntXQO4Lx+5Us3iSSG4XKAweddyLt5foK2H3kyHuH8
k4f92arM7NSPHYb+3QN2rLifNwo39xR1jEIU56zMZ/Qr5raV2d/xUeBRbNQp
Qj83Kb3tNfo7Cl+Wzvw7iLw/yaby0zCPQdEjT5Z55HEkumT6M88Y/HKKPr0T
9QRrwd+gA2NA83j/vmTk56jpOGQrNQauvSNz4aiVPuso6Zwdg+kcMREV5Ccw
crlR7eA4ME5PzEWhDjjFDhInxuHQoIHbecwXrL5OmfPcOOjHu5noYj3zDBNB
rVrjUBxmz9qI58NdK53P903H4RJZIuwtngfE0k3fJZdx6GL+N9iG/RUtdped
eTQORzfVZZrgffeuZIedVvg4FKrdeyCG9yHBmhic+3wcmPStch7+t//bN657
8HAc/EUCw93Qz9zfzY+5MN6Y85Y/m5En93KN6j2Tcegb7xw5jzyi4j55FF4b
hw//itL++/7qPfzVYUp5HF4PHa95jlpzeL0/k9Q47A91pnuH2seL7wDfgXH4
lHeomIzxkq/sjxZSHoMXPvZ0b1Gf+md+RFFyDJyD/zrOI1+ZCSdB0/1jIN/Q
G9CH9bSKP+17tXUMursnhixxHtVr+LKXGcdA3U1QLwrndaPcjjH3xVEoMbnN
ZoK8mRRi3h5FnjZ6wafacN53Od1cFkDeWscP7CtGP1hcj5v1bpiAHSkbbVXw
vKzat2v/w20TED53L/7Qf+/T12fcjA5MwA3Ln39McT5+d+nGOUpOQFje4oO1
6H/us4H4lDMToFjowb6MvCp+jT2guToBCppmp/57vz/NJnbYxGgC+ifeOTL/
9+cNYkLenY4TQCh8Z4/Aecl81ddme3ESfmUzOaei/rmL89Oo7iT8s02h24Xz
sF3Vc/qa9ST8nEw0J6Mulduv/9ltEvY+apAQxHngMFSfo308CZuTeTOysZ4H
euuf74uZhOZZ2okEnIen2kYaAu8nIVWOrWgc58H+ym/V0S+T8DTzw+gOczJY
1jlL2eZNQjVUxYSjX6l7Al0rcP3lBR3LbPRTf/bbngmMF3SPhvsO+u1lqUrf
ifk0hXsDu5FH4acKurfuk/B2v9bKEPJKv/pD4JLNJCSGWtc8Rp7iMvecxvQm
gXFFJLINtSGPF5+j+iQcesu9cg7noSSxqqLHaQIWxOrCj6GO3R89bWI8AdPO
whsLcb5uLgt9+oN+si8feTWFz39k8pWPUJ6AYn2G1jzMZzKsk3FRagKaZb/d
OIT1/BlP3Ch0cAI2/2nbfQrneZR0Rk10+wScTKo4/wf7W/87R8OUZQIq9zq8
yUU/tC/zrzcWmoKbY5tt9NGvJ00gpio1BX+0drnqoZ+ul791m52ZAodKtd/Z
/33/PY3+kHVlCkKvBncZIo8DxrvEdhtMgctH5z+WyG8ba2drqt0UWKzUtNfi
fldRSl13/sEUjA4e7QlA/UxrbBM5eAqqumQ2ncXzf2p/VOsF3Wk4L0Ay0EXN
U7p766LlNESV5ZBrUXN/fNIRc28a6mdnPKPweTURVaejAdNgpJwaRmC+j2Lf
T2dETkPTeho3aaxPScryE2vSNExq3bzBjvVbVM0rKGRPg+CY8A4Z7O9byvFH
Sj+m8XyStjY0xvtj25Of31BbVES+/mpKhkuRtmktuL5BKyjyG86H8bZfdF8w
nuao7k5j9M+6c5OoTdQ0SOjwS+Ti+fF5/eM0usBpuEQnyfsB56VMt4nR+f40
3PzUe0IV/Q8XpO9os5qG/hrXYyGoL3CVVonoTcNKsx1dM84TWZGbqfXJFLiF
FKQTqMvfBpYJeU6B6MTCTlXUVXl86x7aT8FiIfHUC58PhVtms+i3gfkaD13M
Jyo9FWWvOQW/33943o/1RYsrCHErT0G3lnrORvy+cYrPi+5Dnq8qPBb6sL+9
RXeudSPvn7GVucn4/RdyOPf2yaVpqKTju6skjfOxs8msm44Eb97vKPPagd/H
PRwfPdlIwOow8614Lc5T2MnRuT0kuOx5z5zx1zzk05Y2O50iwbm7ZVy5Y/NA
utt5p12XBFs+8/4NRf2NQV7nuQcJfl1opY2dmwdNm2nYGEcCq8R5Zz6MJ9Uy
y5SbR4L4DZzLqbz4fdVv9vJmPQn6uTguXjpBhmINfRPFHhI4dFgWp+D7Wwxt
BcP5QRLIpxBbd7mSQXbKXpy1lwRGKa1Z2yLxvJRtWd/fQAKdc3eFhD+SoWFj
wlLzNxIIziaGaP3A79ulALmoBBIEFZLqBWvQb+M61pteJCiZiwmuRW3be6Yk
4RYJOvedvapQgt/nVtt9GBVI4Ka9LU3sExlaOB9IbRUkQZLS25WlaDKclPB5
xsZBgpWDNvefuOP7kFM2c+YaEuQIyJ45r4v3TdNJWg30t/ajQjtbzzXCfmWz
wh9XKQg/JiffJGlEBKS9avVKuU8oLH0dvRHtQjRY6uz8yR9E3BFL/DKV4ksY
RuilPRLGUX9Cz0X/4ymx+E0oQeVRBCF0r5r97atIgq+wTrXnexRxoGrRo80k
jlBfo9xnlhlFiMowr7BovCY6aDfInLoWQVgmd3O4FCUSQjXjnQX9oYRsDvnI
a8tkgkt+pm7xRiDx+o0dQ/HO90THiSU+w2lXIuxJQjJv5nsiXdmbt/D7OXhF
+f1gyeHL50geQH1+L7nWr8wsGKwo8Ut3fV9hiX0GRyj5na8M3AjkigJqfSRN
fvoc62g4TKn/2+Z3NkIe0aBG6S+cc+2PcMUooPZPPyVZ1zT+DM5Q/GHY4PtB
sioYHlL8I9OsSW+vfrDqL6efW6XnHg0w9V1hlDV0hPxfQQPy/GbAwHrA/HH+
PcivK/iwuc8KjAueTC5EPgCRoDjlU2QbSLrMZLqs6wOyhtaP2F/aQeGG3qPb
RfxAN5X3qfuYPVRKTvxiWxcEW/hV95W3OEDIqb3x50jBQFpIK9fDPKHel70+
dj2F8OmdrHNhjmClFvMicvPbVW1tmxVYzZK4ur7YK5Dfmj5pNR6jWvDFyT9J
q/lYlxW/Z06+AwlKPd0Ct3cd604GQUq9Vy/K2/RVpUAspR+V+Ic6QrnvIZbS
rzJFu78MT/5xT4vQoKzPF1qJz1rRIzoo8XSd3L34mQyJDZR87vt20BdeNyHW
UerJz3bmip01I4oo9YpE/wSxKgvCnNJPj0q0j/6YJWFO6VdE6h6rt7IVEUjx
Y1VT/KKuz6f4SY2XRfGbmu8FhYc1pR5tCi81Sr2kjf/jGUvpR43CW5bS7yPG
D+wOThmr/NdkNKznmcxY5Y8fFIetb39c5Z94Xb1LpPPjKv/kI++fb9LMXOWh
Ep4q3FCXucrLKS7yz67zWas8nY7snf1amrXK+6yk7s0bL/L+vy4f11zg/rq6
3rGhhV855OtqPG7Jttz1G7+t5uNhO2o37vttlf8DgSKBFBpilT+Rm6FM50xA
OqUfSf0meDuJmtLvcYqm8v9KWU/l70GJR+W/hZKPyp+LUg+Vhz2lXiovZUo/
VJ7KlH6pvB0pfqxqil/U9WcpflLjJVH8puZ7Q+FB5X+SwovKn5bCM53Sjy+F
ty6l3wQlo7/pxQXA97F9IHDeGFxYpQ9z0hUCTW2cyrSgBdyQsI46crIQ8gMU
coTUraHBjvHd+J1CSPQRlO/KsAEe4DbkySmEVmYp+y9ZtuB9Yykscr4Q0qWy
1x3UsgPPiN4aJbEi2GIfE1OBfALpFR//sy4CZ8NLdPY+dhDc93UP0VoMNAVS
98/TWQHTHHvv1c0lkC+b0F3Bbgk9j2/uzLhUArXZCqfW3TaHIdWuwDfBJcDW
3LPl7x8TaNzuyMVRVQLBhtwaW5oMgdaNl1TLUAo003leUr/1Ye/4+m+EfCm4
D+q7aP7QhiDf55Ff7pWCbFWei8JRdaiK40gtcyoF0sG9e9MOWRG/22TuGkmX
gvEr8umH6TYExwfGjWdoSkFQeeyqjKUdEe1gvRJUhPnlq/unqu2JK+/05XV9
SkC2tHtTZZ0DMe53j7PnTAls+a399oSjIzGpGt52hLkE3EUUoOOLI9E/cJTn
XlUx9Aj8ifeKdyR61uV5fjEogpHtRTePR9sShmSjUn7BIijVdgom77Ylgq/x
+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
8oWfSiGD04G1hd83RMAHHVnaogoymAm+8qhVjMJ5EuFxmyDD8/Ie4vORKGjh
Yc9qYv4NPM/M9JibwiFbqEJNft9vENw5GqmpEwrJup2fQqV/g+qmgeScCwFQ
EGUpuOnsbyiersp7VH4HdkSsvZty4Te8rTYILrh7hagQGri0oozPH61ty6bz
JLoeeOaa4/Ob2oPpRueCCa2a0pvMGN/vjs0ax73Pic47284/xfyquae98yOi
iIV8owRxrI+N/O+I4Ww0oREqqOuC9d9cCD8rSRNDiB9MyPyXTIY7hxbGeQuj
iLuB67YpY/9Ll5c6+QyfE3T/Qu+Goj/zQVbkH4pPCA35eL9o9E/H/Nzfj189
iZ2Blgye6G9R10BHdpg2cWZ/RPwNVl04ubNu5YVHGegeGRRV2qwEclMm2ov3
S+GqA775nzAk6qQl62SflkCqeu7vTRbuxJMeufMW1cVQf4rH8PDZIKL7btnU
UfliKN7QIvyZ/jlx5+dRl8K/P2Bq/zJ/sdhL4vLc4Lq6fz9g2Ys1iNs7gfAM
Cbx+TLkYTsz1xz2Ye0O0RdgoDbUUAwvN34LUmCQicIW12TKmBGynnJ7XqCYT
3aL71PsDSkG/7a3UvoFkgiFCRXFXcNnq76I0thK3QsphI+V5zyOPMls8KkCa
Ev94+D553TOVsELJHxjDLMzWUrlaX97Jj54OAlVQSqn/2ZXb7F67q6CJ0p/o
p5oo9s7K1f7dLl6RabtYCboUf2D+Zu7aoAqIpfhXLS98WCWuHKj+1nOU+iXF
lIEKV2lQduIjaH53N1eesRzo/hptsRN6DPQdZ9+V7imHiYd1Dif1n8L3/hDR
9SfL4cbvgyGFx8JgIOzJL9LFcrCmPT++hSMcTmf9EbyjVw4StzTuBs9Gwpt1
C1ER5uUgHdl5zKE5Gr4Hx2afsSuHHe7s3gw3YuFybZOPp0M5nCu/OWRvnrGq
K3aJ/vy55+Pq+gBRTqamro+r8ZaVuaZmn2Wu5vMM4PUqPZ+1Ws9OQXv/UbpP
UESpd9Hv54+xrE+whtLPB1/W4/qG2dBE6TeVoqV8eevouMtggbJ+w5ULPfcW
S4GXEk/lwtpr0FcKHpR8Qi/WP9OoLoUlSj3lri/1Kr+Vgh+lXtODcVMpH0uh
jNKPStxC/b+UUlCm9JunV7Sm6F0pbKX4QdVHKH5R1x+m+EmNZ0jxm5rvMoUH
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
TGS4Fb6gekm11jpnhNB7Z4zvoiDqZ0v62TaM9GbXs51wRXjiv2+dVNxFhvt/
RT5XIbzqI6LHTZBfnHeDJRjHqPBtShengN5jpQ/cqID4DtyX0SYgf61jrc95
ID3s6y59eYtiQX/nsa9IL1e8qtMsikflVdhWkZ4s7XmSbKieU8zYaWWk9/L+
4vPDyP+0Z2tcMciPS7L4UFeE5/tXfs5NalSoLXoaU4/8X2rZkfcC+SkVz2DV
ifw3vaHnJIL8HviSGvwW+e9V0zt9R2MB8MLGNslID7ZZeYUynQUo0JE4a4X0
8hhPiTtmuAAMvZxpTkjPj4QPaeVmC5DjHHy5Bum9/YXcz1u2C3CuLU7cAPlh
F1PYxuq8AAeONZbIIr8Ybuv2l7ktQM8C96Tm/8573kG3Bz4LUP09guMzip8U
fvbOnVuPgx1OC9v8Ws/fJ02U3MuwSK/npqLP17xpkd5vcnFWy5prkY5n68/x
28s7F+l4nw3qVdkILkI+jQ8HezF33f5FOl8sflufdEFFfD2/4C3e8bnIej3b
7SvM7kLr/UpdHpgfEljHc2S3xYvQXet4LxadXiziXefzbnmxJmrnOt/UnbYJ
Z3au64HFmF5YPqYnVg/TG+uH+YHhwfzC8GJ+FtL4YH5jfEO7x//eN1rXYzeD
mkarxSLd/5D/vuYo2a/rmT/xuaTNZV3v/eGXVuw81v3wzMIN7Xq27te2e5bT
rYGLdD+FxecC/d4u0v0OwVWHftuwRI/jvNRl3NmW6PnHFCdBeusSvV7gDZuD
P/iW6P3WmDeYu+1douMRXvnv3ibxJTred3NWne5Hl+j+C+5u2td7YonOF4sx
PbB8zH+sHqYn1g/TG8OD+YHhxfzC+GB+YnwxvzE9sBjTC8vH9MTqYXpj/TA/
MDyYXxhezE/Mf8xvjO/MQiRnjsMS2AxUKZ9B96GFzlZhnodLcPtV9rd4LTRf
fHXheO25BColHxg19NB3yTYT4RdLIDao1ndenwx6h7gSq4OXoLhJ/OVjpL9z
dtFVh3dLYBDuU7FsiM5PtiCCSOwSRPw7G5mP7ms9/zOfCUlL8CBFP7UAxd+c
Yw1bt/3v773/7HmB/Dr7zm3Ri38ZPEOqdjWh+7uXKlksKbwMEiYCDNdRf1cb
a5H2g8vQrNt1lx/52TcdkW4ivQxtScafxDXJ4HL2Ve/ASfR7k83OHhpkkJeW
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
PEABLtyJbVksLcA5V6W9d4gCbc5xgSamLUCFENZsFK+4K89uOd9Bj/W+P8qw
uNdBz6/XPfYrMaaDXm+k/5hjRlMHvd+z6bwek/866Hhs377kSzvQSccrYidq
aa3VSedzzdZRyc+zk84XizMk9vVx+iO/aPkmJtOx014UsKHVcxTa/eeHGwV8
af3GPxsEkl0pQKbh4U4/Dxvur+Mt2ul9Rx7prUvjI7X4PirIHulF46ue2Dj2
F+3HVpoeWMxJ0wvLl6DpidVbpOmN9ftM8wPDM0LzC8P7gOYnxmc3zW+M7yu/
THsH/HdoNO01dkHnZ+nAxv7TTF1gGRPltxntZzbLx87RUl2QG+1y6k0bBZRv
ZM0/MOyCjO04KZYuCjCEu9R8edkF1z7H4cyQ/il3YkRli7qgqE6RMQPtX8av
NXuHR7tA7oPRCyKRAn5Hr2VFb+8GAzbCh1kU958NxU9E9MJc841j2qjeRGk2
ObK+F7Q5c3quov0sm6tvJLrUCwG3t8QdQ+fFMQULHVthPKS/H2z6g86Xzf33
lvWu4uG9h7jSF7S/TbZWpja74UH3r2aITg0Ffnxl25OTjIdW3sIfY2XofE37
pzXeiYeli4VrdgUU8C9Z2vmgHQ82lKpfXx6j/WUen5qeiPKz/7TvQecj9w/x
rWoP8eCbIyL0HvnRNbkYek8ND/7yHeIiaD/vypCokhHEw2jkf69qLCjgOMxs
8nmuFzye6+p6mFFgZ8CAGUt1L/xNl+/UQPv1NY9W7+WwXiAqVRbKo1iBmTtz
jbMblJ+eE+u+S4GjLxY+qA93wfBZijcB1R95c+lA9ZcuSJsJLF5G58kYi4KU
2/MueJn/NegwWg+cVjIhITe7ILbNYacrwlt0jNzHL9EFgxoXG7+j8+rM/xVl
3fFQ/39cyojICkWS0PqmMhvqFaWNkogooULDSCIjkYakTakUkkhDJJtQlJVK
IuTsdd25c0dFfq8ev3t/7s/nw+ter+f4vFeF33YxmIB56rX5GwXj93w7Yel4
3WdYI9xml4v73dopEy3TGA2Qdf69t+AT9C/z4tUZEo0QlRu1oeQ5ng93Nygx
FzRCq6FvelV6L3xwWLhBdVMjXGkc3jHrNe6f8iF6tw82gqreZO3MbPw+3UO+
bzzbCMK3dN5eye2F1V5jEjMTGyHT5uTQ0zw8n61UIyaWNkLC8okKEpiH9rej
Sf2+TRT2yruq8Sm6iarPL5iy61FmE9VPQ1Hi7866JmpeV5XTQDW7ieITfG2D
4rh0M8XX3Hdi/JfFzXCTp+eoWsSPVabNlN4jPOy9aKpZfAi/Puq3kT8tkN9v
q5/D1Ho//ry731uPhvnw+Uw5XXPlJ67HPB5fTZXEMVkvvh4fuz3VXA++3gsB
dU+iPfh+EEz8IvVsnp+kH/GbzCN5ED4kL8KX5BnN02PMy5voPbdtwy2OTgvl
R+Lvmro921sov7xbL+7VdW+h/JRMdL/ofKmF8rvG9p1f85MWKg+DjHezLn1o
ASFeXiGZRhb7elvgFS/P4hjnjxtEf0A8L2/DyAZO9J5WCtsJ9OuKH22l6k+f
nmd2PLCV6qf/bN7sqohWap78ZMtbk++2Unyc+k2ezX7SCj94fLe0zDk2JaeV
0mOr0yP9pryV0ksw8WMzr574RfoRP8k84rcejw/Jg/Cdy8uL6DnBy5PoDefl
TfwgmPhF6omfpB/xm8wjeRA+JC9THl+SJ9Fzlpc30btgK9v1CdAgpPtaLi2l
F7YeUhBZb04D7w9jBTfQr7VBJk3T9tIgKfzLtrPo57Xx+ghpdxr8qLZWysD9
k01bGr/4FA0yuS8NlTGPQtauqwcu02CC0/SN+Xh//LX5blHqfRqEHYtdH4X5
BfmsvTTynAYj2WWvHyF+zRL5bRLVBjNeyc4QwvzUPEQKLj1qA4awxtBW7B80
73VdWSbiNZoPKzPwfhl4LrHvXRsoZ8dLhOF9te5C2v2Br22gEaYWfgL5asGP
TaVd+C7ttO9JxHyNRsqMXbj4Dt268JBMEt4XDAs21Ai1Q2PSvPLCOLwf9Gho
Dk1qh4DiiWNaeB+a8H7CBRtOG4T/uPXLH/0Wy/ycfqGzDaxnFR8Mx/0/V9do
YmRdG8z6vvqeHd6vbC266e5v22Bjerv/EN7nIo2K/i571QZj6wM9duB9zLI3
oIb1sA389Ec8T+L5UJNfJ5h0ow2EmdUCboijjKSjbJ7RoGMoJFYc+y0slf4k
HUuDqQmepSWIa8Qdc+ovIXb1kFuH9wOT11f7MgJp0MZkp1zE+6ZvykHmyyM0
aFD31rqNfGdxlq//bk+Dt6XLPrrh9zDFcLupgRkNcuwPmf7F86182Hbjx9U0
UBc8ytyG58HrAxuPv7rVDrtl9b3PJveCaddRp9Jn7fDoh+uLpBd4H/+UG67+
th2iZhtavMY8lB89elL+vR1UIv8Up2F+R54d3JPAaofhm9OkbhT2gv9g94yk
yR1gvqBuYDfer3V0Ste8U+2Ar1sL00XwPHbas2cW26ADcu5GHIxC/AQadOJO
dVL4u9sxmeqoTqr+eqr5MvrTTqpfHKNmiFnaSc1jDV9JqvjeSfHZX+Ff7s7q
pPi+eV3OqBHtovTsMmA0t6h0UXqtefh4uMqKf+crqV9Q0Df2ZT+/34oARbu3
e/nzXk616f9gy+fTIAKxPVZ8vqePnXqjasnX83vbzd/eFny98hPK13dt5/tB
MPGL1BM/ST/iN5lH8iB8SF6EL8mT6Mnk5U30OojuY0q874LqHMtqdfRjmvK0
804tXXB38aTKpeiXyf2EqMlDXSAl6KGij36aQ/pm9uRu0DS4raeFfi/d3Jwi
q9oNH923qypgHjnL7O7Z63dDYePIpZ9vegGcqhglW7thnnxzzUu8XypvmrB3
uVM3pC9d1uiI+WoW+SZ9etADN0UdTX3xPRlnZNq96XUPhEj9ei2LWE3zUsqr
qh6YU2pTEIP1OiYfU0Q7ekB9x2uQxO8h97H1C73fPRCkf6DAHd/7vwRotxdL
4bo7NrznDe5HSuWHnXs1cF+oYXcJ4f6h4s/StlqJ7+ZXBrlrnuL73ku3Igux
fkDPqUu4fsr2BOs4afaCi8jykGBcf9HfB9Xzsd+QbtXiAPTv0so2j884r2U8
QfEMvs+eLMmSSkc+umX9i+7YIV/j5Squ1T1gYreuqATf8/cUyisEs3qgSdUh
aNy6F4qW3rC7FNcD24WEvM0RZ+Yoyw2hH+5a3wVW7OyFlcs3fgkw7YYQzXVR
sYhzLEWlpQ26gebVflkB65P13koVoN+t7WGSD7H/7E+rxK+KdcNZgfrLxvb4
HvHLmB2Neb0oMWEw8b345uU862bM8+vBTQdTcT8qGI8/74F5654Wuu6J+1nY
2kfN3Z29cDlVRS7vGfpVUlnB/dMLjb4W25pf4fvh+XS2lUwffMhRZw1g3n0h
k+T+zOsDi7kdjt1FyPfi23d10AcLF/99/h7z2VRtEtpg1QehJfkRV8twP5VS
Sx450gdiXUk7VuH9fOnKvHMaYX3wU++4SCXik8oGdz9X9lM4ZUPtSYGOfqre
8cLTB7P+9FP9PCoX2c+RGaDmvfnyc+rfeQMUH93HDUviYYDie+WG5i5BqwFK
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
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.03132485025768139], 
         ArrowBox[BezierCurveBox[{127, 304, 307, 309, 315, 317, 320, 127},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          127, {-0.03250377291762674, 0.10086141275782456`}, 128}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          128, {0.03289885271679099, 0.09969725310938465}, 127}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          128, {-0.03271760085227621, 0.29944158064114584`}, 129}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          129, {0.03324941028093443, 0.3005607724447162}, 128}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          129, {-0.03321229089105407, 0.5003806693659778}, 130}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          130, {0.03240019180923478, 0.4997034642015894}, 129}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          130, {-0.01059256814536822, 0.6329928351363878}, 131}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          131, {0.011303074516277004`, 0.6331692835443032}, 130}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          131, {-0.010606754655546696`, 0.7002479186180591}, 132}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          132, {0.011589951174451434`, 0.6999817874669013}, 131}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          132, {-0.009576698530524355, 0.7666090234402888}, 133}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          133, {0.011905933858367903`, 0.7664324673362019}, 132}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          133, {-0.015162140345341222`, 0.8494311763068628}, 134}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          134, {0.017904068075411533`, 0.849472005516986}, 133}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          134, {-0.015687901661973137`, 0.9500351048640095}, 135}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          135, {0.017493816678192046`, 0.9503021129141247}, 134}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{135, 583, 586, 588, 594, 596, 599, 135},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{136, 606, 609, 611, 617, 619, 622, 136},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          136, {0.18207656724910007`, 0.048892887281704496`}, 137}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          137, {0.21521241469304114`, 0.04864703204407703}, 136}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          137, {0.18378979521833502`, 0.14978726402629933`}, 138}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          138, {0.21682095635188348`, 0.14894065070465753`}, 137}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          138, {0.16692938525700524`, 0.299027869085197}, 139}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          139, {0.23272363281963032`, 0.30018946322960505`}, 138}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          139, {0.18773512633149092`, 0.4332736191305972}, 140}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          140, {0.20971678887762138`, 0.43283592698163686`}, 139}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          140, {0.18806532416804603`, 0.5005485696633938}, 141}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          141, {0.2105018969677598, 0.5006194583275627}, 140}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          141, {0.18952651509454832`, 0.5687355152151714}, 142}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          142, {0.2116156497265485, 0.5678177752205154}, 141}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          142, {0.1862658475514349, 0.6523096738573431}, 143}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          143, {0.21927642740802725`, 0.6517802990499231}, 142}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          143, {0.1852326686054775, 0.7512995957658672}, 144}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          144, {0.2179386487674258, 0.7526087346417984}, 143}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          144, {0.16746924124830526`, 0.9007252179584696}, 145}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          145, {0.23253171745267123`, 0.9004587513710831}, 144}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{145, 917, 920, 922, 928, 930, 933, 145},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{146, 940, 943, 945, 951, 953, 956, 146},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          146, {0.3824776261406775, 0.04974054570541636}, 147}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          147, {0.41590725979851195`, 0.05039694176930478}, 146}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          147, {0.3826169380484001, 0.15012222428539115`}, 148}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          148, {0.4148790501501132, 0.14975817023903873`}, 147}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          148, {0.36571184743965873`, 0.2992095670458596}, 149}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          149, {0.4317563398071626, 0.2995827643106702}, 148}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          149, {0.36566111715664756`, 0.49910162188314866`}, 150}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          150, {0.43094589244429216`, 0.4990116500095628}, 149}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          150, {0.3877165242375715, 0.6308562124256087}, 151}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          151, {0.4091284801368801, 0.6308679122517379}, 150}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          151, {0.3872958414227163, 0.6977395488397464}, 152}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          152, {0.4098382992383265, 0.6976327575027678}, 151}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          152, {0.38733839784377755`, 0.765724407823686}, 153}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          153, {0.40960476426730036`, 0.7658940084848104}, 152}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          153, {0.3816735263363508, 0.8495511710860923}, 154}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          154, {0.4145153329078497, 0.8496296466681703}, 153}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          154, {0.3817330094391469, 0.9490223238722096}, 155}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          155, {0.41428635984060175`, 0.9489995904244084}, 154}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{155, 1251, 1254, 1256, 1262, 1264, 1267, 
          155},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{156, 1274, 1277, 1279, 1285, 1287, 1290, 
          156},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          156, {0.5849925464337934, 0.05133766338467598}, 157}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          157, {0.6179142370736627, 0.05132118192350781}, 156}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          157, {0.5847656219457629, 0.15049652065612412`}, 158}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          158, {0.6171815888216287, 0.15082858783469283`}, 157}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          158, {0.5667799735707054, 0.3001812637680435}, 159}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          159, {0.6328529856669098, 0.30061031109246}, 158}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          159, {0.5677986783920337, 0.5000044154500095}, 160}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          160, {0.6327776866737911, 0.4992650994063589}, 159}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          160, {0.5687616321372937, 0.698403741572094}, 161}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          161, {0.6344803329112941, 0.6982663911119157}, 160}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          161, {0.5851739358507018, 0.8486584148285401}, 162}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          162, {0.6183473318376207, 0.8487039078044445}, 161}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          162, {0.5850047816564347, 0.9497084803951018}, 163}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          163, {0.618292664437994, 0.9497365982011065}, 162}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{163, 1521, 1524, 1526, 1532, 1534, 1537, 
          163},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{164, 1544, 1547, 1549, 1555, 1557, 1560, 
          164},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          164, {0.7817128924174345, 0.049767980539566686`}, 165}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          165, {0.8146945087604488, 0.04963812764625624}, 164}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          165, {0.7833619061287836, 0.14950496077548145`}, 166}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          166, {0.8157738854298481, 0.148737496563692}, 165}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          166, {0.7667182519114901, 0.2999246371182579}, 167}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          167, {0.8336213682787201, 0.30029618437229866`}, 166}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          167, {0.7842205331607963, 0.45166983389624554`}, 168}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          168, {0.8168106043119819, 0.45107085940045244`}, 167}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          168, {0.7848531628816556, 0.549537917170365}, 169}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          169, {0.8169478101756409, 0.5498837069736658}, 168}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          169, {0.7838301490689679, 0.6481699724563492}, 170}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          170, {0.8165393969995479, 0.648294952473299}, 169}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          170, {0.7827781620669658, 0.7482177934604974}, 171}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          171, {0.8159698506288976, 0.7486261057298627}, 170}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          171, {0.7668825747024587, 0.899849758136542}, 172}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          172, {0.8330338307958456, 0.8990571830862472}, 171}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{172, 1823, 1826, 1828, 1834, 1836, 1839, 
          172},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{173, 1846, 1849, 1851, 1857, 1859, 1862, 
          173},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          173, {0.9837334027305679, 0.04956100095994488}, 174}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          174, {1.017139449593858, 0.048993194007999084`}, 173}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          174, {0.9848199276156021, 0.14919972385372676`}, 175}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          175, {1.0172017652342555`, 0.14938969841685867`}, 174}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          175, {0.9905552180235432, 0.23208788616131198`}, 176}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          176, {1.0124615564803885`, 0.23157064765223065`}, 175}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          176, {0.9914988759831967, 0.2987355284140649}, 177}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          177, {1.0135511839102103`, 0.29858405698326357`}, 176}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          177, {0.9894730405590588, 0.3663299917311953}, 178}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          178, {1.012332444240208, 0.36754854385970775`}, 177}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          178, {0.9820375616083509, 0.4509441301466893}, 179}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          179, {1.014592479699786, 0.45142768559904467`}, 178}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          179, {0.9819202767699927, 0.5511423176809498}, 180}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          180, {1.0149301188986624`, 0.5505862917490479}, 179}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          180, {0.9880535710808364, 0.6338793393672114}, 181}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          181, {1.009729889731875, 0.6341284974504592}, 180}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          181, {0.9872084466029335, 0.6996924201353033}, 182}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          182, {1.008844795437625, 0.7000122990087116}, 181}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          182, {0.9889078836300057, 0.7663875171883532}, 183}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          183, {1.0105612260873686`, 0.7649442226847637}, 182}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          183, {0.9851978705372735, 0.8483670587410227}, 184}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          184, {1.018012333865862, 0.8485799764449569}, 183}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          184, {0.984105219209357, 0.9489419538904764}, 185}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          185, {1.0174808242819935`, 0.9492631926295301}, 184}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{185, 2253, 2256, 2258, 2264, 2266, 2269, 
          185},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{186, 2276, 2279, 2281, 2287, 2289, 2292, 
          186},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          186, {1.1868101185321032`, 0.033162362497554665`}, 187}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          187, {1.209324569776829, 0.033199990963881036`}, 186}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          187, {1.1879900385124587`, 0.10042768384200836`}, 188}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          188, {1.2095441060247596`, 0.09992980012134482}, 187}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          188, {1.1896672428863089`, 0.1663174140959188}, 189}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          189, {1.2113985021223768`, 0.16565381977519342`}, 188}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          189, {1.1848060451373583`, 0.24817526561668107`}, 190}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          190, {1.2172474957522643`, 0.24851399215078443`}, 189}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          190, {1.1835431935433727`, 0.3487171413630104}, 191}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          191, {1.2171579457054176`, 0.3488231947070781}, 190}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          191, {1.188941863594196, 0.4333917762320976}, 192}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          192, {1.211031872511239, 0.43352495235068045`}, 191}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          192, {1.1881202823716321`, 0.5008733163659639}, 193}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          193, {1.2104782778547871`, 0.5011924101844445}, 192}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          193, {1.1883345311816704`, 0.568206102072633}, 194}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          194, {1.2100759997753758`, 0.5679488475878554}, 193}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          194, {1.1662868229760268`, 0.7008842859885924}, 195}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          195, {1.2319988686589975`, 0.7011825977912817}, 194}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          195, {1.181213975984076, 0.8517021193334596}, 196}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          196, {1.214758324089482, 0.8521646391743971}, 195}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          196, {1.1823055934104196`, 0.9508507948696281}, 197}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          197, {1.213672697950406, 0.9503863044552139}, 196}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{197, 2651, 2654, 2656, 2662, 2664, 2667, 
          197},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{198, 2674, 2677, 2679, 2685, 2687, 2690, 
          198},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          198, {1.3666477755249076`, 0.09813363276616593}, 199}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          199, {1.4322310745580007`, 0.09867669201636643}, 198}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          199, {1.382012742492078, 0.24870531099486506`}, 200}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          200, {1.4152838572729878`, 0.24868262459214324`}, 199}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          200, {1.3819823194761078`, 0.35013184008866344`}, 201}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          201, {1.4154284003077122`, 0.35011699451449385`}, 200}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          201, {1.3875889890014708`, 0.43462591132231687`}, 202}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          202, {1.4097387241158787`, 0.43466805623214816`}, 201}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          202, {1.3881838710892906`, 0.5023811467093672}, 203}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          203, {1.4104337774154827`, 0.5019147659186227}, 202}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          203, {1.3892701428727083`, 0.5676655066602693}, 204}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          204, {1.4101787322952983`, 0.5678585123925104}, 203}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          204, {1.389116940013945, 0.6326942460067838}, 205}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          205, {1.4108038525196545`, 0.6323460354432126}, 204}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          205, {1.3892576175649016`, 0.6980402663882699}, 206}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          206, {1.4107703467095387`, 0.6983532302537359}, 205}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          206, {1.3875985132272293`, 0.7657657636787291}, 207}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          207, {1.410622679509178, 0.7660470137415839}, 206}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          207, {1.3879130424416843`, 0.8354056233950926}, 208}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          208, {1.4104906616528354`, 0.8350643488257653}, 207}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          208, {1.3883099091497282`, 0.90276779374033}, 209}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          209, {1.4102483888236539`, 0.9030582252356217}, 208}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          209, {1.388047450659192, 0.9677782241979506}, 210}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          210, {1.4088581514613425`, 0.9680313335330982}, 209}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{210, 3081, 3084, 3086, 3092, 3094, 3097, 
          210},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{211, 3104, 3107, 3109, 3115, 3117, 3120, 
          211},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          211, {0.031760996136785014`, 0.011810146500988907`}, 212}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          212, {0.03176099613678504, -0.010115286456759947`}, 211}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          212, {0.09842766280345173, 0.011810146500988997`}, 213}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          213, {0.09842766280345173, -0.01011528645675989}, 212}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          213, {0.16541940142774697`, 0.010557314706244941`}, 214}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          214, {0.1646123108678422, -0.011316501404476629`}, 213}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          214, {0.23160404949213725`, 0.009356099758528387}, 215}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          215, {0.23160404949213761`, -0.012569333199218975`}, 214}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          215, {0.29827071615880374`, 0.00935609975852822}, 216}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          216, {0.2982707161588045, -0.012569333199220283`}, 215}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          216, {0.3657570806896536, 0.010097838012756958`}, 217}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          217, {0.36603733362998553`, -0.012458931867811798`}, 216}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          217, {0.5004750571336711, 0.03335369850218059}, 218}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          218, {0.5011436426087085, -0.03282974582338171}, 217}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          218, {0.6347616682482115, 0.012241146292379141`}, 219}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          219, {0.6347616682482098, -0.009684286665368507}, 218}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          219, {0.701428334914878, 0.012241146292378328`}, 220}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          220, {0.7014283349148764, -0.009684286665367399}, 219}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          220, {0.7666663991399612, 0.010819684853850929`}, 221}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          221, {0.7661015537655653, -0.009980299101392028}, 220}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          221, {0.898965887944539, 0.03217115781327773}, 222}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          222, {0.8986135834383437, -0.034120466153701894`}, 221}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          222, {1.0495731867255667`, 0.014933810438939583`}, 223}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          223, {1.049573186725567, -0.017954338997682985`}, 222}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          223, {1.1487727951330315`, 0.014926905954409908`}, 224}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          224, {1.1489249424717864`, -0.017484813960290956`}, 223}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          224, {1.2992365266689812`, 0.032065601729283355`}, 225}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          225, {1.2991530646473386`, -0.03441466454841638}, 224}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{225, 3575, 3578, 3580, 3586, 3588, 3591, 
          225},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{226, 3598, 3601, 3603, 3609, 3611, 3614, 
          226},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          226, {0.05196741699571261, 0.21615531056333456`}, 227}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          227, {0.051967416995712785`, 0.18326716112683492`}, 226}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          227, {0.1518013051997149, 0.216028728014605}, 228}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          228, {0.1517585975828801, 0.18326388651489153`}, 227}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          228, {0.2349258191202148, 0.21054409516429562`}, 229}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          229, {0.23492581912021523`, 0.18861866220621185`}, 228}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          229, {0.3015924857868813, 0.21054409516359435`}, 230}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          230, {0.3015924857868821, 0.18861866220830117`}, 229}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          230, {0.3672111480423257, 0.20987088395039077`}, 231}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          231, {0.36701613816471507`, 0.18869892464821167`}, 230}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          231, {0.44930146708682595`, 0.2154325046328729}, 232}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          232, {0.44930146708682595`, 0.18254435519631446`}, 231}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          232, {0.5497278660152051, 0.21610258705010918`}, 233}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          233, {0.5500423632464323, 0.18283053586057862`}, 232}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          233, {0.7008561722294656, 0.23210287539099878`}, 234}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          234, {0.7003472649834117, 0.16623912269800192`}, 233}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          234, {0.8507346750380632, 0.21484137981103738`}, 235}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          235, {0.8507346750380648, 0.1819532303741417}, 234}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          235, {0.9507073589786981, 0.21490312896692157`}, 236}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          236, {0.9507493433103659, 0.18201913915235376`}, 235}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          236, {1.0340553605843321`, 0.20948767950236843`}, 237}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          237, {1.034055360584332, 0.1875622465438763}, 236}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          237, {1.1007220272509985`, 0.20948767950128885`}, 238}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          238, {1.1007220272509985`, 0.18756224654803919`}, 237}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          238, {1.167716528817789, 0.20987186537048994`}, 239}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          239, {1.1678805696676908`, 0.18767684474532326`}, 238}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          239, {1.3002277442643144`, 0.23097442421152603`}, 240}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          240, {1.2999278032826744`, 0.16616106675864187`}, 239}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{240, 4069, 4072, 4074, 4080, 4082, 4085, 
          240},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{241, 4092, 4095, 4097, 4103, 4105, 4108, 
          241},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          241, {0.048564392432945636`, 0.4167351919588402}, 242}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          242, {0.04856439243294574, 0.38384704252322016`}, 241}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          242, {0.14842019795505923`, 0.41632475501400174`}, 243}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          243, {0.14820472676763977`, 0.38360231585663873`}, 242}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          243, {0.2313938656230866, 0.4105986701063171}, 244}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          244, {0.23139386562308692`, 0.3886732371511001}, 243}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          244, {0.29806053228975304`, 0.4105986701057215}, 245}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          245, {0.2980605322897538, 0.3886732371581264}, 244}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          245, {0.36475267542790674`, 0.4107001056385112}, 246}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          246, {0.36480791035517574`, 0.38873974944917983`}, 245}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          246, {0.4481667201599958, 0.41624797615923814`}, 247}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          247, {0.44816672015999565`, 0.3833598267211993}, 246}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          247, {0.5484939501314343, 0.4169334922172524}, 248}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          248, {0.5488369670913639, 0.38371729108523395`}, 247}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          248, {0.6992239725949912, 0.4342958255117981}, 249}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          249, {0.6995451696199562, 0.3683745727510838}, 248}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          249, {0.8993490996407496, 0.43455494083543056`}, 250}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          250, {0.8993060176701941, 0.3689610965370852}, 249}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          250, {1.0999186574286306`, 0.43385914761706507`}, 251}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          251, {1.0993208509904802`, 0.3677081987548008}, 250}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          251, {1.299278107035495, 0.4330715687816476}, 252}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          252, {1.299639158889413, 0.3677758994914258}, 251}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{252, 4467, 4470, 4472, 4478, 4480, 4483, 
          252},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{253, 4490, 4493, 4495, 4501, 4503, 4506, 
          253},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          253, {0.10095520949987141`, 0.633934899084552}, 254}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          254, {0.10163462559001243`, 0.5677169721815528}, 253}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          254, {0.25196632660464974`, 0.6183029296548169}, 255}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          255, {0.2519663266046497, 0.5854147802204394}, 254}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          255, {0.3507869879042637, 0.6159483632317182}, 256}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          256, {0.34961962814133046`, 0.5842198621566204}, 255}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          256, {0.49990760374496346`, 0.6317428490905843}, 257}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          257, {0.49994485369900565`, 0.5649891543547475}, 256}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          257, {0.7008800207756487, 0.6311811008128423}, 258}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          258, {0.7009069279640368, 0.5657459794101241}, 257}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          258, {0.8994041737257963, 0.6324834459978093}, 259}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          259, {0.9002411335301795, 0.567070315893687}, 258}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          259, {1.0326038598526481`, 0.6120120311642723}, 260}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          260, {1.032603859852648, 0.5900865982263058}, 259}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          260, {1.0992705265193172`, 0.6120120310783591}, 261}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          261, {1.0992705265193123`, 0.590086598199658}, 260}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          261, {1.1660866620463721`, 0.6121065190201137}, 262}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          262, {1.166113568382023, 0.590073921956802}, 261}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          262, {1.2329297039090779`, 0.6120938427809928}, 263}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          263, {1.232929703909083, 0.5901684097582772}, 262}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          263, {1.2995963705757445`, 0.6120938427809928}, 264}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          264, {1.2995963705757498`, 0.5901684098163784}, 263}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          264, {1.366440452150934, 0.6112758031278683}, 265}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          265, {1.365920261874132, 0.589404754218526}, 264}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{265, 4897, 4900, 4902, 4908, 4910, 4913, 
          265},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{266, 4920, 4923, 4925, 4931, 4933, 4936, 
          266},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          266, {0.051433036694613056`, 0.8156249617621661}, 267}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          267, {0.051433036694613056`, 0.7827368123282562}, 266}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          267, {0.15010370524228275`, 0.8165709370209847}, 268}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          268, {0.15092470047042117`, 0.7842871624737233}, 267}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          268, {0.2495953690180913, 0.8181212871630615}, 269}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          269, {0.24959536901809082`, 0.7852331377320214}, 268}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          269, {0.34923612252233077`, 0.8168859163148978}, 270}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          270, {0.34857298287930205`, 0.7844521602811}, 269}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          270, {0.4315470697168727, 0.8106235806578712}, 271}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          271, {0.43154706971687834`, 0.7886981476825797}, 270}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          271, {0.4982137363835422, 0.8106235805678349}, 272}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          272, {0.4982137363835419, 0.7886981476559319}, 271}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          272, {0.5669208480864262, 0.8105115261020125}, 273}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          273, {0.5664560186760151, 0.7873968377512166}, 272}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          273, {0.651829797045565, 0.8146915744136543}, 274}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          274, {0.6518297970455663, 0.7818034249870693}, 273}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          274, {0.7501869507513427, 0.8145036251875281}, 275}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          275, {0.750396093658234, 0.7826272959966153}, 274}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          275, {0.8487532473640103, 0.8153274961818499}, 276}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          276, {0.8487532473640118, 0.7824393467745776}, 275}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          276, {0.9503900080396307, 0.8157007474819208}, 277}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          277, {0.9502920412945953, 0.7817682169618773}, 276}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          277, {1.051928801970215, 0.8150296176057428}, 278}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          278, {1.051928801970215, 0.7821414682599824}, 277}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          278, {1.1499225904769854`, 0.8156720222272501}, 279}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          279, {1.1506955325525074`, 0.7838492781085747}, 278}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          279, {1.2320226543926083`, 0.8118984740274903}, 280}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          280, {1.2320226543926132`, 0.7899730410605389}, 279}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          280, {1.298689321059275, 0.8118984739942446}, 281}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          281, {1.29868932105928, 0.7899730408921306}, 280}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          281, {1.3653570466498302`, 0.8118846230818118}, 282}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          282, {1.3653486186223613`, 0.7899612653608702}, 281}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{282, 5455, 5458, 5460, 5466, 5468, 5471, 
          282},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{283, 5478, 5481, 5483, 5489, 5491, 5494, 
          283},
          SplineDegree->7], 0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          283, {0.03383035731409522, 1.0115776394809497`}, 284}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          284, {0.03383035731409299, 0.9896522065222085}, 283}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          284, {0.100497023980762, 1.0115776394751301`}, 285}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          285, {0.10049702398075974`, 0.9896522065239086}, 284}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          285, {0.1673002011626986, 1.0110085208717228`}, 286}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          286, {0.1669357458342843, 0.9891131589818698}, 285}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          286, {0.2993901474882139, 1.031504207169665}, 287}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          287, {0.2990596886137673, 0.9665045104010969}, 286}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          287, {0.4313775797524238, 1.009464677201516}, 288}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          288, {0.4313775797524271, 0.9875392442102536}, 287}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          288, {0.4980442464190909, 1.009464677201516}, 289}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          289, {0.49804424641909295`, 0.9875392442102536}, 288}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          289, {0.5661911314094903, 1.0109645180711162`}, 290}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          290, {0.5667924237946119, 0.9878676982328165}, 289}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          290, {0.651605975451672, 1.0167743304148988`}, 291}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          291, {0.6516059754516735, 0.9838861809417192}, 290}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          291, {0.7514350066770802, 1.0165481452497311`}, 292}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          292, {0.7513341269088857, 0.9838056301845834}, 291}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          292, {0.8511631581342927, 1.0164675944380916`}, 293}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          293, {0.8511631581342941, 0.9835794450596597}, 292}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          293, {0.9507634768149585, 1.016236486487184}, 294}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          294, {0.9507043223777553, 0.9836306874257188}, 293}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          294, {1.0336379743917636`, 1.0108063706280113`}, 295}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          295, {1.0336379743917663`, 0.9888809377166592}, 294}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          295, {1.1003046410584305`, 1.0108063708434973`}, 296}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          296, {1.1003046410584325`, 0.9888809377166592}, 295}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          296, {1.1664194802093129`, 1.009772953594291}, 297}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          297, {1.1659138065289958`, 0.9883767988559676}, 296}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          297, {1.232028645679878, 1.0092688149828284`}, 298}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          298, {1.2320286456798806`, 0.9873433816437958}, 297}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          298, {1.2986953123465448`, 1.009268814769646}, 299}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          299, {1.2986953123465472`, 0.9873433818569782}, 298}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          299, {1.3648448620137925`, 1.009784299363602}, 300}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{
          300, {1.3652517810281721`, 0.9880651787505856}, 299}], 
          0.017567754379552408`], 
         ArrowBox[BezierCurveBox[{300, 6045, 6048, 6050, 6056, 6058, 6061, 
          300},
          SplineDegree->7], 0.017567754379552408`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.017567754379552408`], DiskBox[2, 0.017567754379552408`],
          DiskBox[3, 0.017567754379552408`], 
         DiskBox[4, 0.017567754379552408`], DiskBox[5, 0.017567754379552408`],
          DiskBox[6, 0.017567754379552408`], 
         DiskBox[7, 0.017567754379552408`], DiskBox[8, 0.017567754379552408`],
          DiskBox[9, 0.017567754379552408`], 
         DiskBox[10, 0.017567754379552408`], 
         DiskBox[11, 0.017567754379552408`], 
         DiskBox[12, 0.017567754379552408`], 
         DiskBox[13, 0.017567754379552408`], 
         DiskBox[14, 0.017567754379552408`], 
         DiskBox[15, 0.017567754379552408`], 
         DiskBox[16, 0.017567754379552408`], 
         DiskBox[17, 0.017567754379552408`], 
         DiskBox[18, 0.017567754379552408`], 
         DiskBox[19, 0.017567754379552408`], 
         DiskBox[20, 0.017567754379552408`], 
         DiskBox[21, 0.017567754379552408`], 
         DiskBox[22, 0.017567754379552408`], 
         DiskBox[23, 0.017567754379552408`], 
         DiskBox[24, 0.017567754379552408`], 
         DiskBox[25, 0.017567754379552408`], 
         DiskBox[26, 0.017567754379552408`], 
         DiskBox[27, 0.017567754379552408`], 
         DiskBox[28, 0.017567754379552408`], 
         DiskBox[29, 0.017567754379552408`], 
         DiskBox[30, 0.017567754379552408`], 
         DiskBox[31, 0.017567754379552408`], 
         DiskBox[32, 0.017567754379552408`], 
         DiskBox[33, 0.017567754379552408`], 
         DiskBox[34, 0.017567754379552408`], 
         DiskBox[35, 0.017567754379552408`], 
         DiskBox[36, 0.017567754379552408`], 
         DiskBox[37, 0.017567754379552408`], 
         DiskBox[38, 0.017567754379552408`], 
         DiskBox[39, 0.017567754379552408`], 
         DiskBox[40, 0.017567754379552408`], 
         DiskBox[41, 0.017567754379552408`], 
         DiskBox[42, 0.017567754379552408`], 
         DiskBox[43, 0.017567754379552408`], 
         DiskBox[44, 0.017567754379552408`], 
         DiskBox[45, 0.017567754379552408`], 
         DiskBox[46, 0.017567754379552408`], 
         DiskBox[47, 0.017567754379552408`], 
         DiskBox[48, 0.017567754379552408`], 
         DiskBox[49, 0.017567754379552408`], 
         DiskBox[50, 0.017567754379552408`], 
         DiskBox[51, 0.017567754379552408`], 
         DiskBox[52, 0.017567754379552408`], 
         DiskBox[53, 0.017567754379552408`], 
         DiskBox[54, 0.017567754379552408`], 
         DiskBox[55, 0.017567754379552408`], 
         DiskBox[56, 0.017567754379552408`], 
         DiskBox[57, 0.017567754379552408`], 
         DiskBox[58, 0.017567754379552408`], 
         DiskBox[59, 0.017567754379552408`], 
         DiskBox[60, 0.017567754379552408`], 
         DiskBox[61, 0.017567754379552408`], 
         DiskBox[62, 0.017567754379552408`], 
         DiskBox[63, 0.017567754379552408`], 
         DiskBox[64, 0.017567754379552408`], 
         DiskBox[65, 0.017567754379552408`], 
         DiskBox[66, 0.017567754379552408`], 
         DiskBox[67, 0.017567754379552408`], 
         DiskBox[68, 0.017567754379552408`], 
         DiskBox[69, 0.017567754379552408`], 
         DiskBox[70, 0.017567754379552408`], 
         DiskBox[71, 0.017567754379552408`], 
         DiskBox[72, 0.017567754379552408`], 
         DiskBox[73, 0.017567754379552408`], 
         DiskBox[74, 0.017567754379552408`], 
         DiskBox[75, 0.017567754379552408`], 
         DiskBox[76, 0.017567754379552408`], 
         DiskBox[77, 0.017567754379552408`], 
         DiskBox[78, 0.017567754379552408`], 
         DiskBox[79, 0.017567754379552408`], 
         DiskBox[80, 0.017567754379552408`], 
         DiskBox[81, 0.017567754379552408`], 
         DiskBox[82, 0.017567754379552408`], 
         DiskBox[83, 0.017567754379552408`], 
         DiskBox[84, 0.017567754379552408`], 
         DiskBox[85, 0.017567754379552408`], 
         DiskBox[86, 0.017567754379552408`], 
         DiskBox[87, 0.017567754379552408`], 
         DiskBox[88, 0.017567754379552408`], 
         DiskBox[89, 0.017567754379552408`], 
         DiskBox[90, 0.017567754379552408`], 
         DiskBox[91, 0.017567754379552408`], 
         DiskBox[92, 0.017567754379552408`], 
         DiskBox[93, 0.017567754379552408`], 
         DiskBox[94, 0.017567754379552408`], 
         DiskBox[95, 0.017567754379552408`], 
         DiskBox[96, 0.017567754379552408`], 
         DiskBox[97, 0.017567754379552408`], 
         DiskBox[98, 0.017567754379552408`], 
         DiskBox[99, 0.017567754379552408`], 
         DiskBox[100, 0.017567754379552408`], 
         DiskBox[101, 0.017567754379552408`], 
         DiskBox[102, 0.017567754379552408`], 
         DiskBox[103, 0.017567754379552408`], 
         DiskBox[104, 0.017567754379552408`], 
         DiskBox[105, 0.017567754379552408`], 
         DiskBox[106, 0.017567754379552408`], 
         DiskBox[107, 0.017567754379552408`], 
         DiskBox[108, 0.017567754379552408`], 
         DiskBox[109, 0.017567754379552408`], 
         DiskBox[110, 0.017567754379552408`], 
         DiskBox[111, 0.017567754379552408`], 
         DiskBox[112, 0.017567754379552408`], 
         DiskBox[113, 0.017567754379552408`], 
         DiskBox[114, 0.017567754379552408`], 
         DiskBox[115, 0.017567754379552408`], 
         DiskBox[116, 0.017567754379552408`], 
         DiskBox[117, 0.017567754379552408`], 
         DiskBox[118, 0.017567754379552408`], 
         DiskBox[119, 0.017567754379552408`], 
         DiskBox[120, 0.017567754379552408`], 
         DiskBox[121, 0.017567754379552408`], 
         DiskBox[122, 0.017567754379552408`], 
         DiskBox[123, 0.017567754379552408`], 
         DiskBox[124, 0.017567754379552408`], 
         DiskBox[125, 0.017567754379552408`], 
         DiskBox[126, 0.017567754379552408`], 
         DiskBox[127, 0.017567754379552408`], 
         DiskBox[128, 0.017567754379552408`], 
         DiskBox[129, 0.017567754379552408`], 
         DiskBox[130, 0.017567754379552408`], 
         DiskBox[131, 0.017567754379552408`], 
         DiskBox[132, 0.017567754379552408`], 
         DiskBox[133, 0.017567754379552408`], 
         DiskBox[134, 0.017567754379552408`], 
         DiskBox[135, 0.017567754379552408`], 
         DiskBox[136, 0.017567754379552408`], 
         DiskBox[137, 0.017567754379552408`], 
         DiskBox[138, 0.017567754379552408`], 
         DiskBox[139, 0.017567754379552408`], 
         DiskBox[140, 0.017567754379552408`], 
         DiskBox[141, 0.017567754379552408`], 
         DiskBox[142, 0.017567754379552408`], 
         DiskBox[143, 0.017567754379552408`], 
         DiskBox[144, 0.017567754379552408`], 
         DiskBox[145, 0.017567754379552408`], 
         DiskBox[146, 0.017567754379552408`], 
         DiskBox[147, 0.017567754379552408`], 
         DiskBox[148, 0.017567754379552408`], 
         DiskBox[149, 0.017567754379552408`], 
         DiskBox[150, 0.017567754379552408`], 
         DiskBox[151, 0.017567754379552408`], 
         DiskBox[152, 0.017567754379552408`], 
         DiskBox[153, 0.017567754379552408`], 
         DiskBox[154, 0.017567754379552408`], 
         DiskBox[155, 0.017567754379552408`], 
         DiskBox[156, 0.017567754379552408`], 
         DiskBox[157, 0.017567754379552408`], 
         DiskBox[158, 0.017567754379552408`], 
         DiskBox[159, 0.017567754379552408`], 
         DiskBox[160, 0.017567754379552408`], 
         DiskBox[161, 0.017567754379552408`], 
         DiskBox[162, 0.017567754379552408`], 
         DiskBox[163, 0.017567754379552408`], 
         DiskBox[164, 0.017567754379552408`], 
         DiskBox[165, 0.017567754379552408`], 
         DiskBox[166, 0.017567754379552408`], 
         DiskBox[167, 0.017567754379552408`], 
         DiskBox[168, 0.017567754379552408`], 
         DiskBox[169, 0.017567754379552408`], 
         DiskBox[170, 0.017567754379552408`], 
         DiskBox[171, 0.017567754379552408`], 
         DiskBox[172, 0.017567754379552408`], 
         DiskBox[173, 0.017567754379552408`], 
         DiskBox[174, 0.017567754379552408`], 
         DiskBox[175, 0.017567754379552408`], 
         DiskBox[176, 0.017567754379552408`], 
         DiskBox[177, 0.017567754379552408`], 
         DiskBox[178, 0.017567754379552408`], 
         DiskBox[179, 0.017567754379552408`], 
         DiskBox[180, 0.017567754379552408`], 
         DiskBox[181, 0.017567754379552408`], 
         DiskBox[182, 0.017567754379552408`], 
         DiskBox[183, 0.017567754379552408`], 
         DiskBox[184, 0.017567754379552408`], 
         DiskBox[185, 0.017567754379552408`], 
         DiskBox[186, 0.017567754379552408`], 
         DiskBox[187, 0.017567754379552408`], 
         DiskBox[188, 0.017567754379552408`], 
         DiskBox[189, 0.017567754379552408`], 
         DiskBox[190, 0.017567754379552408`], 
         DiskBox[191, 0.017567754379552408`], 
         DiskBox[192, 0.017567754379552408`], 
         DiskBox[193, 0.017567754379552408`], 
         DiskBox[194, 0.017567754379552408`], 
         DiskBox[195, 0.017567754379552408`], 
         DiskBox[196, 0.017567754379552408`], 
         DiskBox[197, 0.017567754379552408`], 
         DiskBox[198, 0.017567754379552408`], 
         DiskBox[199, 0.017567754379552408`], 
         DiskBox[200, 0.017567754379552408`], 
         DiskBox[201, 0.017567754379552408`], 
         DiskBox[202, 0.017567754379552408`], 
         DiskBox[203, 0.017567754379552408`], 
         DiskBox[204, 0.017567754379552408`], 
         DiskBox[205, 0.017567754379552408`], 
         DiskBox[206, 0.017567754379552408`], 
         DiskBox[207, 0.017567754379552408`], 
         DiskBox[208, 0.017567754379552408`], 
         DiskBox[209, 0.017567754379552408`], 
         DiskBox[210, 0.017567754379552408`], 
         DiskBox[211, 0.017567754379552408`], 
         DiskBox[212, 0.017567754379552408`], 
         DiskBox[213, 0.017567754379552408`], 
         DiskBox[214, 0.017567754379552408`], 
         DiskBox[215, 0.017567754379552408`], 
         DiskBox[216, 0.017567754379552408`], 
         DiskBox[217, 0.017567754379552408`], 
         DiskBox[218, 0.017567754379552408`], 
         DiskBox[219, 0.017567754379552408`], 
         DiskBox[220, 0.017567754379552408`], 
         DiskBox[221, 0.017567754379552408`], 
         DiskBox[222, 0.017567754379552408`], 
         DiskBox[223, 0.017567754379552408`], 
         DiskBox[224, 0.017567754379552408`], 
         DiskBox[225, 0.017567754379552408`], 
         DiskBox[226, 0.017567754379552408`], 
         DiskBox[227, 0.017567754379552408`], 
         DiskBox[228, 0.017567754379552408`], 
         DiskBox[229, 0.017567754379552408`], 
         DiskBox[230, 0.017567754379552408`], 
         DiskBox[231, 0.017567754379552408`], 
         DiskBox[232, 0.017567754379552408`], 
         DiskBox[233, 0.017567754379552408`], 
         DiskBox[234, 0.017567754379552408`], 
         DiskBox[235, 0.017567754379552408`], 
         DiskBox[236, 0.017567754379552408`], 
         DiskBox[237, 0.017567754379552408`], 
         DiskBox[238, 0.017567754379552408`], 
         DiskBox[239, 0.017567754379552408`], 
         DiskBox[240, 0.017567754379552408`], 
         DiskBox[241, 0.017567754379552408`], 
         DiskBox[242, 0.017567754379552408`], 
         DiskBox[243, 0.017567754379552408`], 
         DiskBox[244, 0.017567754379552408`], 
         DiskBox[245, 0.017567754379552408`], 
         DiskBox[246, 0.017567754379552408`], 
         DiskBox[247, 0.017567754379552408`], 
         DiskBox[248, 0.017567754379552408`], 
         DiskBox[249, 0.017567754379552408`], 
         DiskBox[250, 0.017567754379552408`], 
         DiskBox[251, 0.017567754379552408`], 
         DiskBox[252, 0.017567754379552408`], 
         DiskBox[253, 0.017567754379552408`], 
         DiskBox[254, 0.017567754379552408`], 
         DiskBox[255, 0.017567754379552408`], 
         DiskBox[256, 0.017567754379552408`], 
         DiskBox[257, 0.017567754379552408`], 
         DiskBox[258, 0.017567754379552408`], 
         DiskBox[259, 0.017567754379552408`], 
         DiskBox[260, 0.017567754379552408`], 
         DiskBox[261, 0.017567754379552408`], 
         DiskBox[262, 0.017567754379552408`], 
         DiskBox[263, 0.017567754379552408`], 
         DiskBox[264, 0.017567754379552408`], 
         DiskBox[265, 0.017567754379552408`], 
         DiskBox[266, 0.017567754379552408`], 
         DiskBox[267, 0.017567754379552408`], 
         DiskBox[268, 0.017567754379552408`], 
         DiskBox[269, 0.017567754379552408`], 
         DiskBox[270, 0.017567754379552408`], 
         DiskBox[271, 0.017567754379552408`], 
         DiskBox[272, 0.017567754379552408`], 
         DiskBox[273, 0.017567754379552408`], 
         DiskBox[274, 0.017567754379552408`], 
         DiskBox[275, 0.017567754379552408`], 
         DiskBox[276, 0.017567754379552408`], 
         DiskBox[277, 0.017567754379552408`], 
         DiskBox[278, 0.017567754379552408`], 
         DiskBox[279, 0.017567754379552408`], 
         DiskBox[280, 0.017567754379552408`], 
         DiskBox[281, 0.017567754379552408`], 
         DiskBox[282, 0.017567754379552408`], 
         DiskBox[283, 0.017567754379552408`], 
         DiskBox[284, 0.017567754379552408`], 
         DiskBox[285, 0.017567754379552408`], 
         DiskBox[286, 0.017567754379552408`], 
         DiskBox[287, 0.017567754379552408`], 
         DiskBox[288, 0.017567754379552408`], 
         DiskBox[289, 0.017567754379552408`], 
         DiskBox[290, 0.017567754379552408`], 
         DiskBox[291, 0.017567754379552408`], 
         DiskBox[292, 0.017567754379552408`], 
         DiskBox[293, 0.017567754379552408`], 
         DiskBox[294, 0.017567754379552408`], 
         DiskBox[295, 0.017567754379552408`], 
         DiskBox[296, 0.017567754379552408`], 
         DiskBox[297, 0.017567754379552408`], 
         DiskBox[298, 0.017567754379552408`], 
         DiskBox[299, 0.017567754379552408`], 
         DiskBox[300, 0.017567754379552408`]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{{3.780868423583639*^9, 3.7808684275885077`*^9}, {
   3.7808684608857775`*^9, 3.7808684630347104`*^9}, {3.7808688947772064`*^9, 
   3.7808689358560357`*^9}, 3.7808709917257957`*^9, {3.780871026338699*^9, 
   3.780871046084386*^9}, 3.7808711653701143`*^9, 3.7808718354112587`*^9, 
   3.780919386393125*^9, 3.780937791610123*^9, 3.780939466576243*^9, 
   3.780939643604392*^9, 3.7809398550510745`*^9, {3.780940021233082*^9, 
   3.7809400432524853`*^9}, 3.7809403393486814`*^9, 3.7809407278101845`*^9, 
   3.7809407604733257`*^9, 3.780940802796155*^9, 3.7809409558791337`*^9, 
   3.7809410442430916`*^9, 3.7809410848437386`*^9, 3.7809411864133415`*^9, 
   3.7809412854957714`*^9, {3.7809416798943954`*^9, 3.780941697219434*^9}, {
   3.7809417912952814`*^9, 3.780941810910985*^9}, {3.7809419182629704`*^9, 
   3.7809419241565895`*^9}, 3.780942135080426*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759, 833},
WindowMargins->{{94, Automatic}, {Automatic, 62}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 93, 1, 64, "Chapter"],
Cell[676, 25, 266, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[967, 34, 150, 2, 63, "Section"],
Cell[CellGroupData[{
Cell[1142, 40, 218, 3, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[1385, 47, 616, 9, 58, "SubitemNumbered"],
Cell[2004, 58, 293, 3, 24, "SubitemNumbered"],
Cell[2300, 63, 426, 7, 41, "SubitemNumbered"],
Cell[2729, 72, 428, 7, 41, "SubitemNumbered"]
}, Open  ]],
Cell[3172, 82, 315, 4, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[3512, 90, 382, 7, 41, "SubitemNumbered"],
Cell[3897, 99, 325, 4, 24, "SubitemNumbered"],
Cell[4225, 105, 540, 8, 58, "SubitemNumbered"]
}, Open  ]],
Cell[4780, 116, 300, 4, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[5105, 124, 408, 7, 41, "SubitemNumbered"],
Cell[5516, 133, 524, 9, 58, "SubitemNumbered"],
Cell[6043, 144, 721, 14, 58, "SubitemNumbered"],
Cell[6767, 160, 680, 10, 58, "SubitemNumbered"]
}, Open  ]],
Cell[7462, 173, 532, 7, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[8019, 184, 625, 9, 41, "SubitemNumbered"],
Cell[8647, 195, 620, 9, 41, "SubitemNumbered"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9328, 211, 99, 1, 63, "Section"],
Cell[9430, 214, 273, 5, 49, "Text"],
Cell[9706, 221, 5067, 130, 392, "Input"],
Cell[14776, 353, 273, 9, 5, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15098, 368, 94, 1, 64, "Chapter"],
Cell[15195, 371, 328, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[15548, 381, 160, 2, 63, "Section"],
Cell[15711, 385, 340, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[16076, 395, 48354, 1109, 4530, "Input"],
Cell[CellGroupData[{
Cell[64455, 1508, 939, 12, 23, "Print"],
Cell[65397, 1522, 915, 12, 23, "Print"],
Cell[66315, 1536, 918, 12, 23, "Print"],
Cell[67236, 1550, 174907, 3198, 275, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

