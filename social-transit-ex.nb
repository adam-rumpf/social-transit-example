(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    226656,       4385]
NotebookOptionsPosition[    224578,       4315]
NotebookOutlinePosition[    224921,       4330]
CellTagsIndexPosition[    224878,       4327]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Preamble", "Chapter",
 CellChangeTimes->{{3.780771541527303*^9, 3.780771547398859*^9}}],

Cell["\<\
This section contains the program\[CloseCurlyQuote]s pseudocode and a few \
definitions that should only need to be executed once (as long as the \
parameters are not changed).\
\>", "Text",
 CellChangeTimes->{{3.780771585873912*^9, 3.780771622034917*^9}}],

Cell[CellGroupData[{

Cell["Pseudocode", "Section",
 CellChangeTimes->{{3.7803292543397837`*^9, 3.780329256110973*^9}, {
  3.7807721136837177`*^9, 3.7807721151272697`*^9}}],

Cell[CellGroupData[{

Cell["Define the road network.", "ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678766351327*^9}}],

Cell[CellGroupData[{

Cell["\<\
The network consists of a square grid of stops, with routes running N/S and \
E/W to define the grid (plus a dummy turnaround loop on each end). Between \
each pair of grid intersections we can also place stops.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678805404803*^9}, {3.7806789159593525`*^9, 3.7806789159643526`*^9}, {
  3.780681600251603*^9, 3.7806816134123807`*^9}, {3.780682029623898*^9, 
  3.780682038601019*^9}, {3.7808488461528215`*^9, 3.7808488685825534`*^9}}],

Cell["Each stop is a node, whose coordinates we store.", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678805404803*^9}, {3.7806789159593525`*^9, 3.780678938594097*^9}}],

Cell["\<\
We define arcs for each line, with slightly randomized travel times that \
depend on distance plus a constant boarding time.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678805404803*^9}, {3.7806789159593525`*^9, 3.780678946325615*^9}, {
  3.780681957166153*^9, 3.780681990746385*^9}}],

Cell["\<\
Each stop is within walking distance of the four stops immediately adjacent, \
with walking times based on taxicab distance.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.7806788303897915`*^9}, {3.7806789332048225`*^9, 3.780678933210821*^9}, {
  3.780682076815765*^9, 3.780682088783948*^9}}]
}, Open  ]],

Cell["Define population centers and facilities.", "ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806790038531685`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Population centers are somewhat uniformly distributed, and each has \
coordinates and a population.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.780679059001484*^9}}],

Cell["Facilities are somewhat clustered near the center.", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.780679061739606*^9}}],

Cell["\<\
All population centers and facilities receive walking arcs to their nearest \
stops depending on the grid square that they fall into. They can also be \
adjacent to each other if inside the same grid square.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806791448949413`*^9}, {3.7806868399016275`*^9, 3.780686839909628*^9}}]
}, Open  ]],

Cell["Define OD and fleet sizes.", "ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806791520776386`*^9}}],

Cell[CellGroupData[{

Cell["\<\
For each stop, decide the travel demand to all other stops according to a \
gamma distribution based on Euclidean distance.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806791963604383`*^9}}],

Cell["\<\
The total outgoing travel demand for a stop should also depend on its \
population. For each stop, determine the nearest population center, and \
equally distribute the center\[CloseCurlyQuote]s population to all of its \
associated stops.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806792946319265`*^9}}],

Cell[TextData[{
 "There should also be an overall scaling factor to adjust the daily traffic \
as a fraction of the overall population (my Chicago data shows that the \
number of daily boardings is approximately ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "/", "3"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " of the total population)."
}], "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679686257347*^9}}],

Cell["\<\
The fleet sizes of each route should be proportional to the number of people \
using them, which can be quickly modeled by assuming that all of the travel \
demand travels along its shortest path.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.7806868545819197`*^9}}]
}, Open  ]],

Cell["Evaluate the objective function\[CloseCurlyQuote]s shape.", \
"ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.7806868700739527`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Pick several pairs of lines at random. For each pair, vary both of the fleet \
sizes within a range and calculate the objective value for each.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.780686940147503*^9}}],

Cell["\<\
Use these results to generate a table of objective values, displayed as an \
array plot, in order to show how rough the objective looks.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.7806869729809537`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellChangeTimes->{{3.7807714143939443`*^9, 3.7807714158685155`*^9}}],

Cell["\<\
The parameters defined below can be changed to generate different types of \
example network. Everything below this point should also be re-executed when \
the parameters are updated.\
\>", "Text",
 CellChangeTimes->{{3.780771419110817*^9, 3.780771456481101*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hlines", "=", "6"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
    "number", " ", "of", " ", "grid", " ", "lines", " ", "running", " ", 
     "horizontally"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"vlines", "=", "8"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "number", " ", "of", " ", "grid", " ", "lines", " ", "running", " ", 
    "vertically"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hgap", "=", "0.2"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"distance", " ", "between", " ", "horizontal", " ", "lines", " ", 
    RowBox[{"(", "mi", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vgap", "=", "0.2"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"distance", " ", "between", " ", "vertical", " ", "lines", " ", 
     RowBox[{"(", "mi", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"jiggle", "=", "0.002"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
    "random", " ", "displacement", " ", "for", " ", "each", " ", "grid", " ", 
     "node", " ", 
     RowBox[{"(", "mi", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"horizon", "=", "60"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"total", " ", "time", " ", "horizon", " ", 
     RowBox[{"(", "min", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"minbetween", "=", "0"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
    "minimum", " ", "number", " ", "of", " ", "nodes", " ", "to", " ", 
     "place", " ", "between", " ", "grid", " ", "intersections"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"maxbetween", "=", "2"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
    "maximum", " ", "number", " ", "of", " ", "nodes", " ", "to", " ", 
     "place", " ", "between", " ", "grid", " ", "intersections"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"wspeed", "=", "0.0455"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"pedestrian", " ", "walking", " ", "speed", " ", 
     RowBox[{"(", 
      RowBox[{"mi", "/", "min"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"minbspeed", "=", "0.3"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"minimum", " ", "bus", " ", "speed", " ", 
     RowBox[{"(", 
      RowBox[{"mi", "/", "min"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"maxbspeed", "=", "0.5"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"maximum", " ", "bus", " ", "speed", " ", 
     RowBox[{"(", 
      RowBox[{"mi", "/", "min"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"minbstop", "=", "0.5"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"minimum", " ", "bus", " ", "stop", " ", "time", " ", 
     RowBox[{"(", "min", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"maxbstop", "=", "0.75"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"maximum", " ", "bus", " ", "stop", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minbturnaround", "=", "5"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"minimum", " ", "bus", " ", "turnaround", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxbturnaround", "=", "30"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"maximum", " ", "bus", " ", "turnaround", " ", "time", " ", 
     RowBox[{"(", "min", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"facilities", "=", "10"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"number", " ", "of", " ", "facilities"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"populations", "=", "20"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "population", " ", "centers"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7807714685817165`*^9, 3.780771469692157*^9}, {
   3.7807722664852037`*^9, 3.7807723285478315`*^9}, {3.7807723622388773`*^9, 
   3.7807724136701546`*^9}, {3.78084871435122*^9, 3.780848790950302*^9}, 
   3.7808553189388647`*^9, {3.7808554668835506`*^9, 3.78085547840916*^9}, 
   3.7808563896968355`*^9, 3.780856483595828*^9, {3.780856916720811*^9, 
   3.7808569330009212`*^9}, {3.780856989281165*^9, 3.7808570479088755`*^9}, {
   3.780857133645026*^9, 3.780857136792862*^9}, {3.780857191360109*^9, 
   3.7808572266899395`*^9}, {3.7808573219851074`*^9, 3.780857331801365*^9}, {
   3.7808607186237993`*^9, 3.7808608617713127`*^9}, {3.78086801485207*^9, 
   3.780868022792763*^9}, {3.780868625444586*^9, 3.7808686683276653`*^9}, 
   3.7808687167390623`*^9, 3.780868928273485*^9, {3.780868975178445*^9, 
   3.780869029117138*^9}, {3.7808711560911093`*^9, 3.7808711605126915`*^9}, {
   3.780871826919999*^9, 3.78087182838951*^9}, {3.780919353945106*^9, 
   3.780919355858287*^9}, {3.7809194392511005`*^9, 3.7809194602362547`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execution", "Chapter",
 CellChangeTimes->{{3.780771565651047*^9, 3.780771567477462*^9}}],

Cell["\<\
The contents of the following sections may need to be repeatedly re-executed \
to generate satisfactory example networks. They should always be executed in \
order from top to bottom.\
\>", "Text",
 CellChangeTimes->{{3.7807716306375384`*^9, 3.780771649293496*^9}, {
  3.7808685835746193`*^9, 3.7808686061162567`*^9}}],

Cell[CellGroupData[{

Cell["Network Construction", "Section",
 CellChangeTimes->{{3.780771521038786*^9, 3.7807715235126934`*^9}, {
  3.7807720128307896`*^9, 3.7807720163927107`*^9}}],

Cell["\<\
This section builds the underlying network of stops and other locations, \
along with the line arcs and walking arcs to connect them. A map of the \
network is shown once this process is complete.\
\>", "Text",
 CellChangeTimes->{{3.78077198108607*^9, 3.7807720376299205`*^9}, {
  3.7807720965858326`*^9, 3.7807721011810923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initialize", " ", "data", " ", "structures"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ncoords", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "node", " ", "coordinates"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ntype", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"list", " ", "of", " ", "node", " ", "types"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nrows", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
    "list", " ", "of", " ", "lists", " ", "of", " ", "node", " ", "IDs", " ", 
     "for", " ", "each", " ", "street", " ", "row"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ncols", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
    "list", " ", "of", " ", "lists", " ", "of", " ", "node", " ", "IDs", " ", 
     "for", " ", "each", " ", "street", " ", "column"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"arcs", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"list", " ", "of", " ", "arcs"}], ",", " ", 
      RowBox[{"in", " ", Cell["i\[DirectedEdge]j"], " ", "format"}]}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"atype", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"list", " ", "of", " ", "arc", " ", "types"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"acost", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "arc", " ", "times"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"alines", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "lists", " ", "of", " ", "arc", " ", "IDs", " ", 
      "for", " ", "each", " ", "transit", " ", "line"}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Generate", " ", "grid", " ", "intersection", " ", "stops"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ncoords", "=", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"vgap", " ", "j"}], ",", 
            RowBox[{"hgap", " ", "i"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"hlines", "-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", 
            RowBox[{"vlines", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
       "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "jiggle"}], ",", "jiggle"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"hlines", " ", "vlines"}], ",", "2"}], "}"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Insert", " ", "additional", " ", "stops", " ", "between", " ", "grid", 
     " ", "intersections", " ", "and", " ", "build", " ", "up", " ", "the", 
     " ", 
     RowBox[{"row", "/", "column"}], " ", "lists"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"col", ",", "row", ",", "inc"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "column", " ", "from", " ", "bottom", 
          " ", "to", " ", "top"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"col", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "node", " ", "IDs", " ", "in", " ", "current", " ", "column"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"col", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"col", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "+", 
                 RowBox[{"vlines", " ", 
                  RowBox[{"(", 
                   RowBox[{"j", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], 
             ";", 
             RowBox[{"(*", " ", 
              RowBox[{"current", " ", "node", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"btw", "=", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"minbetween", ",", "maxbetween"}], "}"}], "]"}]}], 
             ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "number", " ", "of", " ", "stops", " ", "to", " ", "insert"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"inc", "=", 
              RowBox[{"N", "[", 
               FractionBox["hgap", 
                RowBox[{"btw", "+", "1"}]], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "distance", " ", "north", " ", "of", " ", "current", " ", 
               "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "insert", " ", "stops", " ", "between", " ", "consecutive", 
                " ", "intersections"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"ncoords", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"ncoords", ",", 
                   RowBox[{
                    RowBox[{"ncoords", "[", 
                    RowBox[{"[", 
                    RowBox[{"(", 
                    RowBox[{"col", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], ")"}], "]"}], "]"}], 
                    "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "inc"}], "}"}], "+", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "jiggle"}], ",", "jiggle"}], "}"}], ",", 
                    "2"}], "]"}]}]}], "]"}]}], ";", 
                RowBox[{"(*", " ", 
                 RowBox[{"new", " ", "stop", " ", "coordinate"}], " ", "*)"}],
                 "\[IndentingNewLine]", 
                RowBox[{"col", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"col", ",", 
                   RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}]}], 
               RowBox[{"(*", " ", 
                RowBox[{
                "add", " ", "new", " ", "entry", " ", "to", " ", "column", 
                 " ", "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", "btw"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"hlines", "-", "1"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "topmost", " ", "stop", " ", "requires", " ", "separate", " ", 
            "processing"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"col", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"col", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "+", 
              RowBox[{"vlines", " ", 
               RowBox[{"(", 
                RowBox[{"hlines", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], 
          ";", 
          RowBox[{"(*", " ", 
           RowBox[{"top", " ", "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ncols", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"ncols", ",", "col"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "all", " ", "stops", " ", "in", " ", "column", " ", 
           "to", " ", "main", " ", "column", " ", "list"}], " ", "*)"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "vlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "row", " ", "from", " ", "left", " ", 
          "to", " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"row", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "node", " ", "IDs", " ", "in", " ", "current", " ", "row"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"row", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"row", ",", 
                RowBox[{
                 RowBox[{"vlines", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}]}], "+", 
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "+", "1"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"current", " ", "node", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"btw", "=", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"minbetween", ",", "maxbetween"}], "}"}], "]"}]}], 
             ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "number", " ", "of", " ", "stops", " ", "to", " ", "insert"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"inc", "=", 
              RowBox[{"N", "[", 
               FractionBox["vgap", 
                RowBox[{"btw", "+", "1"}]], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "distance", " ", "east", " ", "of", " ", "current", " ", 
               "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "insert", " ", "stops", " ", "between", " ", "consecutive", 
                " ", "intersections"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"ncoords", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"ncoords", ",", 
                   RowBox[{
                    RowBox[{"ncoords", "[", 
                    RowBox[{"[", 
                    RowBox[{"(", 
                    RowBox[{"row", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], ")"}], "]"}], "]"}], 
                    "+", 
                    RowBox[{"{", 
                    RowBox[{"inc", ",", "0"}], "}"}]}]}], "]"}]}], ";", 
                RowBox[{"(*", " ", 
                 RowBox[{"new", " ", "stop", " ", "coordinate"}], " ", "*)"}],
                 "\[IndentingNewLine]", 
                RowBox[{"row", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"row", ",", 
                   RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}]}], 
               RowBox[{"(*", " ", 
                RowBox[{
                "add", " ", "new", " ", "entry", " ", "to", " ", "row", " ", 
                 "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", "btw"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"vlines", "-", "1"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "rightmost", " ", "stop", " ", "requires", " ", "separate", " ", 
            "processing"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"row", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"row", ",", 
             RowBox[{"vlines", " ", "i"}]}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"right", " ", "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"nrows", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"nrows", ",", "row"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "all", " ", "stops", " ", "in", " ", "row", " ", "to", 
           " ", "main", " ", "row", " ", "list"}], " ", "*)"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "hlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ntype", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}], ";"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{"stops", " ", "are", " ", "type", " ", "0"}], " ", "*)"}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Define", " ", "line", " ", "arcs", " ", "for", " ", "each", " ", 
     "column", " ", "and", " ", "row"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"head", ",", "tail", ",", "line", ",", "d", ",", "t"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "column", " ", "and", " ", "generate", 
          " ", "arcs", " ", "between", " ", "each", " ", "consecutive", " ", 
          "pair", " ", "of", " ", "stops"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"line", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"current", " ", "transit", " ", 
            RowBox[{"line", "'"}], "s", " ", "arcs"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"tail", "=", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"tail", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"head", "=", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"head", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"d", "=", 
              RowBox[{"EuclideanDistance", "[", 
               RowBox[{
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "tail", "]"}], "]"}], ",", 
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "head", "]"}], "]"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "distance"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "time"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"tail", "\[DirectedEdge]", "head"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "append", " ", "arc", " ", "to", " ", "line", " ", "list"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"also", " ", "generate", " ", "revese", " ", "arc"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"head", "\[DirectedEdge]", "tail"}]}], "]"}]}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"ncols", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}]}],
            "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "turnaround", " ", "loops", " ", "to", " ", 
            "endpoints"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"arcs", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"arcs", ",", "line"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "arcs", " ", "to", " ", "main", " ", "arc", " ", 
            "list"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"alines", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"alines", ",", "line"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "line", " ", "arcs", " ", "to", " ", "line", " ", "arc",
            " ", "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "ncols", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "row", " ", "and", " ", "generate", " ",
           "arcs", " ", "between", " ", "each", " ", "consecutive", " ", 
          "pair", " ", "of", " ", "stops"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"line", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"current", " ", "transit", " ", 
            RowBox[{"line", "'"}], "s", " ", "arcs"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"tail", "=", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"tail", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"head", "=", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"head", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"d", "=", 
              RowBox[{"EuclideanDistance", "[", 
               RowBox[{
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "tail", "]"}], "]"}], ",", 
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "head", "]"}], "]"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "distance"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "time"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"tail", "\[DirectedEdge]", "head"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "append", " ", "arc", " ", "to", " ", "line", " ", "list"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"also", " ", "generate", " ", "revese", " ", "arc"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"head", "\[DirectedEdge]", "tail"}]}], "]"}]}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"nrows", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}]}],
            "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "turnaround", " ", "loops", " ", "to", " ", 
            "endpoints"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"arcs", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"arcs", ",", "line"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "arcs", " ", "to", " ", "main", " ", "arc", " ", 
            "list"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"alines", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"alines", ",", "line"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "line", " ", "arcs", " ", "to", " ", "line", " ", "arc",
            " ", "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "nrows", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"atype", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "arcs", "]"}]}], "]"}]}], ";"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{"line", " ", "arcs", " ", "are", " ", "type", " ", "0"}], " ", 
      "*)"}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Display", " ", "result", " ", "for", " ", "review"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "ncoords", "]"}]}], "}"}]}], "]"}], ",", 
     "arcs", ",", 
     RowBox[{"VertexCoordinates", "\[Rule]", "ncoords"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Dimensions (mi): \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"hlines", " ", "hgap"}], "]"}], "<>", "\"\< \[Times] \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"vlines", " ", "vgap"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Lines: \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"hlines", "+", "vlines"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Stops: \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"Length", "[", "ncoords", "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.780839107164124*^9, 3.78083915348427*^9}, {
   3.7808529886701245`*^9, 3.7808530833436728`*^9}, {3.7808532037302055`*^9, 
   3.780853280910163*^9}, {3.780853317178815*^9, 3.7808533879777718`*^9}, {
   3.780853457168648*^9, 3.780853462433568*^9}, {3.78085356463711*^9, 
   3.780853633072615*^9}, {3.7808537304724464`*^9, 3.7808537380353975`*^9}, {
   3.7808538342490177`*^9, 3.7808538483777637`*^9}, {3.7808539124666233`*^9, 
   3.7808540575509076`*^9}, {3.7808542572469563`*^9, 
   3.7808543096302524`*^9}, {3.780854347862917*^9, 3.780854474240201*^9}, {
   3.7808545115873165`*^9, 3.780854676307379*^9}, {3.7808548632547855`*^9, 
   3.780855014481696*^9}, {3.7808550843718786`*^9, 3.7808552769123116`*^9}, {
   3.7808553967967243`*^9, 3.780855413977216*^9}, {3.7808555774179783`*^9, 
   3.7808557301665*^9}, {3.780855790665188*^9, 3.7808557935957537`*^9}, {
   3.780855835671893*^9, 3.7808558645704603`*^9}, {3.7808559930741315`*^9, 
   3.7808560790618153`*^9}, {3.780856323980884*^9, 3.7808563246606684`*^9}, 
   3.780856465052816*^9, {3.780856548882295*^9, 3.780856584267805*^9}, {
   3.780856615003056*^9, 3.780856901788807*^9}, {3.7808603019389634`*^9, 
   3.780860317156128*^9}, {3.78086035170458*^9, 3.78086038148343*^9}, {
   3.780860428991516*^9, 3.780860435457353*^9}, {3.7808604658149304`*^9, 
   3.78086050952096*^9}, {3.780860556421887*^9, 3.7808606160477905`*^9}, {
   3.7808606648544044`*^9, 3.780860710540225*^9}, {3.780860907399638*^9, 
   3.780860960083744*^9}, {3.7808609923943844`*^9, 3.780861002268216*^9}, {
   3.7808614083266163`*^9, 3.780861415731242*^9}, {3.7808674488267255`*^9, 
   3.7808674560002527`*^9}, {3.780867493857787*^9, 3.7808676378360806`*^9}, {
   3.7808677987501717`*^9, 3.7808678212702827`*^9}, {3.780867862227934*^9, 
   3.780867949501*^9}, {3.780868092313163*^9, 3.7808681093402576`*^9}, {
   3.780868186979131*^9, 3.780868217424326*^9}, {3.7808682729425497`*^9, 
   3.7808682735362525`*^9}, {3.780868358326125*^9, 3.780868420683856*^9}, {
   3.7808684585427685`*^9, 3.780868460139039*^9}, {3.7808687409260263`*^9, 
   3.7808687757503734`*^9}, {3.780868880625744*^9, 3.780868892893831*^9}, {
   3.780870935900695*^9, 3.7808710452466536`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
       108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 
      122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
      133}, {CompressedData["
1:eJwVxedfMQEAAGB31tkOZ6/jnHVWZqGIhlEke5ZRGWU0KKui//v9vc+XB22P
c22QRCINABLp/4DLBbgYDBcDhhnwwQF8IJMdyFBUhprNKACYzaDbDbqZTDdT
IGAKPB6BRy73yL1euVen8+osFh0IWixkn4/sY7F8LL+f5RcK/cJAQBhQKAKK
w0PF4dHR4ZFef6QPBvXBUCgYslpDZLLVSgmHKeHj4/Axm33MFonYopMT0YlS
eaKMRJQRDItg0SgWPT2NnhLEKYVCENRYjBrjcGKceJwTR5A4olIhqrMz1ZnB
cGaw2QxUqs1GOz+nnXO551yxmCu+uBBfXF5eXKrVl+pEQp3A8QSeTOLJVCqZ
sttTNJrdTk+n6emrq/QVj3fFk0h4Eo1Gorm+1lwbjdfGTMaYcTgydLrDAWWz
UPbmJnvD59/wczl+TirNSW9vpbf5/G1eq81rTSatqVAwFYrFQtHpLEKQ0wmA
IACWSmCpXC6VyeQyuVIhV6rVSpVCqVKoVAqVRqPS6HQavVaj1+r1Wh2C6gAA
QYxGg9FoNhtNJrPJbLWYrbu71h2Ldcdis1lsDofNub/n3HO591wej8trt3nt
Tqfd4fM7DAafD3e7cLfX6/YEgp7g4UHw8Pj48CgUPgpFIqHo6Un01O8/9RGk
jwwGyGA4HAzF4qF4NBKPJJKR5PlZ8vzy8vwilb7AsFQqG49l48lkPJHLJ/Lp
VD5VKKaK2UwxUypnytdX5evb2+ubSvWmen9XvavV72qNRq35+NB8zOcfc612
LpNptehigS4+PxefOt2n7utL97Vcfi31+qUew/SYwYAZVivDar1erXF8jW82
+Ga73WyNxq3x+9v4bTJ9o6jJZP75Mf9YLD+W31/Lr9X6a93trDuC2BE2G2Gz
2212h8Pu2O8d+7+//Z/T+Wc2O53/ALipn7I=
       "], Null}, {VertexCoordinates -> CompressedData["
1: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

        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
mawSW609+ThU1iNUrMQivGUX4s+TjyG1M/zMwyx4lFAFhSpL4HG2+LjWMRb6
HogcE2kvQZ/NrqwMSxYkYx/wKI+UQNxI8Yf2aRbqxO7f9J0pwfXZHxwMRxYW
ezXMUvlL0Sih0xvmzsIbXn99bbFSONd1sLW8WXCcHy+QuagUvuFOkdM3WJAN
zbu/Q7IU/Vs043eN/D+e6ilRG5n8//Xhr8jFcozNncek9CgZ8Y/N2Tvh5Os8
LDo25881Kw9P78Vjc/6yjnc1jiwfm4vHy193o/7asbl4s71mJR84siH7J4Gz
/mUpkh77eT+5wgbPxfDoAqcyFNK8NLzusKF0aZY5n8yHtXe/nOBIYMNZVPXz
37vlsJDfkJOVxUZkcdvKq03l6G69Ys5ZR/ZfuNueOlKO3g+rY8RH2IheOv1t
e1U57mgtPrFJcAJHaVm7DnqU48887aa0FRN4cNLw+aOhMiyejArQVJxAxorc
2F4yHysGihYXqk7gZ1/tTq/LpcjWKq9/sGcCN+94NVnFl0Cl+ma94+4JhNg/
tI0uKIaHiES//9YJ7KsOebxjoggezN7mq7ITWHfw7Maz+4rQcufITUvhCagZ
mQe/yCyEyZWSnJssNt4E0+9OWhTicKJs6f0GNkLr5GxMdxTi7z/OyT25bGz+
rvHEeF8hsoN8q/SfsZFrIryrM7gQqxQs2OdC2Cj9OW3pPY/MB5IegWJX2fiY
NPrbMLkIXhsOJro4seEtlHeRca4YQtPVT+HARuw9QVi8KcY7Vtd4A/nOetMu
d4PMI5+EBGNlXNloVzZ6maVG6u3fk528buT+E1c5r+Ym+y0UXkVdZGOn2lAI
vbgIb59xzqtyZ2Oj0rD/4rAiVDMKwl5fYoPPMGpFl1ERSgdaCzddZoM3e9D5
wuIidDXmLykm/nFuZk13VhTAMeLzxwGClyq0bDO8VwC5rYj6QnCIk2YU5VgB
CgLOdK4h+PHECidjGVJ/PS5jyp5svNPJZCi15WO3atKREQ827tHSp32S8tH6
nTvHgNi7FX3Wx9QhHxHnShRMiH8/NVHdsTUfe4Lf31MxYuN2xmQFs7UUep4O
3/sPs0GdZ3fLf1cZsu77pa/TZ6M7KnWvzt0ylDnm8/brkfVng5w5esug9+/1
/N26bNhrZPd5aZdjnVJ0icR+Noq3P1l340k5JnbJ93jrsHG4ulit7W85tKO7
ClwJ/qv7d4HlsQpMHty39yU5bwXrj1ny1p/Yam1BX3+A3LeSeISZ9U/MF3jx
d8dBNnRVtW90k/njd1VlXyXx5622qcq2rJ9o3Pq5YJT4q3MqrV2u+yecOWfU
nxqy4eqh3B638BdWuZV+rzVmo4ItzriBX+A6k3YhwpQNNy705J3/BYbQjVgh
bTYOTGVdzdhVgiimyfU6NTaMFkdl5q8uQcKxfqugHWwsD12pEb2oBHZi2TdX
bGbD8nPy0718JWjxeGn5Yi0bQ0sN80qmiiF9xP3QihXkvSrsf20bL4aCmHR5
2GI2Em99Ng4cLkavyXrjP6JstM3UCH8bLIb/jVXrs5+PI0Q8l23fW4zPO1fs
WhM/DlnKpeHwvmKsGKo+cP/hOOEROZ+EoWKUbkloEQgbh9+RRdvj2MXYLjRs
Hxo0jkc5nGNXOEqwJd/VVO7aOLZGeHRun1+CjYO3xSs8xjE7fNi3aGkJgr9n
90W4jqOYc3XQui0lGPYwYFVI+SOac/HCTwoNUL53l7XodiBOXle99KyuHmIh
DydOud3CE0aD4Anferi62n+Z+XUHQvfPLxFcUw+Nkpu0a69CoKj3MqCvtA4r
NTQrqsZCwblLLUnJtQ4chomn5dPDEHdKfpuEBOmPZ+OPL+8Ow8dBLtmSzFq8
fOtWvaouFFn5/8RXvKtGcQ9r+J53KPTHmE60o9XoKcrdnxYZgn7K6RsvRqrA
r8Y9LLAmGJp2Tp2+alU4kvCzyH39bczjE9V+dasSpqevDq5IDEKKuqH03boK
HBHVW3Dn/g1sE1jQ8GhtBdoutsjwTF+D2ZuoN7vIfFytpKLhVnmE8jfy7suZ
qQb0eyb+KtvjStn7WDL1T3QDvn6qq0pacZ0ierL73VXtBuReeNR46EYIZX9j
UNh8HtKvBcKmfH48oHwz0pFoaqlHwPKPQi1v4ihuy7+J2NfU42h0FfWEVgLF
xMtE7iTp99ydnqZXnJ9TMqx89WMWNsCxtCtBeFUypWhDxQepEw0YtXX69nTb
K8o6J7trBmkNaBhyjvL3SaHEd9bcOyVNRVHp6xbBvhRKmLNme+hNKgT9dvIL
XEqhfNPH+shxKh6drxRSW/WK8ukRl9teCxp+m/vtqRZKpvB97HarTaehOSY/
q9fwOSXYm1Xs+4cGBhdfldmqBIpiycG3OWsacY8q6aToEEdRqZ9MT97ZCE+e
rfuvBzygWJoZ31+1sRFVzs1Ge+aHUF79WFMxwt2IM7OTvBq5fhRZPdrs8wIa
OGxfHvGxcKFE5h9IvuRMg42I/fVjvAYUx7/+W/8J0NAm0bjFd8KaIqBqLnFv
Cw1PgzeK6nOdpbDf0tx9zWk4wn4g6THpSLmc6vpd8BYN1UZauhYDrpQ489pn
Sz/RkDEhuVzytxuFHZ5qG0On4YoH85LeJneKlp+RxBmxRohNpfVvmHSn3GdX
xJ7d04iXB7TK9+y8RPkb1PLZ37ERrkdeNdzPcKeYL/ysYTnZjJ7TK60z7N0p
fvVjLy6vbYFf24cameCLlBi5GaGLxi3QOPrCRXOlG6UjLnbHLv8WRC9+zcux
wZWyZnOL4Mt3LVDcqb6K+5AD5Z3GtucpTS14Oq47GrD9NEUuS9d8tUAr8vyT
a/dKWVDOWFFpf7e3YpP8Lfd4xnXc/Rgy8+I1Ff+c4tf8uBuIA9Lrnq//REXr
uiWWlw/eRqtMr5d6LhUrs+9RvcRDoXGcmdNWQN43c/svfde7sBEW9hQpoUL2
iKrSfvN72PjL5klBORWV7r0n7ug+wB2TwenpSiqqMqTURndG4rQEh1ZOFRVC
5/0mM/Nf/j8OiWIOZL6aW3/qsYtP+PuUufOen3N7I/zi9Zy914vXr6yJSZ3z
x0tN55pJ8Js5f8fOr6ngvPp2Lp6e7POZB0+/m4s33P60GetZKVqb7/He3dQA
+vvepaZNpThfypVfVFsPOPSOHRUug1g1/6qvPvW44G7uWbqtDE6aeXrJq+sx
ez1L/7lRGXaIpo5/IXyz4E2rfJV9GSJjvc6sIXyTtrSKpX65DH3PbqitIXwj
Ze/7sedqGUI4ZkwHCN8Y2R0KpPqWof3T2ukV74neX3jiSi75/jbm4Kku42pc
uJg8v5norM3v3q7NZ1WhvXiiA6ZlcBBbwQzeU4Wpz1aloyplUBb6dOzhnUqo
BKe95VtYhq+ak1O6DRWgdfc9esgohRVlkZPY+grwSV1PzXhdioCWE9NHr5Yj
q+bh+FX1ErTmq2p/IPnv62us6y9bAsmHf+rVSL36T9afpQmUQO2EhdXZ2zTc
o6SZRBCeL9Nylpb8QsPidEGftO5iKGWxphQ6aThgUfdap5nMUfzOX+8vbESk
xYv5xvWkL4xpdW7c2wgXtZl1LbXFcIvjaaS5NmIgKuwVu60Y1nwBVSXzWlAz
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
p4J6HKmSvH3sOxuPek4HxlfVY3XcOU7XFLJ+j8Jp54l6WPo9s+u9z4bVmGTV
XuUGvF3VzKvhz8aGs5k51NAGjM80JMdcZkOGtsvpIZkvErhMWv/7/UC+mobC
vvIGtPYcEt/iy8aCYwZW8582YPL8D4Vl19nYE3SMX/liA/4JxV3xI+/hoU77
3LqvATNXW28eD2Sj9nD/3hVSDYhtSdFOCGIjNlCnQLy3Hq4T3/osbrIhlanh
/Su7HmNfBETuEKzZ8rrKO7QeNflH+xeT9feH3+T4zNSgY/FCl8/kvLUZ8dIK
1TXQzuYKKQxgY8JIvn8qoQaxvBt/6hL7qn+3hfK712BZY/jKPcS/xoatSg46
NWioSnmXTPwX75dohnQNXo9/5L3pxQb3aQP9hP7fCIjPnG0m+aXFPd77Ku83
Hu7KDnY/xcbzM0aP7fqoOCeot1TFho0so/xT5vw0HFu24tJxKzbRp61Xvqyh
4Snr/MdqC5KfxTd9z2rRcOjFra9J5mwwv3W2njhJg26P5/56Mzb2+dHava/R
MK3sU3yaYIa5d+rXeBou3/gRYEiw8Jtkk/k5NDyaF+RSSParDtwpcrZvwnjt
goui5PzWcz6WGUFN+L731b1PBGfwXh7pfd6EJ9cGHDIs2egVO5o4lt+EyGXx
pxdbs9G5c31yQVsT5IuZ734S/9t3F57QmWnCYoMx7S4S35T0Zk0HmWaMpJ1l
Hj3NxugppoyscjNsjinlbj3Mxt1PB90EiN5JX68i9EiHvKeD+ipVMu/84Avy
HtjDxtuMpgY64TOD5Evx8rvY+MDT2Me3hwqhHw68plvYePIj/XeqChUzz5ac
uLqOvOf0s9U1hB8leH6oR64g3y2kw64RPi5X87Z5v5iN1SU51HcE3+l66ib9
chy+iYc2LSbnh37w89v5dByvaoLUy7XJfOXQu9o8ehxx2mHiPLpUaOh/4w25
Ow7bU7x5FDKvlei/+lFxaxy9OUu9/5D+YGJ6YGL19XG8d1SKfEv4Nex0zOpI
z3HIFgn60mxJf5DYULTGbRwBotd+eDhTsV5lUWB5sTNFvjikMmeUjk2xO8aS
P1ylvHapkTej0NGz+JWKqnQQ5YbyM2+P+3Qcma515313l8IXeOstpxsdxSt8
e323RVFqY8Tzt1nSYVsZlFgh/5hyWcyZ4nqMjlKu2HkC4YkUh7IswU1WdGTt
qNtjWpZEOZlTk9Z+kQ6dKFOlZfdfUk5OTKitiKTDfUG6WefnFMqmuAXHH+XT
sWjF+LtNC1IpF8OPl51k06HvKVpRHppKmfx+YumUAgP3xtRmb8qmUpxo885/
Ps3A05TrPQ9rUig242fSqDEM/Km0NFmf+5LiM9C8s7+QgbBrgV7DM0kU0eHy
sn4mA81e8u25xYmUgO73y4M4OnDP002EkviYItp9/+ZOgQ6cefVR4U9yFEW+
3fLrOe4OLDM6X79PKoKyhnkg13+IgbpDHyR3FwVRgoUb1tVWMuDYtEzY640X
JUqd8iLsGQP2xprB/i0uFN9sm+wIVwba5FLiGWbXKZP+MTPnWhjQOHNDp/Fj
ACXT26P7tGAHTB1vvPMNuElZbjEY/WdnB678ubxxVdltyuTR428F7Trw0vPh
N5egYApPVcUV34gOZFh8+2P5KYRS1f5PRJXSgWG9IQ/V46GUxmMClnIDHeCQ
Nz2T5BBKkex6tn2pTCeGt/40mf/8DqVnVmC2+3k3eja9j/8rf4eyeZvPuoZf
3YjmcRj8sPo2pcC12ukZRw+i76+8Xxlxk/L4aXv65s09WHntsyQuBlLyGG48
1uY9WP/m0WftUn/K+ibZx9K3eqDxb5tep+I1ylVxcGunEzy4RtGM4kFRFvcW
+d7aA45jm6f7Ak9jR262exONjmpN/7zlIU6QSDb5/Po7HfyquZHn4IbMt9mF
y9+S7+esxdibLiFw7d/ZvVF0SE31cf4J8cCMW1nvGj86xN6ZOQlaeWLZ8wc7
a+3p0Mj/x5Z8chUVGw5+sDIk5xX73bIx8EKWiy6qVeh49GXTqd8BfuBw8Jny
6G/DldT3vqce+OGJ0r67rTVtcA1NzDAy98OyO1pyB3PbcPcIR1rwx2vo0rr5
sjipDTaOW9aLr/RFYI2PyJmwNujK7c5YPe2FKq9Pm7Z6tCGjpmu7oL4nPGNT
8nbZtMGv4OGTEyKXUSySZHdTrw1dzy6mf353GQtNwo04dRgI2PhYklfQF8M3
LdbkH2DgRVXZ3nSKP1QF9kSUH2ag+5Q2JTMwCL0vcrcuN2KAQ0bmTr3xHXhx
Vol+MmZAUHftgXL5MNjY/UkMP8ZAmm6B/iuuCIit1fiVepyBjyEjm8VH7mGa
p2RMyJSBmd/9F0pWJM/h2XFu22nJl3PrTfib2I/nv5o7L/p3y9ql3Clz9h5f
fxDDYKfM+eP8Im3Sruf1//tbE6EjXp86F0/jmnol8/w3WPC/eDkuHQlpP1yK
FwmrrgVU03FAUTZ85nwpdr4X/h2XRYdsYVpik38pli3UkbN9TodwiHmSU2Qp
npb9fdAdSodKmCXni6RS2Kn2X93pQfgiMP+j9/tS7HC/q2VpQ8cg5YNh3+dS
rPq57PI5PaKna9SEBzNKEeFw65U90d/Pqm28xcl3Radwmc0DbbhH+y6X/LEU
fYd9BhXq2rB0YPmqn6mlYIvunN1NaYPaofu37yeUQuHNPcbpl22QnOieHoso
hZDl6MrMiDbIN9ynzPiUImWNymotrzZwLNr3NOd0KS6ONKmIn27D9oj2KTW9
UljX8wQpGrQhZ93slc3WJTDovihY48vAa8n8msG9JTgizYoye8iAeSQlSHhj
CbSCWKe3pjIwvkPu48PFJXhqkTp4oICBbxvWtT3kL4G586+AGBoDC24cHJKY
Kcag+gdz0VEGpKUFpZZOFuP682Phjwl/VUKh4zW7GBTV8k0qsh1oOCC/2pWr
BAnzjRo7nDuRHfjR6Q5PCV5fae3xDuqEmLuZlcL8Euh/OeI873EnZvc+czWW
LsGB27t9nD51IoojxG1yQwn4hKCSUt4JddWq26Ig/jxTbktldOK8TaZKqGkJ
Hp099+vs307QvELPn7pcgg2rbsZWiHVhSe0H+wOMYohc3S50YQEDFg93qkok
FSNrf8e7vPkMWFdGPxY6U4zMLDfZnwIMiCc86TFaW4zj85zTn/MyUMFP+SXW
VQTZ+kY99XkMKGp/s3dIKsJs9NLDj7gYsJXQGLllV4TopIUZ+ZwMWCr+qwtf
VYSfKx/yfyBY/IN/i3FoAexSFbzUyHlf8p/GOOgX4OzutJxRgmNv9URnCBUg
4OeRG678DCRfmpU/VZaPyw9m+tMFST5bZJ8NC87H3rRFiV+Jv4zwB9K2+vnw
psrUBYszsL58XzKPSD4uNjbpLpFkoGZH8nRs9TcU1X3af1aGAd8bEPPdWobx
sLzcHG0GaNepxZm3y6BhPvan+SAD+7fNP6PKKINifGHcgCEDEtczmKXq5cgQ
CBLuIfVompiTviOmHBHiT0+UmjEQ8Tb3hfZ4OZhJ1jvvWTJw4dPmPd8MK+Ba
rDetbs3A1lNRGe5vK2AstfhDOcHJFzUDI8/8nMN8pZf2Dj/4Obfe49DmsM0F
P+fOe/B7M9/OkZ9z9nZ0vHfsW/5rzp+lwUFvt+n/mvP3t+3KadaVX3PxcNg6
UcWTfs3Fu33tMU3Raiooh3jcYzvocH7stsK9lYq6C/nvPCvpCBb/kf2xnwr1
8Fs5HBl0WDtt3VM4QUXxy7AetQQ6TPkvSSVx0LBn18m3u+/QoaDPL3iQj4ae
dd2pgkRPiBerrkoXoqHZ2PDJF3M6OH7fLGqeT8MD9T/GR7TpOLbwxq2ApTS4
/nBfvvtPGwzil7k6EZx+/J1bRXsb5u9LeymxhIZbT6O1z5YSvof1Q18JGgw1
mp0lP7ZhaBF9IEWEhlPXgig9cW1oS/uX85iHhtnmiqG+gDbo5wtZWf+lgs2e
ilNwboPyhw5PFolnd4DV7uzjbVh/PneKcpoKEQXuWO+LDJwKOSfAaUHF8SgB
t8rrDPzieXQ56SiZwxVSeE3vMqC5QG5XGtF5Urbnc8SeMCBldcF+434q/q3o
aRx6w8C1A8pH/vudTf4AV1R/DgMvWU5mLhpUcEcuEJkpI/m5nLF4D6jYu3q9
iUwjA4g+mpmiTIV8Nt+Sjvcd0LD90TJA8IaCHXvm5XVAQNNNO0mVrC9rOrC8
qgN1N7Z2ValT8fvL5OENLR1Yf2Z+h8NeKtoXOp5aSvRF6i7rG5eJLk1apPN6
8F8HvvM4KfYbUBGjzGEbJdiJ4tKbfsWmVGScfd84X7oTzudeBjG6G8ARuvn+
E1IPPYMi7Rq5DbiQuyx66SIGnAYqRkciGuC97ePORFJfd7m1bMTONOCSbY32
dlKP6hmPV39WacBrRY8/tdwMTDr7+08LN6A/Jav3NgcDn0Tdxzja6jHEay1s
NEPH90jFZY1p9UjKjH+7ZZoOQdn7vtLba3F4uf/nmjE6Iqz1pDt5a+FYqhNY
THDT3kJmDrUGzEslN3+N03GZ81FqdiqZq7TurBydoIP37iG+qWs14P/0dv7a
f3RczL15JfpoDfYr551znKXj+qELuq/X1cAupiw1n/DTD3MZz8NTv1H/vO3N
GiFSX5WiXgJqZG66zyP/9AQDSRUWx9fZ0xBjrXLmmw3h/xfspO4HNNxOEOL/
eYYBrUPl3VvyaRAXKbtS5sBAh+XhQ51DNDAlOn+8cSH11XG4sH9ZIzRTnide
cmPA9Szfgo36ZM4vDzsn687Az9zdVQFXG/FmqcWy9wRb+22dbBNomcOUutOf
VJVb5tZvMVvO6XmmZe48/bblV/0etMzZGxh+2rojv2XOn5qoy7K+Qy249T9/
g13FXPcsbUX0/+LJdLHUt9BtnYvX2CnEONCc7BumsNV76Ogd+etmdoqBPKNl
Xfd+0vHySkuwpD0DvJmnLsYSPRBi8k/lsyP5bqetfOoZeb8fXnk7iY72Oqo6
NhFM+KI1TDiS+GnsYhFwzp2OQnri51+kriq2KzR+t6AjRVKVu59gj5Tjk4v3
0bG5jN9znxOZE+63lvix2+AZsP7EbnK+lcfAB2pLG+S4T50XOc/Axdt/T+sU
teHcuktsConLrfVcY827NpRtDx01JP5WrUtk3Ytug4Wk1EyhBQNf82svhl1v
g2WN8kk5wosyYY1TNefboLm2TtCe6KIlysu43Y3boBHKVTW7nIHF1hSWRRQD
5wWmzkYvZuCE+qD3MVLPi5JKX2qSPmK1bmfSc9LvNbNVjWZJ3oQYfd6lSvp9
W7Tr9Ro+BpTt9tUKjDCQc0PsbQHJM041iyke/g58+1r8spL0QbnFEuKyKzog
eG5PLJv0vbQjqqcPkXmiZ9GOBiapgwDp7gJh306cDjLW2ELq5ES+8BO1h51Y
f4+HHUHyOEv7vc6p1E6oNWqtEyfnpWuf4HUt6ISvQtyJ1zwM0Ps/7zKldWLs
Lp+DFemL5dT0A/NHCL6nfH+dGANMmn/Fdb4uMk/sOs1N4uMrvuP+clkXYuKS
ao500bHW/OrSD7KkPoJeXW+uokNmx+e6vUsY+F670Foik46/ywsl+hYSPVk3
zeRJpKNDRDTujQgDLpbZJTmE94831fiFErttaj+K9hPeX/fPVjmU3EtDSHhR
OuF9Zc0nt94SPwfuHPkqTnhf4t5oyCi5pzJ7jkuV421wXEuhxpK4HtY5ntxA
3t3kuQcnF+GT8gxnrbuFbRgtuS4aQtbLWzcuFCfvTrsfukSZnP8mXiEnM4rk
xfPo0HnkXQaW6olE+7Vho1jL+iFR0h8TD+ZknmtDpfZG7nEJkkfrLhzZdLQN
nRoxwQuWMcAl2K8ocIWB57eP29iaEP1m/b4qN4gBv5zV21aT/vrHMOzBS6ID
y9R5n2y2YkBnu19K3nOS742B8DvJwLrw17LTHxkQ3hm1bLEd0SPZr8eMSZ6M
RH97P0LmXw515nzKLwYSzPjbRM4ysPLdX30lOpl7VSO4nAn+N5Rg9iKnYw7L
nPoYI13eMbdegzGcdqOxY+68cdGRwMbejjl7teeXTi/+2zHnj9whkYWKAp1z
/gpq9Ncvkeqci0f64fvLVWs78ex/8TqlPB80L2fiUdmf4EdEz0eWhr1Wb2TC
Ld2sJegkHTbvtM9NdTMxz+zbwqLtdHicnYi7O8pE3pPhFA8+Opa/VuAY+8vE
Qs50j4/UdujA87EsZy+26Uzfe/i6Hd2Us5USPL3I2E89oOLTjq6Fb5QreXtR
qbFvQdbhdlytsx42EO1Fotyg7JarzWifp3K3TKQXfGs1WmWXNUM5hjddULgX
FS6bGGp5TUjbvXxahK8X+T5/Fb7YNuFh9G+rxlkmTpy/dbOIrwmbN2QudWcz
sTG50ep5aiOWd0sXt/QSbNT16oZRI17bv1GTa2YiQvXBj9g/NAT2WaeXuTIx
+a05pCGcQfjq9Rbp80wEnjJaF5fEwPCRNZ7udkwoy9R8fZXNQL/Hlp42ayZk
h1drT/xkoHLyotJJCyZy7n/3v9zDgN0K3fMTJ5hYOvRt/ZJZkh90t+nnpkwE
ST2urJHogP4R4/TzBE8Kq81Gb+rAAg8lnmGyX//YjnW2RP/LSBziqrRkYn3B
z7OrAjsh5bw1v4DYk1s/g19xnXjfWSZTfYqJlqhYzVNpnWh6tEhz5AwTWlYl
YoXFhB84ZfNWOzJhUF/vMNzSiRm7yICzbkzcLFq8rWasExMF3tRPnsTe3eeu
doJd2GG3zYxuwoTjn3XXaOvIvLvcf3XefiYODqzW9V5F/N8oaO6owsTrBuqR
ihVk3rng6Dkkz4TEj8iiqqUMKD17vNBoKRORWx9fCCR8IShQX/1oPhP0dKmU
ISlSn0OOZxpmehB0Yf9JUYKL0t7fmz/cg4bacZlOwkPDsmJOE8t78EIujxFJ
9jf0LBvdLNaDL7rjWXJEj9xf9fbuBc4eVK7uNLcj9jxpXVzFo91QCJblNye8
3d+uOKHa0Y21w4KRPIS/3DgXCf2u7cbnJ34XTq1mYLP0ssLoom7ozqt+5LKe
AdaBnw8eZHZjgQv9g7wCA6uWnyhtZDDhYhPC/krm78z4axm9f5jI2pSn1Eb0
t8Sd8tYDYr1Icb5XM0Tq75blF46htb1QajTc10v6EvX0lY8l6r0QYjjcK3cm
/Phy0qXCuBe2HhtdHlxg4ElvzcN+h170xkjs1CB9r0rCxV36Bsl/Jp1ZSbDk
BPNWUWnfHNaRCzg71t43t37G1iZ04Z++ufOEk9v0Fov1z9mzfJcwNbK2f86f
av+QZZHq/XP+bnKharOP9s/FUzA4q8Rzvn8uXjt75aAGs2EsVSwtv032myxd
LfHNdRhZlI1d4p4MHH4s9nAqaBiX4nLOXA0k85nshiaf+GFE6eWOZ5N62XlG
N2pX+jCMzib6VZP++cauyXBp2TD8F77Z8zGegajCZp/l9GH8XpT30SaB8JNr
nZfin2GIirim1SWS+ctdpvoCRsEKSq4rT2Zg1mbXROCxUTzjCLwuSPAKIfP4
MKdRJAc8OShGeHcqUnWFb8Ao1vlqTrY+JvfPcuzRiRuFHG9njDexH65w2avx
wyiYqqfu9oYyMCr/3XNz8SiW7zQN2uLPwOPlMa+VWkbRu+GXkxHRV5Imm6a3
iAyj9tkMM47oTSHG4S3mYsO4KuA8okn64o5fkQ4KC4bx0IBe+7mejrvXJuKT
Fg7jxpXcbdwldPh//Nidv2gYnHI2lC1EH4nfaH8SIDGM+FVcGvte0xFvVHm0
l+DrPH539B/R0f91bxGLYDXbld6HCd+69xWKD5DzQmuuWjhmtqPDVR6xBPt+
f1t7IaUdIdlBx/uIfTPr6vQbce248vh8fps4+R5Ar04JaceCgtRlXsTfZrbx
2BDhV5kdIurZJB52X1W9uUs7rnPlbkgUHkacrOCyCZt2GKh8kd0qOAyL26l6
pUbtCPy2IfJ67xCc5r8q6yD3U8aY+CXNGEJ4fn3Ez2hS7/bPl+Q3DSF3scns
gncM7FYI3+xbP4SErJKuuB+kPqLLNxn+HsLKyyHDVk2k3y08FKZePYSfwbcS
D7NIvztwZs2+yiE8dFa2t/zv76lilKXnKobQtPp9rM9/f//QluVfWTKE6vA/
HffsO2GRx0G3Ibj+779fn691QkyX88rX0iG8VpEsqY7shM+Kdf92kf2rzHOk
f7/pRDe3+VgZsacVcWrN+++doGrq7rtSO4TAJWGnzBo7UVUVv0G1cQgXllBP
fyd6KPfdB2UR+hASEzuYbUQPsd1VxP3fD4H757wVe4le6Jw+45ETM4QGvo+d
+mS+0ZNUmkz2H8JXNz4uN6JP3jn2qhs5DMFo+kpfOtFtyZ2+0iVHh/C9RcdV
6i8dRe4GV5eoDUHueNXHx2Q+uT7Uf9p49RAUYw4q6LHp8MwpGwoQHkLW05EX
UgQr77msM509gFtmrbn+ZH45XhZ9U+n5ANKUzht7TNHBlbUz8mrIAJRY/B53
iS50Szvtw3AfgLdvenc50ZF3Kou3e1kOYE1lX7Y8LwPHbh2MNtAZANuyzjKZ
6KGv4gPWzlsGUCxQHooFDGwYebq4U2oAiy9r2g1JE/41Thz4bsRCzTdjxzii
3691auu1nWDhNrPgpKE1HdKmNlM91izIfX3hf1qJDvn1Vu6NdixI+VDPjs6j
44W4XUG6PQsuYgf+LqhvxzFBsUQ3BxaWaQjY0l+2ozHlp+tCJxaW9u7453W1
Hf2qbcqRBL8uLNv97yDp/0YXV3U7snB4qJgx696MhC7rqIME/50dKuSQaga/
itbCe+dZGNv6S2Z3dhPk5G4+yj7Lwg3DTdWdVk248vNge4ktC31eSuG7uJtw
SO7cLooVC5G/tiacedmIqkThuMemLCjmOpa9PNyIKyvGUx0MWZDJ11bcxqZB
cUZU+CXhA2GJZZUZ5P5xYLUPhfCFS2B2uuIAHTrFu6ZvpI3i4yv57cVtdDRr
r/jM9WgUEf82JAXV0WHFwfFPN3AUdc3aS9wq6ejmdNSwcx7Fi62qFuHFdEw/
Ob/o1PFRmCiu627/Tt6PfUHyiMYopHd59DgU0CE5uilf5O8wdnzF90tf6XjI
Ix73l/BloPYpaWUKHZfMB8ZGCJ/65e03UMqnI7pq/kWuT8PgKkpKPFVER7Zb
4yuVx8PgBRdnIbHPo/JLMunmMCAYKGjaQEfi7gApowvDEBANX7Swgw72/ndd
h8yHsUdGQmF4hI6v7bMxWWtYKJeP67MMYyB1o6yKmhwLAv0ijUKEb+tS1hzU
XsHCudoz1gJZRN+LzUTULGXhOcf1i3rVDPC3jfsOLmEhK/ZX79cuBkS+N2y9
L81CyaftnhbTRH9v0r1SIMWC6K+CrEWLOqAZrFlxjeB894rdNPkONIfz6iYS
PG4msfanI9E/d2J/9xKszCnqEHmjE8/Vas9TyHn8GRGTh2I7Ufm6PnyFDAtC
T0zMe993olRPzk1wGQvuj9YrWhV1wuyc2JAv8bf0TuPGR82dsD8acM+LxKOy
RXZVFKsTX2MKov77/zAsDMwW7BXogl9LBNOe5IPxOkmRwEMkHoEx5QKSL0pm
jLZ9Rgx4c9nGKduw4N34Xf8ImSMTWeYvvpP82+SpPZBA5ucFCSPtp1xYyPlt
UqZM5k7HLxfKRDxYSNzpZ7WQ6O9ZD7GGAl8WjCYLQxVJ/xXdGuPhE8QCGgze
hxPs89PR9wvr/3HonfFlF/79//qVBx/Ir+Uemzvv6slFi34Jjs3Z6xVJMXBd
MDbnjxjHM7Mp6bE5fwP+iOdekB3D1v/FI7zaXbh8/dhcvHkeMdvj3NjgXEI5
20Pm8HTsOGnhy8aL/X+145+Q+cRYKJ7rLhtV3MmShSUMtP5VXnjuBRsi0LRK
ZpK5vjJJZmkeG39NquQVyXtzdJ01vNDIhvZJus1S7g7c8Dm+4xmbjX3j83ME
/jGwzNXg3qDoBNxMjBR8O4k/lW7Z79ZMgLepYlMrmZt6pXQoPjsnMHMgN8yM
9J/cUaNyTc0JSM9sscgnesZ2cLuW3r4JtHnr8lltYWDXD/UDhnsn4M93iTt9
ko44vXi5YOUJhFD0dQ1+0CFmIz8RvX7i/4j68miov/9/W7ZKkiWipGxRIUrE
k8haKalsiZCSZN+yl60QEYnIUtYkWykaqex7tkFhxjILM8MwpPC77/P7Hp+/
nMd53de9z3vv8/F4Pp5zGHDyVHDMw+c4uDv3zeLBrmW4/VyIruaNg2MxxWIF
qwxYbxDY+HwNBxcsLYpzxxgwoG73IO4SGt+3dOb4dwacf9521/wqDsSYF9ak
ihjQXKTV8+sWDoy2/lCSSmIAp1/vn9VIHCwek4p7H8oA/Zglndp3OMjorTj9
15MBFzXMgoOQfpxx4O9pMmDA3ojSjzYDKL8uRZILtRnAenDkpiQ6rwxxvdJs
dQbg/OVZ4xUmwSE6r7j8OAM+q5GLgmwm4cKLe11jSgz4x3RHDhs7CflLJ67J
KTDg3Y+DfBGfJ0E59w8l5QgDtKWXax1Rn1h/RdbrAMIJY+HO14WnIK3i/kXM
UQYwFZLlgt7PwBSbP89d9H5/OMs2r/EZEF90zFBH8+N37btwdgcBGnvsibIq
aP/3R9RJGgT45ahy8vhJBsg4XlNRciFAFOOMlI0mA8bT3vZzviAAPOXPzdRl
wCOX+RXTJgI8bWT5RzdmAMUlsHOJTgBOqtR4G8q3TAdJQyoZB3nf90+leDOg
z5baMDeKgyt+P+vY/Bjw9ZjUXHEHDgqZtq/uCmBAyU3rbiWkj8k9uXbf7jMg
nmfs2eNSdD9lh5Z2BjFgj4JhOCYT1WNqNGUdYaU/7LTBeBwMfbz3NQbl8+0d
7Ya/g3EQ/1DMJ/ABA4iTcQv1GRNwiWzZnYdwHm/D2y/IT/1M5X7hjHBT4oxu
XeAEyMzmLnWEM2DUdV2x0WUCZDOQpwhjgPVOAgFnPQFD3zJ33EP3HRTW2SN6
bgK6My6rlKL1ZhOf6gRpTEAeR/unuEAGPNXXDd5+ZAJ4HkTfpRoyQLVzqD2O
H/HhcZFTxGkGCM0fCr3Ai4dTN9oCWdH931zSZrRuwwMmCrvX9RgDkvOmdTe4
8KAVot/WIofON2VoF5UDD8/BnnPPQQaQzv5MT0f1386+4MZNUQaYcPW/3oLw
ahmPcxk/AxTb8x8dRjg74MZ8ff4SaASmSGdtx8OKVdFxnldLQPVI73rIg4eo
sQID++dLMEAfKv/vcyOd0eT33xOWIJ7JGBuJ/IN/z5XF4zFLcGWvz8grATzs
EfkV8yVsCX4fPoX3RH7iNKfP7+sBS2D4faHkv/9L6xigaLLPcwm6bT9Fq6N+
svsel0OWVDj4bmv9U/WLAAoVuG2pIRFQzTfL++k9AQxqcN5qF6Lh4jHv61IR
BLilNzD/O+UR+KpvMxIwJ8DzxsUoOdNYcK5/FpJ9iAAFheL1wmFx8OqtE3Hq
3wyMp5zXZEjEQ7KqZfpa5wzQfD7I252IB4tCzDfWbPQ8WEG05d5jiHpi8eeE
0BQM+e9wqGY8Am3r6W594iREm7ZW3qXFQMnepEeBiE/R4yEWj65FQw8lTGc+
bhJ42wV+rWpGwrti2kK97STsXv0byJTyAPQrtC3ZlSchweiP8xGHUFgKOrg0
wjEJ4tGTtT1X/OFE8AzRCvnjUDmNbq1WE0ynyfaq3DNEKCkzlQuVc8O4Ldi3
c/ITgSVeXspaPAzjR8NnqpFQ39xW0mAfEYuR2bryid5KgBIqhl/1WzJm11rM
V82PiI/keJrI63QM305OQ7MKAlwZnSeWqGVjtB8f9ImsJcAnZk337XZ5GJN/
GlnqPwmwb5bxYdvOfEy9BKfZyhIB/K9phTaIFWJ6/Eb3+0kQYZWSykF1KMLY
xWB9fl4mgurnwosneoow406fD5XFEiFDUpzpkVUR5nrS3XD/b6hPtnjn8mxr
IUaE25o9g0GEIjaSif7yG8zl2jc6XyVIoOAZc9lGOw/D7PA5keMMCfhl6NGS
QtkYdRYnVSUrEuxPDllft0zHHO3v6em0J8EvvSdGUwHJmFMbdb7nbEjAwcIe
+pU5FkMw2SbDbUyC2b29P8zKQzHfryZ/05MjgUF+wlNOvnuYQ2qvtwoyk0D8
o5tSz+BZTKuL1ppqFxESyCYWhxV8MQFW2kFhJ0jwiuFp6nU/GHPfCVtbjNYj
jE+LOViGY4pvrHoHJpBghY1v+NTsQ8xztpF92Do0n9O231/mIzH12IHfb8gk
2L27/OuH29EYHeXLya3CZLCV7ycaXIrB0OsHKTIGZHjewr2N8DYGww3SAW98
yGCw8Qsr//kRxrn4Q7sgJwV4/a+fz4t8hDl2TJLl+XEKFLB2Hd31LQYzcmfA
nNmRAjT5DoM5t2iMJPeuKyeSKGDO6ty1mhCJmaLFvNz7lQK3wl5Qrh58iIGL
D5kzKBSod10R85IPw8gdW3uavIcKvAW2CRJX7mOkxpLez+lTYZ/m4weDRuGQ
8yy+PTiTCJSwV8obyxEQ0myVBblE6FUXcykrj4EWQ42tRvlE2NX1jFDlFwf+
M7XF6UVESNGpxhJzE4D7dGeM0lsi7Bn+fHIy/ilQ81ZEt78jQvP6HTvpwGTI
uglnD5URoeX0C50nzikQq9fsGoMw11HtwOjRgk3MfdH8bu3Pws3xtvYKzDat
RZvz5R45pjiCKd5cr3CUkJtTUbIZjz8zB+vB12834104On2hO6kUgv9vP9OI
YCIh7zb3W4l/eF3WqRlC1o+NmJ4iwQ0FyWafw81gfpzph9RtEgysR6t6/WuC
qXOmC5kpJEjQ1KvS7GuC2Uh131ffSTBCW9pGqWwCofb7grx0EpgV7mlNzmyC
iy45F3v3k8FIXU5GK7EJjt277N92gQzTuyq2rsQ2AetYVd1YCBnyLplX+yU0
gX3Lwd8PhCkQevByATxrAkVNveupBhRozXnfx5fbBFykdxrxvhR4qUnfSqpp
glrbX0Vn31Cgoo+v+QO2CVouV/2p7qNAz/1g5dsszUBPmC19z0IFtTI4OX2s
GT46GifuV6DCPR2I2enaDMFb22vI1qhvFSrzOo1vAfzBtypMJ4lgGZl4yJK1
FTJCrzOXHSBCQxpOwGRfK7S21Fiz8hBh8YNMIe+JVnjx6q8oxwoBMo6/+Jlg
1AoVnyL1micI0HDBg+u7RSvkDMluMWsjAJNKk1G2QyuqO2Z5HyoJoCn+W0bi
Tiusm5yIYsokwDhf9l2pglb4Gxsd7G09A10mdTz6Ra0QcFR29/szMzCGdVJg
R88tSp3xs0dmQNHoiIxjdis0d/BZHd89A44vh3BOKa0A7Z3zL5hnYKeRII4/
qhUUuTW4ZcjTIMSZp+rt2Qrlx5iopL5pqEuYfZhs1QrmL8dbaV+mYboi6zAp
vBkO7epfUvEnQvb1qt+Bxs1wji3la5EX0ju5kTNau5phVmnJ/b/Pgd112d9d
Hm6CQS/cxRd3icBuotDx+1UTbGuTOyN8hwjb4+zfrN1sgh0UmybD20TI6XgW
0iffBLgkAkn+FhGk9tk0Ryw0QuWiu/k3J3SejIrLbJ++gQrbqd/4m0RYEZlJ
Kg/5BvQ1vb7D6PnWLimT0DPfALeTS1oOvZ/O5vbvydZvsN80QmsEzf9eopLI
2tsArUenxDVciDDuGCO7/rwBuJd2XDe5R4Qlh/XgV7YN8DQxVJbXkwhaJRmG
22QboE7NQj/Ilwg+snRpFp1W+O0qEPz2FREqgthy+4JaoTYbd8H1NREuGgZW
h9S0AvuB77V+hUSI6NXhGV9qhep6nWutJWj/mvOkHqU20NtzWd0O8XOQNn9c
0a0N5INDOtXfE+Hu0kw69m0bjELjmnk5EebqDj9/Q26Dln0m4h8Rvvy1tdPn
ctcm7o/hbdNJ6tocfyeeXWG2u2tzvsxXrF8kObo317O5YlmSKdm9Gc+KiOZQ
p073ZrzNTKt2eXbd8Pn/9jNdFJ61PaR7c79psb2+duPDsI8ayDPWTQTHH+KE
46ojyHfu3KIwhvQoYme9aeII/HDlVrUlE+Fgi7xGKHkELviv3bu1hPTHbmk1
Rm8UzCpMa0+vEaGsPYJPLWcU/oQ0+ZBYSOBkEKBmuT4K2YlH9azZSfBPRWCm
wvIXbHV1E0/hIAG9ZkX3jNoEVIf03DjBRYKqsIpIz1sT8OmVULwqJwnaH+4d
jUqZgIAA3WzmLSQ4Tur/d/P7BCxLPnuQvEGEe7cZmKX5CaBPht1ZXCaC87Ki
vPA+HPTJDo5KUohgoN8cVW2M+nodrjdHcOi+iixuVfjiIOXM91GBPpSflNf7
80uxsPe29IduK6S3W5fcv3/AwsnbY3d8zxGhe05pOAiDhY2FaQOSJhH0LVOa
On9gISTpJ1lRgQjvtv4IrGjFQu9479ar+4kgF83NL9uJBUG3MK8bfETw1t8R
drgbC6fLq5iusRKhT2rHUwzCIh3az0wWCRBQkimVjMabN+9YCttHgNwVsYiK
DiyoRgbd9+YlgEqOaLVtGxb6A5pGPZgJ8Cy4SfhlExbaA/n+hS/MwOdv+STn
BiykJTm/L8XPgIfaxVMdn7EQ5Rv5fb1vBlipT/40VWDhWl3yzP3GGbjlJYi7
XoSFF18Fyo98nIH+J8UBr2yxcPTvKeU/nURIBqq281UsHPkcwL36C+UfBctf
YIKF6BYh8aNziN9/HB/bGGJhSJfH68k/IsT4xNkk6mLBEVNH3rmNBLhVgZs6
2lj4ecjE/O0eErwsm0jxASyUfT4YaI78yL3mRmZ5hDNjTXm51UngmWsqW3MG
C7PSl/VHdpMhvcV/laaHBb3r+5gfyZAhk0nXvwitF5MSkCqvSoY22gfOyXNY
QAauuUafDBN3fGTSL2Ehvl/8usxVMmxPVvFpt8SCzF1Z1Xs3yfDxx9d3nvZY
aKgSMYjwJkMI/4Oqx3exkEs++8ruIRlopkmCn3eh8xZ4emIsmAjrQ2cfiDCG
oFCKJWgE6WGUuN4ZjqEhODpbkfjEmwg3TuySS6oZAkG9KaZ1d8TXiOxT3S+G
YH0haEYG6c35jkdl3feH4Oq5roWdSB9bH56deGM9BK4iKdc/IX3UX7p92lFj
CEqY4Y8Ewn6vTeVNHgyA7aXjdkJI3z6r3AJOhwHIcXEM00JY+NrxmE7dAdh3
+OuOQ0jvdD8VRVZKDsDBXqbwn85EmGiby25nHwA1bc1RdbSeQuN9aVlCPxw+
/Pi9HdJr3dXz6qMt/ZAr3XJQB+m55EmJzuXifnDY9534yw/5mz7OKCY/HDDl
75y6hfLf5eNEp8BZHNzvCaQIofx/YU7ERSE+WUo//DyjRYS4aquD7gsT0CWa
+GDsOBGMnH3PzCI+tuHUT2w5SoQm5Xcn+VMnQEqwKfCaLBHIjEpJttsTEMx2
/S1ZkgjioU4mg4jv/DJ7f74/SASLhoW/g1a/4LZgXQIvqrcDSkF+9zdGwXHJ
x3EHep4vn99hmjsKr/cYmepJo3jtVGOT9UdBxu3PvQp5Iqqry1t8Z0dA/v22
6EvKKF/1Qw8rPB0BY5cPghKIr6X5l3yWkJ7JmEacEzYighJOoeov0ruYC62C
SuZEGHa4Q1f8iQeWK3cWVJAezD+Kq27dwMO0V67wJaQXb8+e/8d6eBJeKgcc
0Ud6Yvt4ba3BchL2XN0rtnWFCKPlta9no1Hfw3FTLA3pUfWB6EzHD5Pgoape
PctGglymmw5805NwP0+7ngXp2WJLmdkg/xQkd1U6YRG+JFVswF40A7rnnil0
oPGqwa7lTUMz8Ov+NYY9Kwk6HNunb3MQQHXBsuwzmr9Uw86wR4UAeaYz0QN/
0Hn1Z9ji7AnA5Ri39mGeCJ2/2afDElHfyL0y6jBDhPsijgPJXwjAmiysix9G
+VJbE8ZEJoC4UtwLtXYiPDvNlpKrg4cIZv/7UzpE8JQ3MOA1xsPYXfPXjkeQ
PgqwyXlcxMOMG7U1YTcRaEY/fX5cwUPZ7bNYTxYi8jNRbBxWeIislifsmSXA
3RE2E2UbPCgqn1JK6SdAWcE3L2NbPDzi0dpOQ3EIVhNVje3w8CZCEXe8gACD
Sr+1y5zwkLERb/nj5gzoG/3b9hxhhc6il+wXZmA4wGnO6SYevk36N5qcnIHA
DIVUcQc8/FEY0i+VmIHO8hr7b2j+Etn1qKPbZiDalXjB1BoPqQOJQ+NL06Cr
t7bRheJVZ//u2jU2Dc+xqxVwAQ9HrwVbcbZOw4KJkOYr1NdzNa/f1OtBfDZu
GA3jQuu5+T0ZRPWv6Vyy4e4teHBr5LyVi+6fXdVy/01mPKgc+3M4G9W77T/0
k++u46D1AStzM9I/+aFiB4V/OHiil0TgESUB99jU1LtVHJTGC2BdkP4tTmT8
nf2DAzXGpZohNRK4UqoCbi3iQMb4/CN2ATLcbLz43B7hEM5eVd+DZGhsrq4X
XcLB5WnjRPwxMszx6kb+9/0Z/OQ199M6ZKDc4t/atIID3vsHvj4yJcNUURhz
9V8ciDaYeVTYkWHnOVKJzQYO+T/c4wo3MgzlfsR9YcVD3dJB+XDkvzNIW9e0
UB8dLqX/kt0U+ZvvxJMFdQTI5NjhQ0T50MIiu+iaQIAZfVW7pRNEEPzuv/Du
BgFuSyZ7KKL8eJHxyShSmQBe3mc9cqWIUC9HvbidnQB8ur5YE1QPf57fGWs7
OANcQ25dJ/cSITyiMT29YAZoJWvS9mJEOCDbnu+yawq0jopdv4fGa/ZwahZP
TkI+0+W0IdRvFxKLuLiqJ+Hso6tjoWj+5p2C+dlRkzAu28Z+E/H/lf/wkwQL
xC8hyacPEf8L3Ny45+UmwczjU/kg4v9fZT6R3+t4CCM8N7YwRvn+tM7VoxcP
DkaSS8yWSH8yDIf8rZEu2gyfMNEkgfRNnlrF8wiz/z2tcYcEZf3xQ4KniVCX
odjc8ZwETw1TzBX++/6CF5IdU42Ir2KNux8iH1AVrMvhvEQCpkNieYJyqK/y
IJE10f19VNBXJCPd+tpbVm9wiQw836pesSKssAVbfCecDFJPTHu1DhHBfu+4
U7coBVzSxN++RO/3MbpDacYUUFD5elAT6arWVMb4fAAFShf9d4mrIB8pHVX+
sRD1xzYFa6CB7kU1WFd2iAJswz270vSJ0PEuTEiGnQpPuwNVJM2I4EUnUtOO
UeGkRc/i6A0inPkbNWVvS4UIAz4fvQ/oHvOLhOnofnl96z9ZfiGCqqwK9wa6
j8tGLypsviNdNdWw+LSVCLVd/d3nW4hwez/XcaUlpCOv1yRlOoiAfd6x7Pmb
AF/3ltwhdKH3i5sF4poIEFQ+yRSPeBV3xGDf4zICJI9wzwr1EuFPQk7F/TQC
OMeMmP1Gzxfrsx3uXZoB7FM93bMIbwNJOdtTM5BNc4/PRPM53mBps5FE/mVr
q+IA0q3mxON4P54ZaM8Q6FtsJoJy4H2W2uVpeLx0/+u/b0SQldTKUpmYBtev
MmRaHTov07IddMR3LqH4qb5qIhAFu8KYq6bh4017IRyKh4XLRBBy0LyfpatT
JojwW12UuPEG+bvSLffDaGi+ujUz7mIi/EtYTvhP57GWQUtWpUT4RZbgHOAh
gXNV/M8F1K8n7j4wcngvCUx219zsQP69Os12MfUwCTawG89IFUivt3oc26pB
gtma6I+Glah/OSusHSJE3sQ9Xw6FLkiRN8cz4Faa9XHy5nzFLrdcKs+QN9d7
3JSEp5mRN+MZKoz4w+lA3oy3PsP+C92DvLmfrnnpawVhZGD+v/0KCXe4Z/PQ
wFk6ts5UHfl9Kd2PSnw0uKV7UFMX1eufIizK6gI0SMDoek+i/jdC3lC4RogG
FBXNHC3U//6tuE0pEqaBj3qR/E3U/7a0Z8fu2EODosT7GTdakS4Mt4lPIyxy
4m+iTgUBnseOyB0RpYEgz4c6wQwCWD7iWzqBcEjLaMMtsxmoFLA9O4/GD2TE
/lLXmIEY76/CogirmCxkiUrNgP8b95GPaL1Qtk+fdu+YAQfiD/tmFE8x//VO
jZVpyFF7P2SM4k1PFrFPQ/dvpi9YoYv2w3VqfFy1bRq+6BPqKtF+v950jZJF
999wr+tKC5kKp8NneDRRXnXErpkZz1BRHuGUxUeIiL/FAxF4KoS83quhQkL1
bz5Y6P44FZ7Mx5/0QvX3+tu4SfnfVCiVvHigD9XzuUjD9IxRKnRWsY4b7yYB
D2uFTNsIFa6xHdLvlSZBTkU7Zw3C7eHPpW1OkMCMWSSPGc0n9qVagH8XGWSE
syZKEU5QZFPPkCCD1c41gT04KnTh/nkIKZEhziHh9plJKliG8CcFapMBp34w
WR7F6+DxM6jhAtKThspfnSQqCISckhm/Tga5Is99h6hUYHeWzmp3RX73HM8P
9UUq3I+M2xYSRIbaDIWhwB9USBxR+3AmCPl53mD+/moqZCnlGrsgf4jfL72y
lE+F3F1bygyQf6TcNrpIeE4FH736q7+Qv5weS+aqiqGCvfEeQ3lXIrARV8Ud
A6hQE8wregL144knHAqY71DB9pH1n3XkV6tenatNsqLCi8rOtIcID7BMFdiF
UeDk0FMcM/K3nX5/7yy4UyAsNSv+DMInrCqYH9+ggFmJyl59NF7n4li08iUK
mA/3r2xB8zPhDAVXdChQpzQnEIbWF18ze/dbmQIBn9zXqpE/N8jN0Z2XpEDG
jq/Nr5F/DxlsKVEVokB3TP0B4wBU718INl5E+bfwzmF8C+LHtR9+AiUHaNCN
U6xoLPqPjzO+++VQ/jrs2teD+LX8bjz8rRINWpmTMBKIj07XfL4Yq9HA0jrv
ZQ3i71dPRv6yNg20MJ0KyUhnzJSfVZYY0oAWKmD7Humsw5yY2c2LNPhlmxnO
+xH52bh5y1df/odxegGrFo3/G+/NIcyxo/N/83WJpdE+9f9vPWg7Im/x63/x
ONZKn5ia/F+82KqUNMtZGsqf/78fu/EVQiX9f/slYJ/XHwE6KPY4cTxVI4LY
baNO/Gk6SHlf35WN/LeJWGAtrx4donmdra0Q/282jxRWGNDhSP0tvs5lAog0
trO3GdFB9drLJ+yI/6dTzFIun/3v+/wbLvAh/ks9GnA1PUeHx9U75tbLCdAg
kLlajzBnhDzPcDoBVg6VHZs1ocNJmsy1cMR/1WhDxXaET9MEP1gg/jf6FlSI
IbzFgJ9JHfH/BqeYxAR6H+scRDiG+B98R1BVCK2nr17OZ4r4r/+3gu2rIR04
vFm35iL+j1QcJI2h+FOl3oIy4n9BcH+Gtw4dlFdxK3yI/+e7Co/27aODTuP5
YsIUEXwdmIz3i9KBtPFtqugv8hd/8x2XdtNhnLXz89edJGChX7Y1FaRDm9o5
YXEZEsSLVrWe5KfD88PNmI/IPxjs8ceV8NHBeOn0+eDLJDhrkPO0ZCcd0oXl
DO1dSPAvfsHjJMIRhy9JWD4gwWrZtQ8/eOiw/yg99VAzGUoq17eOI5zmnlYt
OUYGfm+LH1E76PDlvVeIEIMMp2L2hdby0sGpvMF6YdsslJAjIoLQenP6lxoL
DszCuPL7thYUz9a7jw0Pq83CGuslRpYQHcwSrBI9LsxCgqrf1XUROrywP+h6
5+YsNHdfKFxC7ycfe2HcFIjy/3PhxrutdIh9OHdSDPGf/d14swkbHVxPHI2V
RvwPyaXewP5bgEzvuBcExH9HQbrqxaUFmPvBdvEG4t/dy7H1n+cWoK/+1JEU
xE/DeA1fsekFcAh9fToC9btOyl/HAn4vgLDpwFEFhNdfklijPRagbrtvVSnC
nDVRuVPOC1Dwo/OtAHpf8L3Dhr79AtrnZS9V1N/KHBlOq7BagOt9OGtB1G8n
v2qiypstgGZCyNlSxPd9HGTvj2cXoN9r56d1FK9HhEaK5Rk036j2uy3+/9Xt
K2+FNBdAMDm/pR7p3fiMdcwXSzoUujNnTCC+FEu7MTU60mFJQ2WIBfEN+1KQ
n+FGh6kQjgC+WiIkccQeNAikw93ZRtK2r6hffzwbVBVFhzOL4yeoyCedfitv
fSKJDpnRr/g/NBFhb6cItTGTDpLFj0ZuIN9UjXeyuVZEB66/V5/MI2xp9vqW
8vnFTbxwe2Gw1WJxc3zno3FnS8fFzfkul4gbjrotbq4XrBCWYxi4uBnPiReM
8vSoxc14HXlfNrY9Xdzcj8KFMo2fLxc393ulpcv6UgwDXi9lPblGJ8C+4Wun
3RMYUH/FcyKlkQAb2zJD/FMYMMEkceYI8msnXkP4rXQGcGrZv9S8Q4CzSV42
6lkMaPLHi+JPEWDxREk3NZsB/FWyx0/wEMDpEUnzYS4Dwi9dfXxlbAZGBj7V
LCN8LL3tl3XZDLAE3Bq1ymHAt54borB7Cqpl7uwrRe9Tlo1PGRCRrz8ZnDiG
5h+/eXTl3qdJ6LMK1Z3PYID3hse23seT8KWpdHHyOQPSBeb5Hl2bBP4TmRx1
SQzAj7/yqDg6CdbpXY8C4xhwkueayW2WSeBymlCUjmRA//Ze/8Z+1Ne21tT8
82GAgUbqGxnUL2+vLWq68YABVup6h16i+n3QqZT7zTMG8CgqpR46TQLFB/bM
z0oYwCEy2itsR4JQw7OcZY0MsPPKsnP0JIEm2f3OaRwDjsiZnRjxJUFsXRU1
eI0BmXZ/qhVcSeCl48F4KbgMB5J+PeW4SgK3m5o6f+WW4bVbpTr+GAl23m5y
Vzy1DG9OWD3ZwUECwR77C4p6y+Df3uUa8BPdX37F80uGy3Dv/VJdeAbiT/fI
L/szyxDI/Yup3hHVm7rwP7lqyzBQ0HymUQnV5yF0RLLLkCEoaEhiJ8LaQf8T
xF3L0H7xRi3XFAEecmup+6wy4Ewmz2WrLgJUcgSG7x5jQPtdme+GyL/z4w0H
074xYOjVEVbrDgK8cJk91FiIzr/nULg80vvb7jVR59B5M70obL3HTIQv6039
+WEM+DEZK8ON+rMI9tdG/7wZIPvcgaJkg/LZ8p5Agx0DyAI4v6JRVP9u3n+d
fJ0BVafmyJZk5Kcd1LUarjEg9HVk1qlV1Hed7PtjbI3mZ+X4rseF/NTPsXdK
VgwQPNPv7obux3eByOlryYD5cyWlZchfjSZu9xJG+FoV2eO/701rEqmQEUE4
04tWekGPBO6ZT8u/oPmyavru9uwlw/c9JmViaD3zZ1d27DtCBg7/yS/D/62/
u4n9ugYZ9LpuuC7ZMGDfQunZ6LNkKCx2Frpry4CeaPaZRCuEZRJGtG4wID8t
kuLhTIbdWb9f33NgwK/auSQJfzKIZAfKrdxkgOX7E5LPo8gg1C/96DRy9Skr
/c2HwhE/k1J+CigzwJlpp4Ej8iO55KfPa2UQP04dk67yROdJ1kzUEGOA7uCi
1V6krzztYrFZOxmAMb2vkof80deT25yJW9D5zttbGt4kwtK3wyISq0vAICk2
7XAgAqmv59kFyhK0WOzvWEF934ytaPA+/SW4+XlBJ90K6bHiy+9G6kvgTVGI
zkfYVUZ90P/oEihlBrAOor4YL7JcWXFgCcRPirPIXifC4fG7VzaEluCivtvB
DDTflXcfCu23LUH866jrR5yIEFl9Ln6GaQn6RaPWR5F+Z1iudCcuLQI583Be
HtpPQUFzWk5VKPg+ePSt0oAKCqWWgnpWD8HHd+HBI1EqNCdxbKX5RoFeYE9r
DZUCQx+Umpq5HoHFME38WgMFmEQOtxntiAXFLUt2T5IpsNLaW6oTFQelRT4l
d25SQGtsaaDPLR7WxRYvblelgF+g3B/PtniYycprfMJFAZny9caPQ08g6hi/
1z4/5IflQtUV8p7Al+I3mpmGZIiupopmjceDoOfSjPIeMnSPzan4x8dBe99H
0vos6verH9VGlj6GbRTtXCEMqvfKn0fw2jFQHqcPLxJJ8Gq/8FYmo0hoLO58
m+1AAgL7RZWXzeHQvnHiiYEq4vv2AKHu3juYhLzMhNjbVJDvTfc79cQbw/ka
87NPkwrrLialL2ZDMfvKY2fKdlOB6Fks0bszBvNyLKFD9A8FeC+etLd3TMTc
eH1gf90EBa4YfUv/15qC2eZ9RKXlJwW2uwWW9LpnYLJdoyZWuyhAOTh51oQj
G8PD9mrw4QAFIkyvJZgU52Io+hc3dsxQ4Kwy+dgX5jeYxKMz6xgmKri+svLx
I+djast3lGtKUMFGtciX1aQQc1pjldFhSIVw5/q0MeEizNiluEkbbyqosW2Z
DNYuwtxtiVJ+m0OFKda/qT3fCjGWere8rnVR4Q1r0Bu7/AJMQseqs+gfKtjt
HU39u/oGU+d5hHMM9WH/KERXYl8eppFzXeOtGA2sD1g1t1zMweg/fpl7TIYG
rFX+FyWlsjBNBy5wTR+mgXvZk4z8gDTMh3KxeL8jNPCeiribNZuEscq//xQv
SwPxyaYvfLFxmMMWA2IO4jS4eTlB+HJJGCZlbOGVkSrqW8+13yYGRmIKSuTP
95+lQfKtXu9UbDRGQNKja4s9DUrjjM4Qc6IxiwFjqZX+NBiNzZL+MBKBafiQ
GV3xhAbR58y7mAtDMU8jlgt+5dKASXCNwv3KA/PB6YGDVBXCL5PbRkyEMWX2
IQ/zG2gwQdyz/uSOF4za7jn0to0GJ2erbiXaRMBXrMYhTBcN5PbUzMZaJAC1
VuB8PvL54qJR/9Q7n4He72OSXs00MLAkzxR9fwG6W1/o+NXRIC+kVb9+NROW
qQNLZ0ppIHXtgrmSaDbUlN7Ky0+nwZfy19PHZXPgc0yz8bNIGnzH2ee7puTA
gLDDM2k39FwxFn/IJgds7G00YixoUHMnns3iQTbML6ZGzejQYI/n0xSrna+g
9gFr0g0F1EeUkw2mjmfAa4vt1uv7aHCFPyzHxzcVHLnrVZ7tosFwpNm2ggNP
QTe15277VnR+BX16t8cioVzsUq8QNw0c4r26D9rHwhDrXbeC7TTI7B28mLqW
AN0Hr2iX8dKAR1vp3p7eJOAfqfI/jOaTML7U5P42BZjGTr/ai/p4YonVVWJc
GhwuzIkPF6TBHB7P1+meAW6fhDzM//scwlB2+vbVLLhxY70tC+EP1nZixrvK
N/GJaiW+8vbyzfEr3/i1iyMqNudzHhWUbNGo3FyPunff58zFys14Hn/ybsAU
Vm3Ge1Ps17966+rN/YiJ7HRV3f5hc782StGyhy1bYbbjonGDNRXKpmbqx5Ja
gT8lwo5ylAqnhB5ewH1vhcjgY8o+LIhPg40/heZaIeSM0TuvPgqckBQKvLWt
DcyYuHm3vKHAF5f5L18l2kDEFt932pcCrcMTtoIKbajfUnhraEABeRbLIBvl
Nrg113VLRZgCrg2Vvb/Qc05WO4PEEDI8nf8wLijfBmrx0BR0gQxGnlaVOnvb
wB7XT4jcTwafQeEgF442eHen4H7zAgmua6/WZ860QrZPt7zNdxKcfhFvNvel
FfzU03ztU0iAdewwcYtrhYqbas/ot0iQ19uxoXupFebqa1xkT5EgR5/diWrb
DJMxcnX0HTR4Q7eKzU9uglWe6a2Ge2jAWWEhrj/dCAtecy8a5Glwtly5ytKu
EUIaSsVVUf7lSFZsKeNpBMfYBz3y12iwS2+9rJ7+A54Xij0n+CG+G7DdvMzX
CFNWh9WfJaO+1/1antOtRni1ZWf4NcSHvedidunSGsF74KFB7HcaKLTpHCK/
aoJHgrc9ClHfzLwkjyl0bYavzZ/7no7TAKfOcmvMuAVkAu7cfYL6ZqrXxoMp
2VZwPi6XZzVBA+1HQnkcq62w6hb5/fAgDQh62r8CS9uAwnXOsRz16ee6k8Iu
qrfDE6LJKtN7lF/qTj8UU9vhsqaGaUwqyh+BjEmO2nYoptxR+3ufBtUuReft
89shNu/llKwter/0MFuOZTvcqUtfnT1Dg6yMp7eww20gRja9ynyUBhcu0nhD
0X2WP9z5gixKg74htzO/b7YC46Wfw2+Uj9XnjSb+CDTDg39dCc9mqXAWf7fy
fn0T2MowDJimqMB5WDY8+3YTrPkfM/H6TYXZeFp15s4mYFweerA0RIWLj/tc
8z82wnh8n3RUHxWcrPOv0Gwa4aNa67BcDxX8BttjS9ka4QFXaNpUJ5qfrylM
qOgH5HFW1lZ1ILxk/M+8oB6kXmR55XynwvOzQpdyztVDv6B6WQzCozw94azT
GHDdTeCL/kEFq1bMmIUiBqrfc7K/bKICV19UZXnQFzA/wnu+qZUKJz3fXvdr
q4PcGY2tW1D90A9578S/pw6WL9Z8uoTii01JOUV1qYUfL3hUy4bR/GNzpfsw
rdCT7zJ7D/FX9XeUk5VQGyzHRT5iEqbB6yef2Ubd2oBaes+KE52f56+b0S5t
bXDMsSspYi86v3XnS4NS7bDvtvUnH1QvKNwuZ6bD2+HssdqC4f006Nr5a/TG
GLpfXcXYMgkaPPly5qrgqQ4ImxWaXkZ4IPu5mdPhnk18fKV951erns3xb+5H
XNuI6dmc7xtz5AD7x57N9Rz4OE/VTvVsxmNc8yuIbVfvZrwsT33bv0Pv5n4U
Er8X4O70bu63458dqXoHFv7okD9VIf3pyNtRdbdkCF60xkYvIH3b5sl+t8N8
CBKUjzrxo/pYELw4cE5kCNx3GvYj9wMktji+LUuD8OWRZPAqqgf/jvMr25MH
ofxU2MlYbxrI/NDz4VofhKl/exN+JqB8VHv1DiM3BIq3/s1wFKH6Eu31Odp9
CBzP7Ln+AEOD3dOqYX2tQ/ArXdruN6pvBZdSzNoVsdBYpn2IYxjV74Nj7yqz
sGBIvfH20i8aLMgJTl3bPgwNHzHlsVgaWKVrOWV4DsO0ArfXPKqHSsfTO+vb
huG6tXTAsS80iLXs/sLBOwJHq6KZ7xTQAP/hkM2q+ghkkXzy2VB9jtES3FFz
dgS4u5mSCj3RfTXJxshpj8CMxIuCA+Zo/qd58rtERiB854c00KSB3desa+vY
YVgxiPxRKk0DzeSUT2IRw/CI/R/uv79L+3Xce3VNfBiaZvzPi6HzlV8o0ORv
wILw0NATFpTPTLaiDZztWNjfcG/Io5oKnbT9uKQ+LDgViB0uyqfCjbHvT8pG
sKCa9eH8++dU8G/heGY5gYV13wyRxBgqfJq/kRo/hQULEe8I0wAqpCTWCxsR
sCCza+bZujMVeHkYQY+JWFAPOnU904oKPx6HXuinYeEbD++aeDjyx291htIR
NtoYTKvzQP73XPrrGQoWrPPCpWztKTB7qO1TDRkLZXr/Pu80o4AYx+c/u2aw
IGFr5DyiS4Hsc1iJP+NYcF8+fKxRhQKyzAE/XbBYSHLtZBuRokDpaPkDz24s
jJDvVUrspsCijNmM5swQ2M56XJ8cp0K0ufSb45+GIEu0J30r4uNbCWaFpNgh
iAlJ2DBEfL3E7v7ons0QhDgq0HMQn9dnyOwzR4fAwAF/QridCu+vZykJMA+B
UufcVGkLFXKL9jcK9A5C9pFbdxybkR4ROZ6x5Q7CQNTNxxoIZw3ILHRw9UP9
74NNXEiP7pvEDTcO94GJrE4aK5pf2udJ5VRxHyRbpMbsRfq1EjSorRfUB5F0
TgsLFI/KSWkxNpM+mFrZvrcc6V8OE0uR2v4+EG5oPyOF9DHsgjfblsWfsCSQ
86x8kgrbqrbOBzX9hKdp3IcvIX012rK1f113GOQ+f8lWQP7Vj838vaj7MFzI
HoKvO2lw5Nf8xujLYTBo+Mrbwk8DwYdN2pIof2P99hvq/edPkg3zh1eGwT+w
9N4JxOefIkbiOKkReK3HY5MuQgOdTBYX8csjQLj6QNsd1cu8xeOyAQ9GYHjj
dvpHhJU/yJsO8P3exMnb7XYoaP/eHM+WKGzleu/35nz7hUT6vF/+3lyvQTrj
pFzb7814Cjvd73uu/N6M1zZ/a+sxybHN/cS/MX9z8eIYHPq//c5GXRdr/4eD
03LzMSVcNND7Q6n/2IoD1S/73KMQX+hPP3uce4WDk37ULAvEJ8ctRJWLoTg4
6PDHdkWDBneVDQ6NuuCgO4o7nnAV+c+ybR7KTjhQntG390V8bRkxGPx4DweX
5KMZA/FI76RFU4cjcHD4Hsb7FOK76ZMXn6QKcMjnxymuIz/s7l1va9OHxkc7
Bb5DenFK3OxGBgcepkxkHqsiPbHVbx+K0MSDgPloI2EUnZfSkGW4Nx7wC8XW
4ei5U+MsrBTgwejpXiNNpFexlz+uRPfj4ZniSHYz0hveaqYYwxU8mFa766sU
0mD7mJEbnWcSXHS2jM0hvQnbFd7BvXsScgsy973wogHfZXPNZb5JCNXkFmBD
errU5YfdzjQJ9vK6EqtIbxR+m2Q8HsfDvnsHPiug/qbjQmthaDUejnh+6JZE
el30kFL19iEeQn5d7uJAeiNeHsL7dBbhA+Varag/OtNXzHoNrdfl3PtSUpIG
QeJJu7t1J0E3IuWcuxyqZ92/1rrdJ8Ew6suzQuTf7y+f4jmTNQkMR5Hrbco0
2HpG0XZnB4r3ts2JvhNof/Kr/SJ/J8Fk45lpw0ka1DNyD+vJTsGt7cqxyWqo
/kyeSdeqnoFJdfm0Kyh+MdWOYI/JGeCx+Oi1DeG6++eTn/ARIDh49943p2jw
MOJEfKAWAWS4fW8fRO93Mnuo73UlgJb4j97o4zTwXQ1MtUgnwLlqbGC/Ig3W
Vu4M72omgHTHYYXtyA/aGTVEKy0S4F7acYtjaH/RRipvZC7igeTWJ57YQIWP
psN+s2Z48Or96p5dQQX8coT58lU8NJL/DkblUeH6Pl4/fUs0/udp3XPPqDD5
D+c3YoUH48XRT6sRVPj8uvVOuTUexsy1zqf5UOHm+/CeNoQPvKgQVnKiwnAS
c7o0wuvxRPXOq1SI38P6d+QcHk4ahhU9DqZA4LYHMQFnUT6VK2kp36MA+BiU
WhvhIWNHjc3CdQq84ZEqeqCPh98Db3m6LlBgAvdFfl4HDxxKiXo/tSmwsyny
Uj7gwdHv/hTHMQq014cVFKjhYVf46FvvgxSwPfRNfEUZD050Yy1JQdTPv/Gv
byTgYHSqzjIS6ZO1ie9B014c/DtQ+95okArV7+RkHn/GAfmSQ7wk0rv9g8wG
IXk4MPA7kCyC9NWi8ojsqTgcYCuvYOSRfgb0ZCR2eePgY12kvQ2qX1Pl36/r
2+Ag/hTHofffkN8q8Ql/r4eDxH+rvFII3/zetKz6Zxz2pxiVBSL8SnzWMXdi
HNa3bufmR/5uLFhTULR1HCqfMgd1oPmUjbiWy8rH4XJAM2sBWq9GYXrqXvo4
KLRg57JRPKmB0fk3H47Dt0sR4x9RvOJyKWM5d8eBlnR1iIj20/AsmVPp6jgw
ueAOKY6heJ5L+3D8JkKa0J681uuofnbeeGoyi/C91eejSlSg2eC8nVeIwIz9
tuvsFirwkIeXLrCQ4MNIF4/yIAVuCRWrrHGRAEXV966AAq+4zYqcd5CAm3Ur
bdifAgTWQ2IpfCRYy9Hd02NEgafun98G7SJBvJuoQukeCgS83huoxUsCq6sC
XoZhZFBOv5CN5yEBKfiglawpGdw23snqbCVBcIL5X+kDZFiAZTW7LSToOecq
a7dIgpX+5gvaa0Qo0PBNpf0gQYZllhphgQjzPzy/z6eSgMdhcbf1NBGMwrfO
hjiTwGkkyyJvkAj+AXcZVRokSHw3KZ2yRACLLa3UanReLnEfldtaCFDjE6PC
hO5DWbtnn/lLAnRrMw/cQv7jb0Kk2lU3AjRqvD+zUkyF487Sh/CnCeAc+qe8
MpcKb0SPDQkKEGCnvztL7ksqZKs439g+MwMfz7G0N6ZRYd65nhv3cQaiFRvN
JZBfeRe09+WM3BQk9PVrZiZQIVk2taZqbRJOvaiLUkqkwuKUQN7zrkm4ZrKm
vJFEhcOj8kXF2ZPArqqVyYLmw19f+MflNQmDW/PaTr6igprTzKtOvUmoHQvw
fVVIhcpbK9f4RSaBq7yXV7GKCheEct4tzeHBX/jrl0nEd+4ACLprSwRxupqK
Jh+qXyyZLQ2HifDcLlF2Helh9XF1o+8sRJD9c0O7B/VLpUZ5cUY4Aiw1dLvF
6CH9LFKfvN9JgFeiH2peo37rwe6JhXykN9oKT/PvBNJASsbovmIPAQzYxdLY
ntPgsmRUb9QMAYwNbWcyUD/39U6AlwI3EUpcjYfDm2hwY/DfzvHjRDjJbmSj
M0SDeyGi7tnOROD5dSW5AYf8L2tZLEcOEVxvm2acn6YBD8tEthOWCBoLSlbF
6Hn8s/lLQttJcDQmxlsQvY+vgZaikySoiaSp6aD5D4n9yztiTYIbp6Obzr//
73sJZDgsPUggLZF78C3qJwt+J+tUBZBAHlwLeFH8ng5DmHIvEnR2TqqcQ/vr
mh8w/WhLgqg1Dd2TaP85LdxRu7VIMNj65lM8Oh+mnz8U//GTwINj/V3Hf/Vk
VWZEA4fyr09zXQKdb6aELTSeI8GtHr23TQdRv62/u+WTPwnC1cVaIlF9SfKc
sDN4Q4I3ayRHFaTfOtNlBWY/UTxX3KS6VVA/kB8w/52JDKl+DRfMUD35bPzP
LPgIGbCNhC6MOrqvhqJ6R2syGNrtVtmJ/MDl9hp220dkuGsa91EfYbO3RsfV
+SlQ3tT2xV+VBv53v4sdPk0BbWPQeobqld/LfI+/SHdtSat6KWi93Z0sgo9f
UuCrXTRzsBINNBRZeb62UmB32Lru+SOof7g99yx8Gfngu+THXKj/+URgHK46
QAUdyuhiOerP0sMYRZomVIhLi9I6j/zTp9OsLH7nkO6MvvcJ/YLyV8zY78F+
KvBxbgGW98h/z4eNLS0i3X5we8vr1//9nkX5c2ITBb702jy8l4H4UUcw8X9B
AVLcp6NOqP68FHaaxbhQ4Ob8XcWEhP++V+Fj6JAmBaJqeZzm4qjAmlao9puX
AprDB21DEWb7uHsraxQZKqn5l0RTkb4uZx7YaUGGZ4T6C1OIj+NNnztPy5HB
vMhQB4/W00q1latYI0Hy5yOduxC/9yjbHgvqJgEh8LS+J+K/1D/v4s+5JNDM
vVXzD/ErM9BlV4wvCRJyImYKEb/q8C4pG8ZI/4wVLngifbG3IaUro3FSO0zD
3nCgfAt9GvX4ARWmi/TrWnbRoLFfYiPfAuls50m1XlSf45rG5s6oob5c71r+
U1T/qZT+SndpKkycChqNv0KDEU/WeUcJKjiYsBXxe6D+yj1gwUeOCkmDLUfN
45CfO56mvv008ukc+yYS36D+vcTY4Z0DihOStERraWB4dF+tCNIZo9rMG0/a
abDra8KO26ju6BOj7gwN0OC3jb+w9l8qYDXXQoxRf0l+n6zOgXxuN0fOv1L0
fGZSojYT5cWI/f6TgN4vHQp1/2yA1nlETi36TIMTjznxZOTTDpx3OciO1r9y
oAfL60iDVGNi0OdY1L87fNnndhv9bJfTcHengYXfzJv6mzToLbx6nXqZBiWV
WuePXkM6Q+4KZ0b7D7EcpVudQ3n12mvGHJ3PdOv7LSYojx3XAqTd0PkdStWF
W/toUKVoE+aBzrdDcaOYxQzlfVsFjznKv7G5/bPKzsjXBWLSa1F+RiwHpH4O
RT9/f2vajvI3r7/i6n+fKz1I1e7XR/ktw2FbklCK+vJj/4qd0D4Xgv8ufPuB
+gCVrmFnxI+LJmuuAqjPTj0pnmaC+CNb9+ei7yINQi/MNfGjuGSCPolIoqo1
aXz2FRvi55GiJ7ExVxagZKq/tRD5N/GN1Arc3QVopOOljiI+R9//VSsRsQD9
vG+SnyE/J8ZrOKmesQBy349k/kbrS8q1BIpXLMCeo498tqH4zHOdVxpaFuBs
qdvKfuR3dx+/ThMYXwBr5ZQ8if00WGHp+aLFSQO1hDTrO1+pSHsee9KQ7/0h
HmMRgPzdoXCRRMPtqI+XSLxijPh2dOhZhdEOtO7V2JrpFCr0sMsXL/CiOPn4
OC9HU8FXajBQC+mYx2NnXKY/FTQuzt849t/30dh7rrejfpqrsLCjFWFtW18J
AuqnFXkMQzNRvlR+pz/hiqGADn5FYBjhgj6/OJEAChCbzStqhP+rAxynDt2h
QKffszsaCCtepHhqW1Mg10832nE3ysPlLVy3z1GgIVo1Rgn1VYfu+/woRDwv
WFI5+Br1RefNHzhsU6DA1j+Rul/Q+kJ/rsel7aeAcADX9Ct0HrV7yNu4kF/i
/DL92rV1AVxqfi5ADRVuVMatzqDzvLbU+uJlCdKtATM1kZcLYPugK0Q2hwqY
vIIpvsgF+G5s2UtE9XZJfnvWmCsab1DphUf1OMV664H4qwtwHPhWhJH+fKHw
aMlrLYDDTr8XT+LR+0fO+wYv0SBD5BPxHTq/Gmb/LSK/Ud2aeZPsGEOFphK3
3/WNNMC2Phq1jEX+WkGuP/QdDWoT2JnjES9b0zFvnVDd5D20NPcX6VNDKAg8
CKPBYTNNjVcoviecmWnjKJ/bL7uf9C6lQpd3YXYcyvcSQ6kJz1oq7OO9zhIo
SAeSp7/zILrnVZc7D2BtAQpDG0wT0Dm/K3HM/DmzAHVPOVpN//s9LMyDuOzB
BWBT7r5M10b1KtzizqeOBZB6J+W0aEWDbSejVX6g8+vp/haY5Yv0nKWjnd65
AAor4VskkhAPdcnFG9gF+PuFW7SkBPXfvMOxR8gLcGjGWeBJAw1U8sbe2jDT
weuH05jFTxrAcPmM8B46RLHxX5hHPBK922xaepwOdX++t+dM0MB667FRI1M6
jAsPb1dA5+ZUt5cg5kKHSyaLqj/R+zsHLqx5htOhJPreNvVvSM/Sgrz6kujA
vlJpHfKWBm/xdfoiWXTYERDymicZxb/6/XpULh3uRU1NPfOjwYdwK+GeV3So
TT5lM2lNg+Xtq0clU+nA1mSxreM0qvdh6Z+koujgG1BP+O//bH14l3QX706H
tnwfMj/q/y9WJg58NadDaMmxrxKof1d+z63/8QwaH+oqXI3yKX13TOWGAR04
N3wxLaheNWnjhWqM6WD6LMY3KZgKQ7sU+nDn6FD0nr4hjvqjo4bJ2fdN6GBt
XqgWiupmYhxbfPgFOgQTOSQxJ6gQ3tG3xkBYpzi+i7wP+XM7/pIhhJ2ZHl/m
56SChxnzyl40v6bMwwdaH+ZAoi+XcdeIDu9tP7B4Zs0BxsOn9JAhHWwF/z6t
i5qDr/SJ35f16XCUi6hxxG0OWK74v6Tp0qHM+TGj13wOOO5fvvxPmw4+ESKJ
NdpzcE5OszFAE+VTbvsn6qE5WGG8YnVVo0PKjrr5cP45qCre9jfMjA75azUS
HijfNAZcjUat6CCYKh7bi3Tlfdevkov2dPh8dWfD4E4aDNYPfPjlTIckqYtP
QxFv9V1d6Pc96DDy04K5nZ8G2Q9nR6UD6HB+C9WoBvFc+cxj4mgYHaRuPsXp
o35ed31XTEoMHUQHBjx9ES7PnHnSzfgfbrjqdvTR+v/GX9694xSwL27O9+7I
E0ny9sXN9faNHrSLEVjcjOdMh5iLgNjiZrw1jbGdjw4ubu5He54iNiW3uLnf
IqzPtIAoAziGwjSLUT6wFOp6K3AwQITv31ciWv+GfWtr2eISjM5JXSg4QINv
Wv7Tj6aW4NOW6S5NZRpwDn94Fjm8BJT5Se9efRq4+QXJqPQtgdDPQG47VAd3
+L5ZJPYugXxG6olOT6TraQ3c1QNLwOkucHQhhgYVlRtmTmNL0GDjRyjIRPU3
pkXu8ex//x+iS36iDPFDQkDTa20Jgqi3i4owSIefu4To7GSA4IH8K6dbET+1
Fl7TpRhgOxQfINpNA2HRxlc3NRhQta1giozwcpb6Za9LDLj1WJjwGtX7nN2+
43+cGGDTmDUWjvjHX3wimeDPAJlU/gt/q1CdLdhLvBTNgCC9wbdf82ggfyq0
NOgpAzSe/5WrSaDBHoGNgbFUBihXRHKQAlAdCCm3PfacAbkK+0meDjRQ2F63
5pnEgLKQHqGQ82h9eb5z4zEM+MWrIXcY1c8gtq732GwGnI8RfrsP1XPDuEvp
x6oZsK/njnkO0rNHMarX5dsZ0CYhamGigPzQ/r4jOTgG5HwvZyEivy5I2d/q
ssKAu11s6V6HkO+YP/vNZdsyfMbn86uJ0wAjOH7uhdgyiDEtWdSj+2++oz/A
J7cMZWc2ymM3qLDuZlV6UHkZlJ/cuO4xQIWF2L/K5qrLEPTh2W+TItRfxSxv
eJ9Yhp7ssUt3glA/fudvdYziMpDlpif4TZEf7e3zn5BaBik2Z5noQ1R48XAN
y7V7Gbb1xHV3Ij7bLYZnNG5ZBnrG/pLXFOTDT/bmcs4zAMvl2+r4iwL0Ds/I
iWF0Hme53y/0U6BF9o6P93cG4PaF5pQOUSBul8yx2VIGuDNS472nKKCQk9Fu
l84Axm3sXOZfVH+3eDMNPWJA7NsAN3YRKuhKBS3IBKPzWV3evgeosDxsTf3r
zYAjlZWl9Fuovny0JAbfZUDJgkREeT16HmXWMH8P5Y+NS0tLORVCCMKGPB4M
2IG/N1WQR4VvH7M1fnoygDJVfNwc+Yk0ndokQPNdayIdH4+iAj93uaepDwPW
lTR9DZGfsAj8prbVlwE1r2dfZCA/0XU55v5thN3kzUxxyE+IKBdniwag+Lks
4OFjCrCfvnpQHOF+aD39I5AC+1z7p5tR/q2n2pzjdqXA8z/tokIIH2XuELK+
ToHpmbCjW/3Q+AW49O0CBc4Xp9S9RutfXTiaZ4D6IDXV0hczXgx4nnHm5eIx
CoxWUzp70H7Oq+t96pKkwEvV/0fRdYdT3YZhShQhKqushlJCyVZ3pSjJSEll
RNKyklHIiIgKUaIiRWU0ZCXroOwUEs6xz7GOdeyk5Hu/P+/r/H7PvJ/7fd7r
co6Y3806M1jZXJes2Uvu5/ZpUc8xA33fsd9c3WSf+PnC1URtBg9td6wKbmeB
tqyUNa44A5eGZ9z5NBa86ivP+svOYPCJ3K2XLaQeReZqnOtm0CVcQNFtZkEk
yKE1UGwGnKJ2IS8In9zjHhaxr5zBRqO/2jkEO/zTCG5PnoboSOSpgTYWFngl
xC2eT8Pun91cFvG3vry8iRE7DTZ7Y06NThZiXi2Rdo+cRqrx70fuJL5YnQZr
kTvTkKkwN7/Yw0JNavr0t4BpRMbEPlgxQPY9pbXb4r2nUdk+LXRpmIXKN78P
hbpNQ7txk9HVcRKf8lbPyZuusKxwvjwYmYODp0//c196DeUJWiGtvdmoux9Z
/53LC/fcttjpqWRDUZ0Wr+p7A/y3L0zHB2aBrexAmJqDL27rtV/YV5+J5Qkb
BU5c8CP865iIX5uJRpdrEzaNfvgSaxwseT4DA4k7J3zn/OD73fSpwocP4DDL
tbSU8YeekPCAfWQ8FOtHhtw4/VHobyf9OO8JVtxeGHyc4AedN9vlz/bEYOlg
/7GVg74YFulZ6i4QjQv2fj6GS32gGe/zyUc7Cks5dO5zxXnhs5esmYx3BFp4
7FRTU65BVJ5r/QbPOzho/fLtjIIbaNXBp77wB2FPRL/4pklbyt5zXzJOsxdg
xTOJ7IRAe8qfuGAHWk4B0tsKxIx9rlDEFYefLXcqRPHUp4i0ra4UEYsGjVuy
Rdgjd3+y6qA75avUgaafvUXIXW/edbnRgzJY0jIRlkjBinPTwq9rr1E+2TeL
S20vhuKPlGUDStcpty28bQsiitHy5IDzRKUn5b04xa+3pQyzJkr3/z7xpNDl
02rvqpUjXXed32DrdYrUI1sfzphytBwrmd4Wco3y6LsLj9ivcuRuN/YPT3Kn
/Glvkg0/XoGBZb0C8gquFMU6q+FtmRWoW+Or77PlCiX5bUVPEX8lVlBbLaMU
L1P8tG/t57lcCWeqfkSkiAduHe+ZiNvZiUrqEA/1iSdiumyjPizthFR4Qvho
9A2IML5pb2zrgG2m/isuDj9MKl2yXfm+Ay23VO73zPghZiEyKdq/A7llkrt8
Ev1xmH9kosqkAxy3A685LruJPzFXHCo3dsDovf7Atc038WCptfHbX+3YmeHr
mMj0h5J3SEXD5VaMaeV/yC7xB1+unvWnXa3Qmguw7z/qj2n7vX8L+FvxVOmf
umecH1Inkxpmu2mI2MrOk6nti4vW1vPBWTSseD/1cGeJNzoNltveCqahMszz
xnTWddj/nHnDc5qG5CnKp89S7ti83W6bsgINXWH5FmG+1pT2JW9tLup2Id2T
X7rk1kXK/JqV0o8tunCtaXGFhpYz5eSqtys2uXZhD+erPRWyVyn3njo2L7rT
hdsxO3ZUh7hRVhnFDUu+6ILf4edxrac8KNMSjQnOn4g9y32bBp5coxyIFZfp
ryP2bCtyt+tfp5iZSMW4DXQhmSdhyoPTlyJoNkSrVabjzPTrbdEbfSlXI9br
2h2hw+jjnefumT6UabWN2XO2dLCN6NDN029Q5Hy75W9401G31N2Mvtabcm90
sLIzio7cIv+B6d/XKdq6mamr0ujYfGXbudaDHpTYzUVCfKV0jFm1fd/C40rR
y/rsUtRCx6W9m6jtxVWodnfK1xL8iKqVAd6HOqpwW+W647pzOXiZ4r0x4FcV
hJzDt5zPzsa7NfE9Xsursbi//o/L4myir1sNN4lX43qlGt4bZkHjoVeQl2w1
Aq/vsA16nImhuw27rmyvxuWe+LdnezLw8v2HosXK1Zh5cGQiY1sGEMvt6XKw
GjqqnuHHtyZAcsnfV890q7FSwLD6jFccyv82/D2/rxpbB3i49zx/jB0L1pHf
1KrxSK9A9nfVI8TefSVE3VKNpNNfv2j8eoAzby/XhotU40VGWEX6lkiYqZ8L
nWevxtzrQgbn1zAMfClPVeivQvG/ro9vjodgS8OqshdNlXCxS+t38ylAzJ13
P/kKK9FWHs6roFQIc+m+F7TXlVCjyh3dPFgIYZ60PMFHZI5sUq2mXxThqUzg
8pLQSpR/UKvZbEHByaK3jOGbxF7K8JYty4sh9aeC/ti3EnVvGqI5LhVj0FCE
vdavEjonsoWHK4rxVMIzJu5DJWLMHQS8ZspgalAiZfKxEnOlU7xqx8oxmf/q
w+0Sgu2ml0R9KMelslyo1VWC8UQ/8xhfBbbPsYmeZFSiL+zxFp1LFcjj2zLY
OVeJS5HlfxTLKhDvt7OsSKgKHZc1jnZKVEJkMlu2V6UKTmElq9Z6VCL6w82R
I6TewRdfGC7a34kGri+Pdc5Ww+gRI99duBO19/Z4jXpWY8sPP2X9wQ5Qys/d
Uw2rxpMBR8+4gg6oN/DaCcVVY6cLM/pWWAc4t+xTvfm6GiPrnX5KnulAnqzL
T9e31dihFvsueHsHug+J5Q++q8ZURHNuy6IO2IyGkA2oGlwbT35hOrbCK+RQ
SHVCNQRLnyZiTyvqRs/x6cZW44ra3Gy2QCs83fI09e9V417rkaMXGDS8UBSS
7fauhrvukKhLNg2bG5eG81+ohsS0ddAomX9THekShkE1FrmdCZ09RcOEzvNX
9oSPR2iUL6nyNHT8M1301awKFz1OWB017MJD7aCFd1pVoF5w5NE814XCt1ND
dRuqMLFEueCqVxfq+w8zIUDqd8TvEOt+F171HrrHtagKaR1hZxOSu3BptIem
+KsStKTBx9cpXRjLnNYqHavEsK7FBYemLmQ9u3STMloJn7cTOx1HuqCVqCP4
dLwSnWlDpck76NCPpV/mnKrEhup5VvIhOkqDbl9uI/0UXXag8/EZOl7IrFoi
xlkF+uWBOWcPOqq9KRG5q6vAUXC7UDyMjuwnK7+/k63Cucm9eVFJdHRY2YyO
7a3C003xSWV5dKTRy+47W1Yhfa+b2as6Ou6M6YgLOFSjX2v/5X0r+hDPHlhi
FFKNPu6y9vzfvRjxD+JXel6Nybgv/L30Xhyjr2ekZFUjuoInuKamF0GjEjkp
n6vRmt075p3VC5WHc69kv1XjYB+nGFdcL+QXNH3WN1Yj29e6z+NWLzxbRDKi
flbDgzl0sN2hF1dq17h8r6rGQyG7x9ulehAeGbk5u7wad9Ja7sYu7YFa0pCq
IKUag/bnuQTHGTj888XGoYxqDD/2nk2mMvBBOG+97otqKIhe17IvZWB5h/ty
RcKPVj/fhxfTGOj4eNc842o1HhcYJL57wIDz09yt7cerwcu+vfWgDwNhu16v
bneoAp87H7dkQR+mvpVZlR2pwnEx891O9X24m+/qWre9Cpvq2Rlr+vtwKk6+
m0+sCifmKOtE5vuQIVGYE0b6sbtr52/Tlf24y9Hrd5r037D0vkaNbD8MpSLg
M1yJCNXzT87v6ccK5evW872VmNQLzJU40Q/HfTlrfydXYoZXqSQlZgA3ljz2
anlVCY/LkZsc3w/A0Yt1UjSF6MOwkfmO8gGs5ZG1yXtfCdna5J6BtgEMfPR5
/TGvEhnfho8ETg5Ai2dvMnd1JYojfJR/LWNC5UimcWp7JXA+32inFBMRXy4t
uTNdidh5mqu8ChMzS7ZNU39RUdJ4MU/G7CMU2mZDHi+hodnRW5H3dQ6CPqWL
qwjQIB61aGnAZDa2aA3WvRSjwUrfJGxiVzY2tZ7i7ZGmQc09WbsiKAtZFJmQ
YRka1gZde+LwLRNV1ZcOFcjSYGy0p+Do6kys0mFLMt5C5raWvrvndAbaBITc
v62jIewRz+7AXQn4xBYuKEvsed9LUP34MA65XpcGD4nToBlZEn4r4zEKf/kd
VBKmwS9bWV72xyNsqEuuGOCjYVfTJ4/jvx8gtTvKyImDhq3n9oXmyUTi9fV+
odr//7/Qmf2eS/PCwHc04uEyJhWd0S66GZohWPk5SPSALxU/RmuLBF4XgJ0u
uumxMxU15zbfvGZUiKD7wjV/z1Jh4Jq7y/dvId4uunPD9SQV+lJzQsWpRdAP
oHtyGVPhcby1+8cpChx0dhfn6VEx929AXpazGLka3ksjdahY2VetftGqGFHv
FlWH76eC/uCN+nRuMd7Xaf+wVaVilaxVbE5aGQp23N0dSvCzb2dCTi4pR2uN
465mdSr2/uA90WFZjj3tClf1dlNxel0V+4rcckyLGezqJvYyGfJ5n1ZU4PZS
wexHR6ig8p9kf32hAicPt3+4YEaFhvlURSKlAiEP1L4eOUdFkfDKe96rKyGQ
7rvVlELFT7uC49u9G1A5WZYX9I2K2cKCkB7DBoh/XXvvfisVUnITfcx1DcgJ
TmE69lGh8n2Gz3y6HjMHnluLsKhIu3Zv7nhFPf4tCDfenqZip28KcyKmHvOM
ZVcKflMheUnfxOBSPR6oxOWn/6GidLH2zwDNeuxfHzlnx0XDSLbOc73DtSgy
iqgWI/jPwxO7n498xZjB6iNhpJ8LtWuZYhFfwex35fi8QMXuznPsrB1fsX3+
eEX+LBWbez0+HGuqwZrDHBRvEk/Gctvam541aEv9bcvTQ0XB6vsZ7yVr0Hgw
wdexieQndGeTANEZHWu/hTnSnxeROgcutv1AuMV1Pjqp989C66CeZY2ov3yl
/K886V/A2cBJ1UaUtTIeG8tQUfxaYM7TrhGKT4re9kpSoW7WccrqYSOoe82+
FqyhIrRZlRH4pRGDZQoOVFEqekpmk79PNqJlm8c7LTHCJxlW2vr1P7E86btN
rQIV+1reZdRSmrE5qnSZxw4qTM8ojvCxmrFmddXNc4QPItkfbKUlWpAbZUd/
SPq/0+CEBlO/BW8vTvUtPkhFfJtbvp5XCxZ4Nv1JMaHi+p3ZK1tSWmCub67u
b03FHevEnQ5NLVChpDv5X6Eia91m1dlFVIy8G7pgT+rlNnShiHGsE06fRM39
56lgV1vb6SLbiUtHJa97LaNB9Wl4qPV8B55OxiSbrKTh6UWNlqq6DiSzLIU4
1tAQo7lOoTyxAweHZ3felqJBf6W6yhX3DtBZhsVt68k5/Pjhl96DHVh1KY6y
sIEG256w+t1rOjDozbhzZyMNr5rouygPW1G+oe2oN/n8LrdovfCFVkz+WX1T
k+jBhJ3rRKhGK1Q1UjhriD/9tRseK/G2Iv3kclH5VTSwub9KkOui4f3YVs2L
3DQsq2C8i8ikQcKTonzzHxVHA87Je5J9QOh52yq/MYI7MtQXm9Pg2LBh0X0X
KuLWJ8adMe3CzlNLN8iReQ9a6LX2t++CcH928PBxwl+65PG5m13QvnNoCY3M
94NKUdmi2C7ojS3Z+mcvFRIaumcp6V1we+OiflyTCtdDJbZjFV24r7hHaliF
Ct+1J1y0O7vwYuOkV+lOokdK7wtSZ7qg3/srbw3h03Ca0iRlLx0mpy1+7CA4
WfR3/LaTdDzMrHwcupmKxjr+2ihnOvZ9WvNOehsVPNtrXvQE08ncxxyfViJ6
My59VPAZ2RcO+Aax76LCIoomzZ9Dh6mKU+8ewg87zzS32q9k39eNrnpD8pEe
OdQEBh2L4ui/vr2mYvSipH2KaC8qPVWG7n2g4uWCyIMTPL0wY+fwYX6igvfi
tYXavz1gTt0obCsmfFbKPbR6tAeCKfJ3z5YTvnhobFHp7EFawfkkz2qiNymS
Tup1Pbi5csdjyVoqfrOtmN1U0gPdgYI2I6IveS5z6dwZPRhx1NfsaaSioVVs
eG8bA8OJtNXPCf7xY7hCupaB9eXb0pkN5PmaA/lcRQyYBjjyUb5TIdsp+/Hv
OwY4nkeuWF9DxZqAnMRlCQz4fd9zRaSMihM3206p3mfgArvSlxeFVJy1XJcY
dpMBWy0R1/IsKvYruGwRcWVAd/P1zxmkHhOHbcSa7/bCUdWnb7U+FTecy7sZ
T3rh4RdwclSbitjZ1+ab0npRvShkbA+p74WlXv4xeb3g7El9JqBGBZ9l6lb5
6l4kK1RfO0v6e3cdu3QntRerQvJT1Mg8892WFn7B7EUS469n5HYqPv7m+ORA
9qsVwrSxdaR/vZyr04pa+hCtWveFnbyvkhwZHzJAsMtd4XOEP686BkL0ZvsQ
UyXme1iDCsF4HdFZrn64qJu9yQAV/YrGHCHC/YjIM7J/RPSsXyVx5ZRMP/6u
35A6bUDmP3avjKJKP3Y2OF/5//+1NWosVt15oB9jnj57ck5TMeb6a4lNbj92
WCqMxRwl+ucK4/zyfpR6jQd3Er7zD6m6HvzZT+71YY/DyHkTrne4nq2nHwwL
q94U4l9r/vCH1ol+nO8WNdipRfTVIe5gHfsAxNet7lYg8X7derHg54oBFO1b
XRdH9HVqRfsmhuQARApvaVaReclZzV+ZPjUAljNnewp5v+nE872Fi5mwqOB6
85fonfrZE10UQSbmB80PFu8jemm9vOS9NBPNL709JnSJfull8fz/uzJSCj82
RpB8g+1iZpXARLjngwsPTan4IBX6M+cIE1umef3mrch8rl3Gw2HOBJXv4tCx
NMKHc8LK/KQeGQtnK8cJPz7tyXRYROqVkmN5XJTwJy63fqKI1NN058mi8s9U
fEv+V3uE1FvMRJV/ppKcPybf1+eSflzjElFJ+kpFatg1eS7Sr+XvZJZ8J3zf
LGumtp/009ukV8mN8Nf3o2v0NdLvFVJLi3rIfBin2iZtInwIXRAYXEIw27L+
dHPCl9Avxx+9IPMU0RBR9oTw6bZDhUIBmbcNK5VURqt68W4+ZNHxEioM/TYf
tiB8jPC+v885j2DPJs2J1F7yXBGHYAY5n4XVZHMIn4dtr+xCMhU27u4iGYTv
su9ZpqHk/Oe62vuiPGAIlxbSwotJPkszX38tcx1ClFFJwc06Kt4lcX+MODeE
8QPKOl/J+Wkpu+qsoukQ3Cp5r8aS/aD+ne3QW50hrN1/63J/B5k37R8+gqpD
sA77pJHVRfQ0Y/7U+U1DCHdv/P6P4Jju7+XZwkO48+Rg8hUaFXo6teE96oM4
6yZN1h3CR77FTcpbBnFm9wkzP+LvbfNrRIkNQsmAUalD9MBD7hEfJ88gxH9s
SAkn9U6OYb/26A8T46nnTluS+edj/x1vNMyEznWq9McC0u9crnCNdiZ8t4is
fUbqEXXzp4rlNya0Xjmf+EXOQ5eXbdznZ4ew6q5g858LVAgbvuWU5BpGcWeC
oQM5P0O6BEaXCQ3jWpa/hhGZF1mNsSGJjcOQWm6hkkz4ZdexT/D4zmGYKcxy
XCPn721XG6tE7WE01UaFlJD9UG7o1Gc2k2Gc66ituEXwdsFDG21thrE6Ebrv
yTw+HClp6dYcQdab6zajZL/UOKWydt/hEVT/+Bz32pzUw/axTPSpEdA+6ptT
z1BxkP9BT+PFEfh1Hl/nb0fFr4RzhtPXRjAn/Sb6iQMVDrUHXEaDR2CukBi4
wZ2cD6pvnT5Gk8+5ozqE/Iie7ogO0n05guB772z5CPb1eKLrLjyKTEnNblHy
vMc9joUlMqPoDVMuCSP2tr82Tf22cxTGCZErXYi/M+kFtyu0R6GRY8hXSeJ5
3Nxc0H90FLP3pngekHihvGAsYzMKidHokBaSj7PWvb2eV0aReMV64yOSr0WD
6jWa3yhGJ5uOHiH1+LnHlnbiFAu0+pU1QQQbGD3dlX+RBdcdBfMapJ5aaePp
ItdZqDh2d+ACqffA0mtrzt9mIfra0xQ+0g93lqxD3CMWBHf4+MmSfm0y00nK
eMVCqE/792zSzyXdLxvislngSEySfE/6XXiWY73pF4KTk9Z4E37fvOIpFJ80
ArnSRU89CP/aK1LE+h6S+jq6rufspuKyygGlP0EjqIyNUlvfT+4HbXbKfR4j
kNqXq1UzREWY2ir+9AsjGJAQd/wzSoX9i6kS65MjuOTnz/xA9o3KrX8tOPRG
0Oqkmzby//cROPj+JmiMYGvaz61fyH3ESvbhwfXWw7j7/MmKWwOkPwVSSz4b
D8Pd0/hnTS8VHBkFc477hmEXXSn0mMTzhuuzlqIS4acjxWiCzN+823g9/4Zh
6MhdbGsm52fwIYH3QquH0SPhMmpA5mOuI+XDEU7yufbNB+alhF89xY8Lfw3B
qHSjv6oRAy3Op/jO6L6FZ6iKfecxBi4qxtf2WbxBksw2iwYzBtqualSLX0nD
azPPeV5zBupO2qrc90+F2HWRsxGWDFgG7+n/Fp4Cy9i3AmZnGJhTYLLZPU1G
RI79n7PWDCRWv33e9/o12K5l+2cSbPii6G53xitUNldV0cnzmlMvP8Ydj8QF
z6BCN4I37RbSTb0cgaQPulb6Vgx00rcZdC65BzYHCavzFgz8OXz+soR6CI7E
KrVVnGIgir21xfjqLcyJSdg6nSB7wHrXy9k5/jC1+zVuZcKAy/wA3wK3N1bs
VRh5YsCA07DyC8pnV1y8RbuSt5kBzq9Zx78rZyDSK8pBZAMD2y6Wmq9JzcDz
1stZW6QY2Fh3VppXKhNX/rTGTq5lIDjd4Zvlo0zcWaq1xE2Mgde8J4uq+LPw
yyvROV2EgbMnhV9yhmShcteygVfCDBzffCivdlE2/v1NWnqSYIZfEaPJOxux
v/TGNMnz2ikPb2/WKIDqKrWBFIIff/4XuDWrADlHT7n/EGXgx2SmUNe2Qkxd
CBz8uIaBhote8v9eFaLlSNdGUwkGqq4qCe2WLMIAb+yTN9IkP7aDT8yiiyBf
XGb8aSPZm3bR1LiWU2C/4iH9+hYGmk777+Xwo2D8lHmwN8ERc90X5SNKoPTp
3u5i8vwZD//0W19LkJSVyEUh9iyX/tLKWlaKzX8S9noRf/3PSn4+1C0Fu7hl
6wyJZ+1Ji+YlQaV4GW57VInUI7V/6lDnl1IIVCzP2E7iH53c/+vv4s/wHOqM
nCD55Tsk+alrf0ZchrRCE3n+5guawOaScsgZ+eacJPb4F05xWrJVYKdKcPQz
Uu/TBydnz6MCfFG6fK+Jf3p7crSUTwX2blcYdCTx/alILrApqMDpyM+B06R/
yrf3hy2bq8ALr8cVarIMLLYpCx1TqUTbmWg5FXkGHiosS5x0qcREi4+o6VFS
X07lkiwfCqroZeKzpgy8ubgp7wI3BXk3R5p6Cb+yFgVNuz8owqDNjfG1hO9H
13kf3ChehLrj4kFPCF93lEWY5SUVwpaeLXbGhgH36w1XbmwtRJSUUeLFswwE
piaY53wogIV11s2PBM8Yb1V6q1qAUju+J43k+WjZY2GnPbOxQU860Y5gsnDd
N2PLxkuehVW7yLxwdiqzJQVl4fx0Y4LZ///X+aLjwC3eLASsuH4uj8zjCqsc
Np2HmbhqVMw6e5KBSw3PvbZKZEI+Pkr9xHEGAh7yd3gnZ4B15EtyNJn3xR4X
fvruzIBU+oIx22EGHixsrnTW74SaubxclzEDjtxH+c2kOqE5Oh3/jszTh5fi
comTHfDZvkvjAvGn+psabV/eAcukxu3cJH9P32ervsd0IPSmhFUkid/O0eN1
76UOeFQc27dA8lXnsfSp0eoA9wX7xUa2DBhbb+l9wteBtVtaKofI+w5bDU0L
/Vsx+o9NTYpgr7chL6NMWuGxsrRWjdS7/qjmjjsbW2F+KCNV5TQD3eVFuyi/
aBD1rI1eQ+JrRFyvXjUNet52bIMk/i2hfisPxdGg+yZnLonk11ut7dDoTMOJ
Bh4to/0MnDsvd4DrAA0jDS7NESsYWB229P274104YcDxKX8ZA7JyaZST5P4X
WyGVsLCYzGvZuR1HA7qQPbh4wmqBDlmxQIfQx11Q9Qq43PmHDsetYR+mPnQh
54yzpN9vcm/jt5cOqOqCl4W5m/YsHWv1nlRv6u4ifS7bvIVgl0bnt42zXVjl
NpNR94+OQ0MDrZd16ajMb2qgEft3uFonBa3okNwVV8K1iPBpuhav3OloEQlV
Nl3CgMczy2rhMDrceVzUv5B4xU7IZJx8SUevbP82Q34GthZMbLcsoKPncnn1
5GoGvo0NJwv/oINNTFb6nTgD33XSXlxj0mETd6Y+mujjL4NewQsSfVCTPq/2
j/A92zknxHFpH8Juxfw6RviXHuRoLTXRC2unzQaP7Mi8nh79Ftrai9L7ExKl
l4ieHLLanv+lF32vjk40ODDA63KQm/K2F92XH/+qcCL3uujw6cToXsSUbOBM
cGbA3OLScw/fXuStlq98Q+5hoQ8K9+Wq9mBXEt+Z8wRnDz06f1uqB54xFqkc
Vxk4dnGKYrOsB3aGktdvkfdPXTzMdnyCgQ3zFTpD9gzIlYx8s29l4F3saWW1
Cwzsa2Tlf/xC8KMtvE6Ejxt/SKtrk/si90Y5zSjCH64+0ci1MYQ3Fj1hTasY
eDs+Xk2t7MPM1YS2i7wMmNwSfH6yow+VoT2/ubgYOHzTy0t+qg+ex1e/y2In
+YdIOBzm7sdWP2upq/N0vNHabZkoRe5bXxg/D8zRwU6RXyWr2o9Pvzaky5N+
J/dsUf9+pB8mg/+G5H/RcddB3fa2bT8iHbgZVWN0RE+2Dv1+OYB1psPCdIIX
bSxOzi0YQDg5ngUn6HDiG/d1+jGAkcW5905O0aFeGvlvxeAAnozIl+QQe0FV
9kXhbEx0b1/4sekvHU/WUh06hJiQOTW0IZXE+2v4VTNLjon68hFnjaVk/qOH
B3P2MfHloxyfoBzRQ4MprWC/IXTn+zspbmeg9aXnqpkrQ2B9er/osTID8kaD
mlvODiH9O3OLvjrZDxi/3eSODSFl39+P+7VIHSNZL5YcGEKoQky//26i33VW
+UXKQ3iz2dJu0R4GxoLbq8/IDKF042ujMoJtpZ4NTgkN4aBoWP0hHcLvmiTR
Cq1BGO2dyDQgWJJP+rLptkGM7b535+EBBg4pvhYcFB9E1cxCmQSZ39Ct09vv
8A2iMl5h79BeBsKefKfvWyD5mZfq/SX+bx6L3y42xsTLvJPPTDQJ/+grRMT+
/53Ks3cuTqoQ/ZD65nG4gYkBdinfbjJfG9N/uX+dHMKv1ka7Q2QeVZ8HCCcs
GoaG7dJNF0k/9wVldL4WGEZjohqPNqm3tbgxkyY1jPeVb8daSD+ufgnfqag4
DM8wqwNyk3ToBZq+jccw+sLXcu0m/ZOTeKkobjiM82xTpXwENwz/uf/Cchg/
c+pPfyLv896NeMxJ9kFaO2XboWk6dDmsUkIOjWA2MK740Qwd3XGuKuxkn/xu
c9QgifBJZthZ1Jbsm122egkORH8y3iqopJB9tDxy24oJEn9V3LabFWRfXSZB
u61A9OvVT/qyHLLP+nAnBK8n/deP5J+5TPbdfaISznXLGXiy/29ilcgoBAWu
xy0neiLA4DP5tGkU/ZdrC9k5GaBUNQ43qIzi8n7t+A/E3pPue368OqPos3OO
Eyf10yiZXHbm+Cj4i26n6hC+vTKPcC+xHYVtRt3+bQTbrBFP2+w6irHvxl71
BAfL9N++GzAKrYNGa8SJ/urbG4p9N2fB4ETdXR8BBpwXxwfK2LNwZ4T7wtOV
DDBfCttd8GJhw/Ft9m5CZN/qWJdzJ5QFpt8DJhfZH3wC4BMcy8Knp19Ljcl+
ILXreOfRZBb+vah3MFpP9j+lKaHeHBYuqUdMs5F9QKI0MFC5jIUVI8uXpSsy
0FXZ9XUkcQTsK82kDxK+f2s+JidG6lUUusF6M+H754mNtoKknhsOT3kbEL4n
nQ4+1ek+gkMyvo9yCd8isw7yh54n9T1Tu+8c4Xf+lH/0GrMRCFqt8Dch/KSe
UloZd3AE90fVym4SrHS37YOw+gjWq52WayHvzw7rpmRaDENCwOHUQYKLXK8/
VjQYBtul8IrfxN+G1rO8n3YPQ/YuTX1Eg+zDd89vMVUYhkgovX+9GtGrmmRe
AcLHHeYLHs92MqDVmloysWIYrLqjC9YkP6vEaXUOwmfPnrtsjlsZ+NRXecSA
8D38jNGzzi9MzBTcFtz2LwcneJtofTVMbF5gPNPVy8H4eIdWcz0TE0EHLzCi
spF7SGPv2yYmvvkbXLRvzUKLcR+3HY2J3M/1NEPpLOw9VHpuoY2JHm3d0T/n
MiFxta3Co4OJVfU+9zpTMrDa9PTRbwQ3xP8SuTTyAWUch92iWpkwfZwbe3N1
PAbNx6cqiL1Mkwe1nBueQNNFi05rYeLILN+mxJ0xyChZa137k4l9zyxurzr0
EDvXH9rznMRnUNEatvpsJBIb5GbNvjJxcGJaNH9pOE7+c075VcaE22+95bAI
QXbuujX+RcSfrvkpwYoAyNduUb95m+iCi8WX3a4FkLiWEmDqz8SWEuOg4g2F
qFa/6aXlxUTA8pzVdc2FuP4urFDVnYnYuiqHxfeK0PfTc99hFyZWW3ocYGlT
wJexyOK6ExNxl6kGm/5SELsxMvezAxPmIW81n50qxmm6rtlWgl2lZB6c/ViM
a0vbVybZMyH+IOO8cHMZxtaPG8uSz/sTHR+1K5XjxhvfzhpHJmppNumOEeXg
sPr4JfQKEzeKJxhRw+U4Zm1vbevGRNTvs4lCBytwNZXP0dST1CN3a3HxiwrU
Bi2et/BjYoXG4rvmfyvAumzt7RHMhJFJ+mzWsUqE0tN1E6qZYM+7Y+kW1wD9
ByZ8CaSetxsVpH84N2CHZePqO81MOLib1d3XbsDsxLZ2C9Jf9Z5rql9XNyDf
7lDI6i4mJF6ZOsf110Nn+fu+93QmFL7NN0h9qofrysZLW3uYOGEV0XsltB6C
6zmUgwkeuDR3+M3pegio/nZ4SXRZnblOcv5uLWY8WnW7iT0H2RMzXgq1CC+N
fDlP+FLZn7pTq+ErqluvvfxD+PJIfsMKN7evWDnoyt9O4lODlYeF6Fd0Bo2Y
JBFd1zRfOr61qAZOy0+EHiN8eC0e5SVkW4PaOUunccL3l/b7HI7y1GDKiRpI
v0fqo2bh4TfzA4WjwjejgpjI9+B90SzdiKzOgDPGpH6y29O6fh5pxPemrEZJ
woeEcZ5N1p6N+DDYPs7uwUTQQOBqq9eNeBL/Z9PcVSYqnG8vzW5sxBInm33c
hB/jNZc3H1z0Eymt7+yUSP8Mcw9fn1f4iauzuxvWkH5/+c6p6pHTjO9vXvta
Enw3oiRZqacZ7PIZYXmk/4ETf2XaBFqQoqG3XYG8f7ZOPuU4WtD7TXMyz5WJ
NzHx+27Zt2BnIH/+6etMcJ023WEU24Lv1Qdr+HyZeDf8e+JJWQs5kZZ8qbvF
BP9nTz2D8RaIG45bKWQzceytYGjYsj60nXjZ051P4l8ez6qZ7EUGc+uToBIy
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
3t5oPIJXKwRKOIj/e9vtTv0+MwL2VBXjI0TP0p8p5GU7j8DZU7vbdJKFd+9f
mhr7jWCPRFOS5C8WKjT4JkrDR+CmY2b58g8LnFX3zrM/G8GdLbLpLmxkfu/c
T1/8bgQ/D/Q82Uuwyc6HG10kR8E/Y/JtPXm+MvHl5rPbRsmeqxx1hdRn4Xnc
1kjNUWh17zZwmmDB2eFF5cyhUfwOELSSZLHgkLHW87bZKN7uL8gPIPGvUf/y
bPf5UUixgllxpF7c1vkBK9xHEQJhMScmOU9tP1pNB45C3a0lq4KcB9QFjYkf
J1hYVXMtxIjgXlb2VKkdC1ULuQb3Cf5qtkkn042F+WfoCPn/d32u7uF7GsjC
sYTuJHXC5/dfN193jWJB2O/3i2fk/Dh7KLdA6QULh1/9s88j5wXs08Tr01kI
fmYud5v4d6/5NqVNYSFbudxWhfCXPy1kZMnbEewTX/T7OtkndaTmeiriRqB5
4t0qK6In0j8LkkzDRsj97H5MD9E7mo6Hcb7PCFS2L49fRvTnpU7u5gXHEYh/
e+ZRS7Cdla/XVqsRXP5r+kGB6NWH3NzkQ4Yj8LVfJqBI8OH8dOGzGIHT+Z+R
/sRe7SXu4A+Ww9jprCciRfBTp7bn3w2G8VFRfd6c+Gd86fz+Z/cwuG1lstWI
/habCjlDYRgNfyRHMv//XqxOwo9EyWEMppje+U7mKSVfVW3HimF8f/jw3V0y
L5e25ZZOsg3DLyzm7TDR+7JLWdfHx4fQeaTiu6HGJGJU1bgpUe9gwN3yqVlr
EgJBDbnWyW9R4nHYggOT+L3U+MC5T2+wxjDMuXHPJBI/31Q4UZGGjeatXTr7
JuHtZ1VZ3pCKA9s6Gk5pT6JyWq59f1sKRlg7E/n3E/tFpdZne5IxIlffZ0vw
70FJseyh11DfZBPlpjOJr1yG7azTD/BwY6XwZYL/NooqSl2KhNM3OQYbwQyL
Z+s5rkdgF5vLTtUDkxC6bCkSuPIewk3YA/iIvcGqSb1/GiGwOn/LJ5jEk+XR
W1V46RbKO/z5Ekm8gZtuPOZ46Y/CI9XGNrsnkVthuly8xQtHwgWWPdkwiaM3
+B6t7MmAnENN1YL0JGSsy7xTTmZi5+3vnymSk7CU46KJ12eCcmarfpv4JMwE
P0/J6mVht7ekv+naSfCP35AO+pIFWabbIYU1k1h0q2SEiWw8i/1tcl5sEjsc
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
G6D7gaR3htV/v/va3bzrdXLav35g/vsY/cK84H5innC/MW+1jHlgHvG8MK94
nphnPG/MO+YBx5gXvB7zhPP9ZfCG62EesR7MK9ZLZfCM/WDeMf/WPfPDubNT
kGmc/iHtAhXI75KSzcamoEH6x2A/Oh/sC+VUB/qnIOLhQmCHD7qfVW/bYvpj
CtqWB3dEovz14slTH1unYP8Llz/T7uj5yraGbVXdFJzR1XIW/u/+vT/wt2n5
FLy5/EvtN9LbFDtt9vDTFJQ+8RS+i2K7cXFjh2P/YmPlxNzXB/+t/3Ju7vnP
vf/yOVr6fTqs/q/ez6yesIwd//Q0fhryl5b/p9eyLEDwtcwUNDL8tKYIlR8T
++d38JXcN5ut0zCTZdfDgvaHe1vUhiLlaWjoU8wpR7z01c9H7tCYhrV2ApKN
iCf2L9O3PulMA4npVvE6tB8D3K/WWxyeBjOLp/c/IL6bwtk+sB+fBq3iOoUE
xK+97rOyIrNpmAoVPPMWPb98/26z97eZhh9nUsN40fONkrrc9W39v3jWJGbl
2W//1keIbBaR6v6Xr2dbOlPN4L96ht9B02Xinx6/2l0H5uj/9I6UP08/uzgN
9Qw/3tMcv8uYZwi/z09EW8nsQfGCzbIXaD/wn1Vkd9adgd/pq/iN0Hpn/997
qvRnQGS+tlgP5ZsKG30KxjMw/MHjbQTab5y8w3UV5jOQ7Dz/mwvpWd54VM/S
dgay3T+Lk9F+3XDnftyCywysyzLhGEH62WfWbEz1ngG3HxvEAPnzipxacbNr
BqqkI5I+o88d3Y7bKQ3OQJfztlRTFJv6+rE3js9Ah87zbyoon978Mnd7+gzI
ma+dPIX2f+cVAZGxPzNw4MGFpc/oPDSUnLp5hnkW3n4cvemJ3j8WH973+rRy
FrqMCu45o/tQUnW4GZPALHjePRGW+fRfPzAPuF+Yf9xPzBPuN+YNzwPziOeF
ecXzxDzjeWPeMQ84xrwQ+4XBE86HecP1MI9YD+YV68U8Y/4x79ivguEbzeb7
NCgdplof80b1ee+XV8fTwF8sT1YB1VdNmcu+e5UGVzsol6XQ+8cFhUuPDwbT
YMltvcCGM+h8fS118LsnDeQcOMt1LNDzKbrHxcyeBnWNh6hBpuh8dZ75RjKl
gV7WmXUNJuj8Nk5zUj5KA9vTt9z3ojiP4mhlmT5LxBJ1ayfLU2eJ9doZWyxU
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
8/0fAmGhSw==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.03130732698622698], 
         ArrowBox[BezierCurveBox[{1, 137, 140, 142, 148, 150, 153, 1},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{1, 160, 163, 165, 171, 173, 176, 1},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          1, {0.09997640550416038, 0.03359881008240466}, 2}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          1, {-0.014674979360953255`, 0.04943362755316531}, 49}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          2, {0.10047136266968511`, -0.03129391203010234}, 1}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{2, 231, 234, 236, 242, 244, 247, 2},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          2, {0.1819298687754335, 0.0509476342279891}, 51}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          2, {0.23221391173739564`, 0.012867651087223885`}, 87}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{3, 286, 289, 291, 297, 299, 302, 3},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          3, {0.3851623485349849, 0.051985734669290795`}, 54}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          3, {0.3666058813253934, -0.009462380502740952}, 88}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          3, {0.4343646805634524, 0.012765801888346267`}, 89}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{4, 357, 360, 362, 368, 370, 373, 4},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          4, {0.7006193329754683, 0.031380343328233085`}, 5}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          4, {0.5901366962650327, 0.031177445903753164`}, 61}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          4, {0.5670120992006803, -0.010985549264272854`}, 90}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          5, {0.7009021346335077, -0.03431934110349935}, 4}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{5, 444, 447, 449, 455, 457, 460, 5},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          5, {0.9002348777059842, 0.032178368454482624`}, 6}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          5, {0.7844258240500953, 0.049935006135791514`}, 67}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          6, {0.9005105338733482, -0.033419314393540206`}, 5}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{6, 515, 518, 520, 526, 528, 531, 6},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          6, {1.100264248159636, 0.03266640273640495}, 7}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          6, {0.983521798262752, 0.04900418365697908}, 70}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          7, {1.1002203285602077`, -0.033202728403695}, 6}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{7, 586, 589, 591, 597, 599, 602, 7},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          7, {1.1887199513833324`, 0.03300556830509813}, 76}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          7, {1.233716755001826, 0.010627782482698514`}, 91}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{8, 641, 644, 646, 652, 654, 657, 8},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{8, 664, 667, 669, 675, 677, 680, 8},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          8, {1.3905782409450294`, 0.034490986418143084`}, 80}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          8, {1.3679299116895491`, -0.01063115110568243}, 92}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{9, 719, 722, 724, 730, 732, 735, 9},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          9, {-0.031341771817859854`, 0.30038167139423194`}, 17}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          9, {0.017839142192448493`, 0.15027572015162483`}, 49}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          9, {0.03372564804689606, 0.21266047045536512`}, 93}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          10, {0.16860865486133536`, 0.30004096811646414`}, 18}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          10, {0.2159029118801859, 0.15046969709597577`}, 51}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          10, {0.16742207583148305`, 0.19060928172948052`}, 94}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          10, {0.23445560055833145`, 0.2126490267924029}, 95}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          11, {0.5011113876538813, 0.23149837369213344`}, 12}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          11, {0.41706552769075883`, 0.15044467075123127`}, 54}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          11, {0.38266745183237433`, 0.24863989269348122`}, 55}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          11, {0.3667777061973505, 0.1892558684144367}, 96}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          12, {0.501030035808047, 0.16512856783683094`}, 11}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          12, {0.7013146038344128, 0.2322302860553993}, 13}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          12, {0.5669525962992389, 0.29848052351347204`}, 20}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          12, {0.6128998894936514, 0.16399419383227154`}, 62}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          13, {0.7021271227364937, 0.16661984853459733`}, 12}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          13, {0.8180057294320772, 0.15064938228760674`}, 67}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          13, {0.7853183786985115, 0.2512488971617727}, 68}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          13, {0.8514687035337514, 0.21710441811793504`}, 97}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          14, {1.099972899709507, 0.23175954519927155`}, 15}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          14, {0.9669314235695323, 0.2997543941185287}, 22}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          14, {1.0163611967284902`, 0.14847019837823697`}, 70}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          14, {0.9505944739628777, 0.18347629656353717`}, 97}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          15, {1.1000814851494827`, 0.16618250283963124`}, 14}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          15, {1.1667738356291348`, 0.2996502930636631}, 23}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          15, {1.2091852816390674`, 0.16616077930116352`}, 77}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          15, {1.2330575951982443`, 0.21009882342617286`}, 98}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{16, 1174, 1177, 1179, 1185, 1187, 1190, 16},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          16, {1.410477189503322, 0.1678275161245206}, 81}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          16, {1.3832740641284589`, 0.24911228650803985`}, 82}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          16, {1.3658400187233513`, 0.18853821238716398`}, 99}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          17, {0.03342806476285603, 0.299953578351313}, 9}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{17, 1261, 1264, 1266, 1272, 1274, 1277, 17},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          17, {-0.014512309050466477`, 0.44841925266876437`}, 50}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          17, {0.03502731156476672, 0.40960021224806936`}, 100}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          18, {0.2333352279297106, 0.30013984688269996`}, 10}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          18, {0.18468605455689824`, 0.44898263394119164`}, 52}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          18, {0.16790095000476987`, 0.38774673571688933`}, 101}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          18, {0.23415494889938113`, 0.4094572211603935}, 102}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          19, {0.5002280122259116, 0.43305350962098976`}, 20}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          19, {0.4168045031423204, 0.3499042963004379}, 55}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          19, {0.38543361044025615`, 0.45069434507453576`}, 56}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          19, {0.36840114514363287`, 0.38887492982995614`}, 103}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          20, {0.6333177075750722, 0.2996894071017303}, 12}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          20, {0.49974117149439445`, 0.36838706149010686`}, 19}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          20, {0.5824332049508633, 0.4499603169524612}, 63}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          20, {0.6316306141704912, 0.410942855903749}, 104}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          21, {0.7667990638059954, 0.5001127502845515}, 29}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          21, {0.8179449457172396, 0.3510757258903464}, 68}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          21, {0.7663999296839726, 0.38866284254163846`}, 105}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          21, {0.8344327237201807, 0.4111552570666398}, 106}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          22, {1.0333703528937261`, 0.2998722881118094}, 14}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          22, {0.9895567808088568, 0.43398404725742323`}, 71}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          22, {0.9673054903635565, 0.389729370280959}, 107}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          22, {1.049971653469182, 0.4172648158543827}, 108}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          23, {1.2328674927608863`, 0.29958688317888216`}, 15}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          23, {1.167131164333982, 0.5004934420528901}, 31}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          23, {1.149826016620908, 0.38402580682139886`}, 108}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          23, {1.2332503998584432`, 0.4110637857807889}, 109}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{24, 1700, 1703, 1705, 1711, 1713, 1716, 24},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          24, {1.4173529860045413`, 0.34793847060282956`}, 82}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          24, {1.3910550337242849`, 0.4308848959097597}, 83}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          24, {1.3669685143636565`, 0.3878785825950168}, 110}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{25, 1771, 1774, 1776, 1782, 1784, 1787, 25},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          25, {-0.032414636832891135`, 0.6995402029174064}, 33}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          25, {0.01697401004881096, 0.5495417103625436}, 50}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          25, {0.03183105642656598, 0.6107939384689547}, 111}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          26, {0.2180983743509652, 0.5487824178395518}, 52}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          26, {0.18559062846018323`, 0.6495060040034816}, 53}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          26, {0.16663069556135773`, 0.5876177881365626}, 112}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          26, {0.2518864728283802, 0.6148883590378967}, 113}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          27, {0.4170856067986744, 0.550842526166462}, 56}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          27, {0.38812286363110043`, 0.6334500283571183}, 57}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          27, {0.3510390123036522, 0.5836917484275436}, 113}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          27, {0.44935295331605013`, 0.6174382089967017}, 114}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          28, {0.6171379523538996, 0.5503208191420339}, 63}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          28, {0.5842964559526402, 0.6515161036694952}, 64}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          28, {0.5504749729719156, 0.5845771598912101}, 114}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          28, {0.6346952092012448, 0.6126717488947501}, 115}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          29, {0.8328036753223944, 0.5009665403404244}, 21}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          29, {0.7830446843199955, 0.650214824445566}, 69}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          29, {0.7664640622472312, 0.5908052330741888}, 116}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          29, {0.8485033487415428, 0.6173308247631485}, 117}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          30, {1.1005203313282803`, 0.6327366120455208}, 31}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          30, {1.011218793159676, 0.566700213811578}, 72}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          30, {0.9841360978134259, 0.64892827344925}, 73}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          30, {0.9495820272620703, 0.5831723827057707}, 117}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          31, {1.2331204007694563`, 0.5003561563799624}, 23}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          31, {1.1010182995551672`, 0.5672463196104365}, 30}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          31, {1.1842183489321665`, 0.6498899329122176}, 78}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          31, {1.2336678319116587`, 0.6117112456140268}, 118}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{32, 2226, 2229, 2231, 2237, 2239, 2242, 32},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          32, {1.367320159338129, 0.6999744309350657}, 40}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          32, {1.4130139608799672`, 0.5644711308869582}, 84}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          32, {1.3665387336743597`, 0.5886792087724175}, 119}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          33, {0.03280322763731655, 0.6984242604447675}, 25}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{33, 2313, 2316, 2318, 2324, 2326, 2329, 33},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          33, {-0.03174358758817991, 0.8982392973830129}, 41}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          33, {0.035224201044526, 0.8090959578498147}, 120}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          34, {0.16485851389337303`, 0.9000123646556594}, 42}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          34, {0.21659269654919255`, 0.7501015686426878}, 53}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          34, {0.16672040372424804`, 0.7879223336977963}, 121}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          34, {0.23146232379849108`, 0.8093623636647811}, 122}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          35, {0.4984651063338841, 0.8323433639433846}, 36}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          35, {0.4094329831863374, 0.7668033611095131}, 58}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          35, {0.3882876380838293, 0.8333400062550302}, 59}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          35, {0.3653436525884808, 0.787771639878965}, 123}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          36, {0.4986286958829977, 0.7668120388991705}, 35}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          36, {0.6992661760882296, 0.8323891624638754}, 37}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          36, {0.6152813203388104, 0.7510989311610285}, 64}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          36, {0.5863836005854152, 0.8328409849960863}, 65}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          37, {0.6988599203132386, 0.7660283873084563}, 36}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          37, {0.7670040211648225, 0.9004372657456161}, 45}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          37, {0.8162794830012142, 0.7488288641895691}, 69}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          37, {0.8332849634292748, 0.809553858991494}, 124}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          38, {1.0163286996751637`, 0.7490560398643357}, 73}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          38, {0.9895007937071324, 0.8327922967522096}, 74}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          38, {0.9666547784636471, 0.7878718599769827}, 125}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          38, {1.033206312098489, 0.8100148600281701}, 126}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          39, {1.216181967053294, 0.7491704883937257}, 78}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          39, {1.1820443698311898`, 0.8482179384351498}, 79}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          39, {1.1661248289412591`, 0.7881422826588522}, 127}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          39, {1.249092949650505, 0.815345392278633}, 128}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          40, {1.4339752920769073`, 0.6996514819406091}, 32}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{40, 2768, 2771, 2773, 2779, 2781, 2784, 40},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          40, {1.3910803654426247`, 0.8344500161497385}, 85}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          40, {1.3504854471178018`, 0.7832447040337331}, 128}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          41, {0.03424134948055991, 0.8986615725162285}, 33}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{41, 2839, 2842, 2844, 2850, 2852, 2855, 41},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{41, 2862, 2865, 2867, 2873, 2875, 2878, 41},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          41, {0.05060689418118473, 1.0152117032476147`}, 129}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          42, {0.2316666945030537, 0.8999244784875666}, 34}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{42, 2917, 2920, 2922, 2928, 2930, 2933, 42},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          42, {0.14995698579610037`, 0.9840718627823137}, 129}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          42, {0.24839621793126637`, 1.0179812706912532`}, 130}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{43, 2972, 2975, 2977, 2983, 2985, 2988, 43},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          43, {0.4113701514575024, 0.9667644225229576}, 60}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          43, {0.34885702216626363`, 0.983961210418866}, 130}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          43, {0.4498997309195581, 1.0162119266324923`}, 131}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{44, 3043, 3046, 3048, 3054, 3056, 3059, 44},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          44, {0.7009263555967641, 1.0335800683824525`}, 45}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          44, {0.6103884891518594, 0.965795948831162}, 66}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          44, {0.5507663665146035, 0.9829815413042419}, 131}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          45, {0.8338877150635863, 0.9001121742638334}, 37}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          45, {0.7016807135530645, 0.968042819290339}, 44}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{45, 3146, 3149, 3151, 3157, 3159, 3162, 45},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          45, {0.9005825129759982, 1.0331040025365783`}, 46}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          46, {0.8996180711604451, 0.9678801022766138}, 45}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{46, 3201, 3204, 3206, 3212, 3214, 3217, 46},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          46, {1.0998808863225502`, 1.03311121001715}, 47}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          46, {1.0116208508715028`, 0.9674345178953229}, 75}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          47, {1.1004704191095906`, 0.9667329430735127}, 46}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{47, 3272, 3275, 3277, 3283, 3285, 3288, 47},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          47, {1.2162466957219489`, 0.9488479201087693}, 79}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          47, {1.234424160761505, 1.0117810624347263`}, 132}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{48, 3327, 3330, 3332, 3338, 3340, 3343, 48},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{48, 3350, 3353, 3355, 3361, 3363, 3366, 48},
          SplineDegree->7], 0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          48, {1.4104882609506553`, 0.9674041974849699}, 86}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          48, {1.3665050479503533`, 0.9892198980173742}, 133}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          49, {0.017600175954794645`, 0.04950242395295119}, 1}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          49, {-0.016088820654827595`, 0.14995812188722293`}, 9}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          50, {0.018199880847757102`, 0.44832071472986584`}, 17}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          50, {-0.01648269338972342, 0.548391983257376}, 25}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          51, {0.21434870241614828`, 0.05143522920106168}, 2}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          51, {0.1826173481323317, 0.1516945420386135}, 10}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          52, {0.2178037133632342, 0.4487042236611772}, 18}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          52, {0.18545625083149944`, 0.5488542194033152}, 26}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          53, {0.21908003763925343`, 0.6492107603700065}, 26}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          53, {0.18432048718702465`, 0.7485705585868965}, 34}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          54, {0.41804665014814685`, 0.0516087364234219}, 3}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          54, {0.385280524187029, 0.14978386526996476`}, 11}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          55, {0.41588225518423527`, 0.2492276347847832}, 11}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          55, {0.38324870633266345`, 0.3509865125282696}, 19}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          56, {0.4178268692579763, 0.4507217494760316}, 19}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          56, {0.38385592333246116`, 0.5501072709716933}, 27}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          57, {0.4095796766632688, 0.6337800169585024}, 27}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          57, {0.38726218246316113`, 0.7003505087779573}, 58}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          58, {0.38807463270609877`, 0.7669122392627158}, 35}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          58, {0.40967568449623726`, 0.700272007092167}, 57}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          59, {0.4105506957076929, 0.833011235959453}, 35}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          59, {0.38955099843760327`, 0.9003884516866919}, 60}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          60, {0.38954142721058593`, 0.9663986679262427}, 43}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          60, {0.4113798471910992, 0.9000290336287583}, 59}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          61, {0.611866537665388, 0.031095616317467514`}, 4}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          61, {0.5904384868428925, 0.09712483244588814}, 62}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          62, {0.5904696480840259, 0.1641837968078209}, 12}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          62, {0.6120840505470572, 0.09703587273366726}, 61}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          63, {0.6151963661368027, 0.4496199215108153}, 20}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          63, {0.5835562137645177, 0.5509883122892855}, 28}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          64, {0.6171913839908456, 0.6519225721764706}, 28}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          64, {0.5830191100422978, 0.750457119665165}, 36}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          65, {0.6082814966097606, 0.833394767331139}, 36}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          65, {0.5858877310164473, 0.9000195262428411}, 66}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          66, {0.5885828239479672, 0.9672307315375978}, 44}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          66, {0.6079072499556665, 0.8997519090363355}, 65}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          67, {0.8178483871458176, 0.04961082825840419}, 5}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          67, {0.7850929287696062, 0.15059634977386618`}, 13}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          68, {0.8184985276976114, 0.2509596461079564}, 13}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          68, {0.785502647531978, 0.35066501456634175`}, 21}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          69, {0.8153416412131353, 0.6497610903309745}, 29}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          69, {0.7835551238863117, 0.7488514429900294}, 37}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          70, {1.0159648163507096`, 0.04923956265891448}, 6}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          70, {0.9833543858277004, 0.1487808807012125}, 14}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          71, {1.0112743467885876`, 0.43369205950038797`}, 22}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          71, {0.9892779563330578, 0.5005673711942942}, 72}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          72, {0.9899527730121992, 0.5671069411079309}, 30}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          72, {1.0115489516619578`, 0.5008607467654518}, 71}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          73, {1.0169643448879238`, 0.6493583918910792}, 30}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          73, {0.9834405894862182, 0.74904836654207}, 38}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          74, {1.0115524208177997`, 0.832362363932703}, 38}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          74, {0.9907227246295685, 0.9006571863820794}, 75}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          75, {0.9904565897037909, 0.9662648557043038}, 46}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          75, {1.0132744737015236`, 0.9001188972601821}, 74}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          76, {1.2107864347069095`, 0.03342010936754811}, 7}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          76, {1.1871167075652045`, 0.10007190947016953`}, 77}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          77, {1.1877654954403263`, 0.16698224195263872`}, 15}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          77, {1.2092327720710272`, 0.1006956165175825}, 76}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          78, {1.216532853922398, 0.6498628969538026}, 31}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          78, {1.183327686873447, 0.7487351299641496}, 39}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          79, {1.214644897989881, 0.8487101528560363}, 39}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          79, {1.1824404498767884`, 0.9499971995022765}, 47}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          80, {1.4123724352164773`, 0.034557006302801015`}, 8}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          80, {1.390233062364871, 0.10145210089279494`}, 81}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          81, {1.3893614305219721`, 0.16690278808816528`}, 16}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          81, {1.4124670835545252`, 0.10146847576874375`}, 80}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          82, {1.4157161814135084`, 0.24846657314678927`}, 16}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          82, {1.384483084053815, 0.3482286962689653}, 24}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          83, {1.412552602445128, 0.43059248629126723`}, 24}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          83, {1.3918511754447327`, 0.4965995220946631}, 84}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          84, {1.3903195908704467`, 0.5634778884358744}, 32}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          84, {1.4135740011787143`, 0.4962941763451071}, 83}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          85, {1.4128100411898024`, 0.833919532340646}, 40}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          85, {1.3906022133642941`, 0.9009678893232096}, 86}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          86, {1.389575111763995, 0.9668622574085959}, 48}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          86, {1.4130050868864203`, 0.9015914814400383}, 85}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          87, {0.23221391173739597`, -0.009057781870525146}, 2}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          87, {0.29888057840406207`, 0.012867651087224291`}, 88}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          88, {0.3666393776421217, 0.013170400520557875`}, 3}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          88, {0.29888057840406285`, -0.009057781870525035}, 87}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          89, {0.43436468056345306`, -0.009159631069406416}, 3}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          89, {0.5010313472301193, 0.01276580188834339}, 90}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          90, {0.5682297924437675, 0.010889191166417555`}, 4}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          90, {0.501031347230119, -0.009159631069406253}, 89}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          91, {1.233716755001826, -0.011297650475048455`}, 7}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          91, {1.3003834216684929`, 0.0106277824826977}, 92}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          92, {1.3673625517175414`, 0.011686402895767148`}, 8}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          92, {1.3003834216684926`, -0.011297650475053158`}, 91}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          93, {0.033725648046896047`, 0.19073503749778875`}, 9}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          93, {0.10039231471356273`, 0.21266047045611827`}, 94}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          94, {0.16742583944041134`, 0.2127747825601805}, 10}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          94, {0.10039231471356282`, 0.19073503749757786`}, 93}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          95, {0.2344556005583318, 0.19072359383496987`}, 10}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          95, {0.3011222672249979, 0.2126490267941928}, 96}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          96, {0.3678462947857566, 0.21086759223583162`}, 11}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          96, {0.3011222672249987, 0.1907235938354077}, 95}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          97, {0.8514687035337529, 0.18421626868079233`}, 13}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          97, {0.9512043525649551, 0.21598998792849722`}, 14}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          98, {1.2330575951982443`, 0.18817339046928377`}, 15}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          98, {1.299724261864911, 0.21009882342617286`}, 99}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          99, {1.3657310183370324`, 0.2100654290540396}, 16}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          99, {1.299724261864911, 0.1881733904659528}, 98}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          100, {0.035027311564766815`, 0.38767477929018346`}, 17}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          100, {0.10169397823143343`, 0.40960021224589227`}, 101}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          101, {0.16794797712604542`, 0.40938526473551484`}, 18}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          101, {0.10169397823143342`, 0.38767477929028754`}, 100}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          102, {0.23415494889938074`, 0.38753178820244116`}, 18}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          102, {0.30082161556604725`, 0.4094572211603935}, 103}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          103, {0.3674257066388987, 0.4110800065508199}, 19}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          103, {0.30082161556604803`, 0.38753178820760464`}, 102}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          104, {0.6316306141704896, 0.38901742294342345`}, 20}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          104, {0.6982972808371577, 0.4109428559056646}, 105}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          105, {0.7663300748733646, 0.41150983744674147`}, 21}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          105, {0.6982972808371561, 0.3890174229293525}, 104}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          106, {0.8344327237201792, 0.389229824104393}, 21}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          106, {0.9010993903868475, 0.41115525704472705`}, 107}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          107, {0.9670988868258035, 0.4112839114490759}, 22}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          107, {0.9010993903868457, 0.389229824104393}, 106}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          108, {1.0499716534691799`, 0.3843766664232454}, 22}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          108, {1.1500627033733828`, 0.416896003621802}, 23}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          109, {1.2332503998584432`, 0.38913835282091447`}, 23}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          109, {1.2999170665251099`, 0.41106378577220487`}, 110}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          110, {1.3676411518733156`, 0.41027832837571754`}, 24}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          110, {1.2999170665251099`, 0.3891383528416538}, 109}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          111, {0.03183105642656136, 0.5888685055103765}, 25}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          111, {0.09849772309323257, 0.6107939384716126}, 112}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          112, {0.16708683369358582`, 0.6106577181777184}, 26}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          112, {0.09849772309322796, 0.5888685055043716}, 111}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          113, {0.25188647282837984`, 0.582000209603499}, 26}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          113, {0.3502004138407801, 0.615746670177394}, 27}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          114, {0.44935295331605496`, 0.5845500595669768}, 27}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          114, {0.5502398562120451, 0.6181260067663528}, 28}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          115, {0.6346952092012386, 0.5907463158847434}, 28}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          115, {0.7013618758679113, 0.6126717488517759}, 116}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          116, {0.7667344956955541, 0.6117905493801016}, 29}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          116, {0.7013618758679051, 0.5907463159138093}, 115}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          117, {0.8485033487415442, 0.584442675343875}, 29}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          117, {0.9501254537845977, 0.6169487698747266}, 30}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          118, {1.2336678319116638`, 0.5897858126179796}, 31}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          118, {1.3003344985783256`, 0.6117112456406747}, 119}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          119, {1.3672858431551516`, 0.6105461818704352}, 32}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          119, {1.3003344985783305`, 0.5897858126446274}, 118}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          120, {0.03522420104453093, 0.7871705248929877}, 33}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          120, {0.10189086771119261`, 0.8090959578585358}, 121}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          121, {0.16663278778543805`, 0.8086105548427724}, 34}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          121, {0.10189086771119756`, 0.7871705248918623}, 120}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          122, {0.23146232379849574`, 0.7874369306998746}, 34}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          122, {0.29812899046515723`, 0.809362363680645}, 123}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          123, {0.3650380071213672, 0.809957002819396}, 35}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          123, {0.298128990465163, 0.7874369307293545}, 122}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          124, {0.8332849634292685, 0.7876284259089701}, 37}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          124, {0.8999516300959416, 0.809553858981344}, 125}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          125, {0.9665031637307823, 0.8097714259361131}, 38}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          125, {0.8999516300959354, 0.7876284260268797}, 124}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          126, {1.033206312098494, 0.7880894271168515}, 38}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          126, {1.0998729787651556`, 0.8100148600281701}, 127}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          127, {1.1661744328077372`, 0.8098111784736377}, 39}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          127, {1.0998729787651607`, 0.7880894270215542}, 126}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          128, {1.2490929496505048`, 0.7824572428855213}, 39}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          128, {1.3497462090298886`, 0.8168056650293869}, 40}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          129, {0.050606894181184796`, 0.9823235538095306}, 41}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          129, {0.14904612631635833`, 1.0162329617088233`}, 42}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          130, {0.24839621793126626`, 0.9850931212647749}, 42}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          130, {0.3494389266845513, 1.017343837481778}, 43}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          131, {0.4498997309195559, 0.9833237771828074}, 43}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          131, {0.5508003274223126, 1.016450900659917}, 44}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          132, {1.2344241607615074`, 0.9898556295210705}, 47}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          132, {1.3010908274281716`, 1.011781062221544}, 133}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          133, {1.3671268854103258`, 1.010526029250309}, 48}], 
          0.017590698954136397`], 
         ArrowBox[BezierCurveBox[{
          133, {1.301090827428174, 0.9898556294155606}, 132}], 
          0.017590698954136397`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.017590698954136397`], DiskBox[2, 0.017590698954136397`],
          DiskBox[3, 0.017590698954136397`], 
         DiskBox[4, 0.017590698954136397`], DiskBox[5, 0.017590698954136397`],
          DiskBox[6, 0.017590698954136397`], 
         DiskBox[7, 0.017590698954136397`], DiskBox[8, 0.017590698954136397`],
          DiskBox[9, 0.017590698954136397`], 
         DiskBox[10, 0.017590698954136397`], 
         DiskBox[11, 0.017590698954136397`], 
         DiskBox[12, 0.017590698954136397`], 
         DiskBox[13, 0.017590698954136397`], 
         DiskBox[14, 0.017590698954136397`], 
         DiskBox[15, 0.017590698954136397`], 
         DiskBox[16, 0.017590698954136397`], 
         DiskBox[17, 0.017590698954136397`], 
         DiskBox[18, 0.017590698954136397`], 
         DiskBox[19, 0.017590698954136397`], 
         DiskBox[20, 0.017590698954136397`], 
         DiskBox[21, 0.017590698954136397`], 
         DiskBox[22, 0.017590698954136397`], 
         DiskBox[23, 0.017590698954136397`], 
         DiskBox[24, 0.017590698954136397`], 
         DiskBox[25, 0.017590698954136397`], 
         DiskBox[26, 0.017590698954136397`], 
         DiskBox[27, 0.017590698954136397`], 
         DiskBox[28, 0.017590698954136397`], 
         DiskBox[29, 0.017590698954136397`], 
         DiskBox[30, 0.017590698954136397`], 
         DiskBox[31, 0.017590698954136397`], 
         DiskBox[32, 0.017590698954136397`], 
         DiskBox[33, 0.017590698954136397`], 
         DiskBox[34, 0.017590698954136397`], 
         DiskBox[35, 0.017590698954136397`], 
         DiskBox[36, 0.017590698954136397`], 
         DiskBox[37, 0.017590698954136397`], 
         DiskBox[38, 0.017590698954136397`], 
         DiskBox[39, 0.017590698954136397`], 
         DiskBox[40, 0.017590698954136397`], 
         DiskBox[41, 0.017590698954136397`], 
         DiskBox[42, 0.017590698954136397`], 
         DiskBox[43, 0.017590698954136397`], 
         DiskBox[44, 0.017590698954136397`], 
         DiskBox[45, 0.017590698954136397`], 
         DiskBox[46, 0.017590698954136397`], 
         DiskBox[47, 0.017590698954136397`], 
         DiskBox[48, 0.017590698954136397`], 
         DiskBox[49, 0.017590698954136397`], 
         DiskBox[50, 0.017590698954136397`], 
         DiskBox[51, 0.017590698954136397`], 
         DiskBox[52, 0.017590698954136397`], 
         DiskBox[53, 0.017590698954136397`], 
         DiskBox[54, 0.017590698954136397`], 
         DiskBox[55, 0.017590698954136397`], 
         DiskBox[56, 0.017590698954136397`], 
         DiskBox[57, 0.017590698954136397`], 
         DiskBox[58, 0.017590698954136397`], 
         DiskBox[59, 0.017590698954136397`], 
         DiskBox[60, 0.017590698954136397`], 
         DiskBox[61, 0.017590698954136397`], 
         DiskBox[62, 0.017590698954136397`], 
         DiskBox[63, 0.017590698954136397`], 
         DiskBox[64, 0.017590698954136397`], 
         DiskBox[65, 0.017590698954136397`], 
         DiskBox[66, 0.017590698954136397`], 
         DiskBox[67, 0.017590698954136397`], 
         DiskBox[68, 0.017590698954136397`], 
         DiskBox[69, 0.017590698954136397`], 
         DiskBox[70, 0.017590698954136397`], 
         DiskBox[71, 0.017590698954136397`], 
         DiskBox[72, 0.017590698954136397`], 
         DiskBox[73, 0.017590698954136397`], 
         DiskBox[74, 0.017590698954136397`], 
         DiskBox[75, 0.017590698954136397`], 
         DiskBox[76, 0.017590698954136397`], 
         DiskBox[77, 0.017590698954136397`], 
         DiskBox[78, 0.017590698954136397`], 
         DiskBox[79, 0.017590698954136397`], 
         DiskBox[80, 0.017590698954136397`], 
         DiskBox[81, 0.017590698954136397`], 
         DiskBox[82, 0.017590698954136397`], 
         DiskBox[83, 0.017590698954136397`], 
         DiskBox[84, 0.017590698954136397`], 
         DiskBox[85, 0.017590698954136397`], 
         DiskBox[86, 0.017590698954136397`], 
         DiskBox[87, 0.017590698954136397`], 
         DiskBox[88, 0.017590698954136397`], 
         DiskBox[89, 0.017590698954136397`], 
         DiskBox[90, 0.017590698954136397`], 
         DiskBox[91, 0.017590698954136397`], 
         DiskBox[92, 0.017590698954136397`], 
         DiskBox[93, 0.017590698954136397`], 
         DiskBox[94, 0.017590698954136397`], 
         DiskBox[95, 0.017590698954136397`], 
         DiskBox[96, 0.017590698954136397`], 
         DiskBox[97, 0.017590698954136397`], 
         DiskBox[98, 0.017590698954136397`], 
         DiskBox[99, 0.017590698954136397`], 
         DiskBox[100, 0.017590698954136397`], 
         DiskBox[101, 0.017590698954136397`], 
         DiskBox[102, 0.017590698954136397`], 
         DiskBox[103, 0.017590698954136397`], 
         DiskBox[104, 0.017590698954136397`], 
         DiskBox[105, 0.017590698954136397`], 
         DiskBox[106, 0.017590698954136397`], 
         DiskBox[107, 0.017590698954136397`], 
         DiskBox[108, 0.017590698954136397`], 
         DiskBox[109, 0.017590698954136397`], 
         DiskBox[110, 0.017590698954136397`], 
         DiskBox[111, 0.017590698954136397`], 
         DiskBox[112, 0.017590698954136397`], 
         DiskBox[113, 0.017590698954136397`], 
         DiskBox[114, 0.017590698954136397`], 
         DiskBox[115, 0.017590698954136397`], 
         DiskBox[116, 0.017590698954136397`], 
         DiskBox[117, 0.017590698954136397`], 
         DiskBox[118, 0.017590698954136397`], 
         DiskBox[119, 0.017590698954136397`], 
         DiskBox[120, 0.017590698954136397`], 
         DiskBox[121, 0.017590698954136397`], 
         DiskBox[122, 0.017590698954136397`], 
         DiskBox[123, 0.017590698954136397`], 
         DiskBox[124, 0.017590698954136397`], 
         DiskBox[125, 0.017590698954136397`], 
         DiskBox[126, 0.017590698954136397`], 
         DiskBox[127, 0.017590698954136397`], 
         DiskBox[128, 0.017590698954136397`], 
         DiskBox[129, 0.017590698954136397`], 
         DiskBox[130, 0.017590698954136397`], 
         DiskBox[131, 0.017590698954136397`], 
         DiskBox[132, 0.017590698954136397`], 
         DiskBox[133, 0.017590698954136397`]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.780868370686528*^9, 3.7808683878636694`*^9}, {
   3.780868423553652*^9, 3.780868427555517*^9}, {3.780868460857787*^9, 
   3.7808684629977045`*^9}, {3.7808688947472353`*^9, 3.780868935830062*^9}, 
   3.780870991656818*^9, {3.780871026305726*^9, 3.7808710460563927`*^9}, 
   3.7808711653411245`*^9, 3.7808718353622923`*^9, 3.7809193822566204`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Dimensions (mi): 1.2 \[Times] 1.6\"\>"], "Print",
 CellChangeTimes->{{3.780868423583639*^9, 3.7808684275885077`*^9}, {
   3.7808684608857775`*^9, 3.7808684630347104`*^9}, {3.7808688947772064`*^9, 
   3.7808689358560357`*^9}, 3.7808709917257957`*^9, {3.780871026338699*^9, 
   3.780871046084386*^9}, 3.7808711653701143`*^9, 3.7808718354112587`*^9, 
   3.780919386393125*^9}],

Cell[BoxData["\<\"Lines: 14\"\>"], "Print",
 CellChangeTimes->{{3.780868423583639*^9, 3.7808684275885077`*^9}, {
   3.7808684608857775`*^9, 3.7808684630347104`*^9}, {3.7808688947772064`*^9, 
   3.7808689358560357`*^9}, 3.7808709917257957`*^9, {3.780871026338699*^9, 
   3.780871046084386*^9}, 3.7808711653701143`*^9, 3.7808718354112587`*^9, 
   3.7809193864700336`*^9}],

Cell[BoxData["\<\"Stops: 133\"\>"], "Print",
 CellChangeTimes->{{3.780868423583639*^9, 3.7808684275885077`*^9}, {
   3.7808684608857775`*^9, 3.7808684630347104`*^9}, {3.7808688947772064`*^9, 
   3.7808689358560357`*^9}, 3.7808709917257957`*^9, {3.780871026338699*^9, 
   3.780871046084386*^9}, 3.7808711653701143`*^9, 3.7808718354112587`*^9, 
   3.7809193864900265`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"ERROR", "!"}], " ", "We", " ", "need", " ", "to", " ", 
    "separate", " ", "the", " ", "stop", " ", "nodes", " ", "from", " ", 
    "the", " ", "boarding", " ", 
    RowBox[{"nodes", ".", " ", "What"}], " ", 
    RowBox[{"we", "'"}], "ve", " ", "generated", " ", "so", " ", "far", " ", 
    "is", " ", "fine", " ", "for", " ", "the", " ", "line", " ", "nodes", " ",
     "and", " ", "arcs"}], ",", " ", 
   RowBox[{
    RowBox[{
    "but", " ", "now", " ", "we", " ", "need", " ", "to", " ", "add", " ", 
     "stop", " ", "nodes", " ", "with", " ", 
     RowBox[{"boarding", "/", "alighting"}], " ", "arcs", " ", "for", " ", 
     "each", " ", 
     RowBox[{"stop", ".", " ", "We"}], " ", "can", " ", "do", " ", "this", 
     " ", "by", " ", "just", " ", "processing", " ", "each", " ", "existing", 
     " ", "node", " ", "and", " ", "copying", " ", "its", " ", 
     RowBox[{"coordinates", ".", "\[IndentingNewLine]", "Double"}]}], "-", 
    RowBox[{
    "check", " ", "the", " ", "node", " ", "type", " ", "IDs", " ", "of", " ",
      "line", " ", "and", " ", "stop", " ", 
     RowBox[{"nodes", "."}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7808691010530815`*^9, 3.7808691175847597`*^9}, {
  3.7808705970233817`*^9, 3.7808706914470816`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759, 833},
WindowMargins->{{94, Automatic}, {Automatic, 62}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 93, 1, 64, "Chapter"],
Cell[676, 25, 266, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[967, 34, 150, 2, 63, "Section"],
Cell[CellGroupData[{
Cell[1142, 40, 218, 3, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[1385, 47, 616, 9, 58, "SubitemNumbered"],
Cell[2004, 58, 293, 3, 24, "SubitemNumbered"],
Cell[2300, 63, 426, 7, 41, "SubitemNumbered"],
Cell[2729, 72, 428, 7, 41, "SubitemNumbered"]
}, Open  ]],
Cell[3172, 82, 315, 4, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[3512, 90, 382, 7, 41, "SubitemNumbered"],
Cell[3897, 99, 325, 4, 24, "SubitemNumbered"],
Cell[4225, 105, 540, 8, 58, "SubitemNumbered"]
}, Open  ]],
Cell[4780, 116, 300, 4, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[5105, 124, 408, 7, 41, "SubitemNumbered"],
Cell[5516, 133, 524, 9, 58, "SubitemNumbered"],
Cell[6043, 144, 721, 14, 58, "SubitemNumbered"],
Cell[6767, 160, 680, 10, 58, "SubitemNumbered"]
}, Open  ]],
Cell[7462, 173, 532, 7, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[8019, 184, 625, 9, 41, "SubitemNumbered"],
Cell[8647, 195, 620, 9, 41, "SubitemNumbered"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9328, 211, 99, 1, 63, "Section"],
Cell[9430, 214, 273, 5, 49, "Text"],
Cell[9706, 221, 4800, 103, 392, "Input"],
Cell[14509, 326, 273, 9, 5, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14831, 341, 94, 1, 64, "Chapter"],
Cell[14928, 344, 328, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[15281, 354, 160, 2, 63, "Section"],
Cell[15444, 358, 340, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[15809, 368, 31065, 721, 2830, "Input"],
Cell[46877, 1091, 175154, 3167, 282, "Output"],
Cell[CellGroupData[{
Cell[222056, 4262, 391, 5, 23, "Print"],
Cell[222450, 4269, 369, 5, 23, "Print"],
Cell[222822, 4276, 370, 5, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[223219, 4285, 1331, 26, 132, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

