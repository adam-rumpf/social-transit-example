(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    388781,       7472]
NotebookOptionsPosition[    386511,       7396]
NotebookOutlinePosition[    386854,       7411]
CellTagsIndexPosition[    386811,       7408]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Preamble", "Chapter",
 CellChangeTimes->{{3.780771541527303*^9, 3.780771547398859*^9}}],

Cell["\<\
This section contains the program\[CloseCurlyQuote]s pseudocode and a few \
definitions that should only need to be executed once (as long as the \
parameters are not changed).\
\>", "Text",
 CellChangeTimes->{{3.780771585873912*^9, 3.780771622034917*^9}}],

Cell[CellGroupData[{

Cell["Pseudocode", "Section",
 CellChangeTimes->{{3.7803292543397837`*^9, 3.780329256110973*^9}, {
  3.7807721136837177`*^9, 3.7807721151272697`*^9}}],

Cell[CellGroupData[{

Cell["Define the road network.", "ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678766351327*^9}}],

Cell[CellGroupData[{

Cell["\<\
The network consists of a square grid of stops, with routes running N/S and \
E/W to define the grid (plus a dummy turnaround loop on each end). Between \
each pair of grid intersections we can also place stops.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678805404803*^9}, {3.7806789159593525`*^9, 3.7806789159643526`*^9}, {
  3.780681600251603*^9, 3.7806816134123807`*^9}, {3.780682029623898*^9, 
  3.780682038601019*^9}, {3.7808488461528215`*^9, 3.7808488685825534`*^9}}],

Cell["Each stop is a node, whose coordinates we store.", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678805404803*^9}, {3.7806789159593525`*^9, 3.780678938594097*^9}}],

Cell["\<\
We define arcs for each line, with slightly randomized travel times that \
depend on distance plus a constant boarding time.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.780678805404803*^9}, {3.7806789159593525`*^9, 3.780678946325615*^9}, {
  3.780681957166153*^9, 3.780681990746385*^9}}],

Cell["\<\
Stops that are close enough to each other (taxicab distance) are connected by \
walking arcs.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
  3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
  3.7806788303897915`*^9}, {3.7806789332048225`*^9, 3.780678933210821*^9}, {
  3.780682076815765*^9, 3.780682088783948*^9}, {3.7809436720285063`*^9, 
  3.780943687989287*^9}}]
}, Open  ]],

Cell["Define population centers and facilities.", "ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806790038531685`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Population centers and facilities are both generated uniformly at random \
within the grid network.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.780679059001484*^9}, {3.7809437109647923`*^9, 3.7809437516738834`*^9}}],

Cell["Population centers also receive a random population.", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.780679059001484*^9}, {3.7809437109647923`*^9, 3.7809437593517623`*^9}}],

Cell["\<\
Additional walking arcs are added to connect the new nodes to the network.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806791448949413`*^9}, {3.7806868399016275`*^9, 3.780686839909628*^9}, {
   3.78094373966658*^9, 3.780943749040923*^9}}]
}, Open  ]],

Cell["Define OD and fleet sizes.", "ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806791520776386`*^9}}],

Cell[CellGroupData[{

Cell["\<\
For each stop, decide the travel demand to all other stops according to a \
gamma distribution based on Euclidean distance.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806791963604383`*^9}}],

Cell["\<\
The total outgoing travel demand for a stop should also depend on its \
population. For each stop, determine the nearest population center, and \
equally distribute the center\[CloseCurlyQuote]s population to all of its \
associated stops.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.7806792946319265`*^9}}],

Cell[TextData[{
 "There should also be an overall scaling factor to adjust the daily traffic \
as a fraction of the overall population (my Chicago data shows that the \
number of daily boardings is approximately ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "/", "3"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " of the total population)."
}], "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679686257347*^9}}],

Cell["\<\
The fleet sizes of each route should be proportional to the number of people \
using them, which can be quickly modeled by assuming that all of the travel \
demand travels along its shortest path.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.7806868545819197`*^9}}]
}, Open  ]],

Cell["Evaluate the objective function\[CloseCurlyQuote]s shape.", \
"ItemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.7806868700739527`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Pick several pairs of lines at random. For each pair, vary both of the fleet \
sizes within a range and calculate the objective value for each.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.780686940147503*^9}}],

Cell["\<\
Use these results to generate a table of objective values, displayed as an \
array plot, in order to show how rough the objective looks.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.780329276188409*^9, 3.7803293011823826`*^9}, {
   3.7803296031889906`*^9, 3.7803296394264975`*^9}, {3.780678753422472*^9, 
   3.7806788303897915`*^9}, 3.7806789332048225`*^9, {3.780678964883665*^9, 
   3.78067931417766*^9}, {3.7806796120661387`*^9, 3.780679639303404*^9}, {
   3.7806796862473507`*^9, 3.780679754172571*^9}, {3.7806866365658283`*^9, 
   3.7806866368507576`*^9}, {3.780686854573923*^9, 3.7806869729809537`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellChangeTimes->{{3.7807714143939443`*^9, 3.7807714158685155`*^9}}],

Cell["\<\
The parameters defined below can be changed to generate different types of \
example network. Everything below this point should also be re-executed when \
the parameters are updated.\
\>", "Text",
 CellChangeTimes->{{3.780771419110817*^9, 3.780771456481101*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hlines", "=", "6"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "number", " ", "of", " ", "grid", " ", "lines", " ", "running", " ", 
    "horizontally"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vlines", "=", "8"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "number", " ", "of", " ", "grid", " ", "lines", " ", "running", " ", 
    "vertically"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hgap", "=", "0.2"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"distance", " ", "between", " ", "horizontal", " ", "lines", " ", 
    RowBox[{"(", "mi", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vgap", "=", "0.2"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"distance", " ", "between", " ", "vertical", " ", "lines", " ", 
    RowBox[{"(", "mi", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jiggle", "=", "0.002"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "random", " ", "displacement", " ", "for", " ", "each", " ", "grid", " ", 
    "node", " ", 
    RowBox[{"(", "mi", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"horizon", "=", "60"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"total", " ", "time", " ", "horizon", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minbetween", "=", "0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "minimum", " ", "number", " ", "of", " ", "nodes", " ", "to", " ", "place",
     " ", "between", " ", "grid", " ", "intersections"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxbetween", "=", "2"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "maximum", " ", "number", " ", "of", " ", "nodes", " ", "to", " ", "place",
     " ", "between", " ", "grid", " ", "intersections"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wspeed", "=", "0.0455"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"pedestrian", " ", "walking", " ", "speed", " ", 
    RowBox[{"(", 
     RowBox[{"mi", "/", "min"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minbspeed", "=", "0.3"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"minimum", " ", "bus", " ", "speed", " ", 
    RowBox[{"(", 
     RowBox[{"mi", "/", "min"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxbspeed", "=", "0.5"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"maximum", " ", "bus", " ", "speed", " ", 
    RowBox[{"(", 
     RowBox[{"mi", "/", "min"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minbstop", "=", "0.5"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"minimum", " ", "bus", " ", "stop", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxbstop", "=", "0.75"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"maximum", " ", "bus", " ", "stop", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minbturnaround", "=", "5"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"minimum", " ", "bus", " ", "turnaround", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxbturnaround", "=", "30"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"maximum", " ", "bus", " ", "turnaround", " ", "time", " ", 
    RowBox[{"(", "min", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"facilities", "=", "10"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "facilities"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"populations", "=", "20"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "population", " ", "centers"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minpop", "=", "200"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "minimum", " ", "population", " ", "of", " ", "a", " ", "population", " ", 
    "center"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxpop", "=", "2000"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "maximum", " ", "population", " ", "of", " ", "a", " ", "population", " ", 
    "center"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"wradius", "=", "0.12"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "distance", " ", "cutoff", " ", "for", " ", "walking", " ", "arcs", " ", 
    RowBox[{"(", 
     RowBox[{"mi", ",", " ", 
      RowBox[{"measured", " ", "as", " ", "taxicab", " ", "distance"}]}], 
     ")"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7807714685817165`*^9, 3.780771469692157*^9}, {
   3.7807722664852037`*^9, 3.7807723285478315`*^9}, {3.7807723622388773`*^9, 
   3.7807724136701546`*^9}, {3.78084871435122*^9, 3.780848790950302*^9}, 
   3.7808553189388647`*^9, {3.7808554668835506`*^9, 3.78085547840916*^9}, 
   3.7808563896968355`*^9, 3.780856483595828*^9, {3.780856916720811*^9, 
   3.7808569330009212`*^9}, {3.780856989281165*^9, 3.7808570479088755`*^9}, {
   3.780857133645026*^9, 3.780857136792862*^9}, {3.780857191360109*^9, 
   3.7808572266899395`*^9}, {3.7808573219851074`*^9, 3.780857331801365*^9}, {
   3.7808607186237993`*^9, 3.7808608617713127`*^9}, {3.78086801485207*^9, 
   3.780868022792763*^9}, {3.780868625444586*^9, 3.7808686683276653`*^9}, 
   3.7808687167390623`*^9, 3.780868928273485*^9, {3.780868975178445*^9, 
   3.780869029117138*^9}, {3.7808711560911093`*^9, 3.7808711605126915`*^9}, {
   3.780871826919999*^9, 3.78087182838951*^9}, {3.780919353945106*^9, 
   3.780919355858287*^9}, {3.7809194392511005`*^9, 3.7809194602362547`*^9}, {
   3.7809424795783677`*^9, 3.780942531855831*^9}, 3.7809429087480173`*^9, {
   3.780943398100117*^9, 3.7809433982011757`*^9}, 3.780943463525234*^9, {
   3.7809437631608467`*^9, 3.7809437999572124`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execution", "Chapter",
 CellChangeTimes->{{3.780771565651047*^9, 3.780771567477462*^9}}],

Cell["\<\
The contents of the following sections may need to be repeatedly re-executed \
to generate satisfactory example networks. They should always be executed in \
order from top to bottom.\
\>", "Text",
 CellChangeTimes->{{3.7807716306375384`*^9, 3.780771649293496*^9}, {
  3.7808685835746193`*^9, 3.7808686061162567`*^9}}],

Cell[CellGroupData[{

Cell["Network Construction", "Section",
 CellChangeTimes->{{3.780771521038786*^9, 3.7807715235126934`*^9}, {
  3.7807720128307896`*^9, 3.7807720163927107`*^9}}],

Cell["\<\
This section builds the underlying network of stops and other locations, \
along with the line arcs and walking arcs to connect them. A map of the \
network is shown once this process is complete.\
\>", "Text",
 CellChangeTimes->{{3.78077198108607*^9, 3.7807720376299205`*^9}, {
  3.7807720965858326`*^9, 3.7807721011810923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initialize", " ", "data", " ", "structures"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ncoords", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"list", " ", "of", " ", "node", " ", "coordinates"}], " ", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ntype", "=", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"list", " ", "of", " ", "node", " ", "types", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"0", " ", "for", " ", "stop"}], ",", " ", 
       RowBox[{"1", " ", "for", " ", "boarding"}], ",", " ", 
       RowBox[{"2", " ", "for", " ", "population"}], ",", " ", 
       RowBox[{"3", " ", "for", " ", "facility"}]}], ")"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stops", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"subset", " ", "of", " ", "stop", " ", "node", " ", "IDs"}], " ",
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{"nname", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "node", " ", "names"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"nline", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "boarding", " ", "node", " ", "line", " ", 
      "IDs"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"nval", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "node", " ", "values", " ", 
      RowBox[{"(", 
       RowBox[{
       "population", " ", "or", " ", "facility", " ", "weight", " ", "as", 
        " ", "applicable"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"nrows", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "lists", " ", "of", " ", "boarding", " ", "node",
       " ", "IDs", " ", "for", " ", "each", " ", "street", " ", "row"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ncols", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "lists", " ", "of", " ", "boarding", " ", "node",
       " ", "IDs", " ", "for", " ", "each", " ", "street", " ", "column"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"arcs", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"list", " ", "of", " ", "arcs"}], ",", " ", 
      RowBox[{"in", " ", Cell["i\[DirectedEdge]j"], " ", "format"}]}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"atype", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "arc", " ", "types", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0", " ", "for", " ", "line"}], ",", " ", 
        RowBox[{"1", " ", "for", " ", "boarding"}], ",", " ", 
        RowBox[{"2", " ", "for", " ", "alighting"}], ",", " ", 
        RowBox[{"3", " ", "for", " ", "core", " ", "walking"}], ",", " ", 
        RowBox[{"4", " ", "for", " ", "accessibility", " ", "walking"}]}], 
       ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"acost", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"list", " ", "of", " ", "arc", " ", "times"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"alines", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "lists", " ", "of", " ", "line", " ", "arc", " ",
       "IDs", " ", "for", " ", "each", " ", "transit", " ", "line"}], " ", 
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Dimensions (mi): \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hlines", " ", "hgap"}], "]"}], "<>", "\"\< \[Times] \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"vlines", " ", "vgap"}], "]"}]}], "]"}]}], 
   RowBox[{"(*", " ", 
    RowBox[{"display", " ", "dimensions", " ", "of", " ", "network"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Lines: \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"hlines", "+", "vlines"}], "]"}]}], "]"}], 
   RowBox[{"(*", " ", 
    RowBox[{"display", " ", "number", " ", "of", " ", "routes"}], " ", "*)"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Generate", " ", "grid", " ", "intersection", " ", "stops"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ncoords", "=", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"vgap", " ", "j"}], ",", 
            RowBox[{"hgap", " ", "i"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"hlines", "-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", 
            RowBox[{"vlines", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
       "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "jiggle"}], ",", "jiggle"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"hlines", " ", "vlines"}], ",", "2"}], "}"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Insert", " ", "additional", " ", "stops", " ", "between", " ", "grid", 
     " ", "intersections", " ", "and", " ", "build", " ", "up", " ", "the", 
     " ", 
     RowBox[{"row", "/", "column"}], " ", "lists"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"col", ",", "row", ",", "inc"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "column", " ", "from", " ", "bottom", 
          " ", "to", " ", "top"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"col", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "node", " ", "IDs", " ", "in", " ", "current", " ", "column"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"col", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"col", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "+", 
                 RowBox[{"vlines", " ", 
                  RowBox[{"(", 
                   RowBox[{"j", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], 
             ";", 
             RowBox[{"(*", " ", 
              RowBox[{"current", " ", "node", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"btw", "=", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"minbetween", ",", "maxbetween"}], "}"}], "]"}]}], 
             ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "number", " ", "of", " ", "stops", " ", "to", " ", "insert"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"inc", "=", 
              RowBox[{"N", "[", 
               FractionBox["hgap", 
                RowBox[{"btw", "+", "1"}]], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "distance", " ", "north", " ", "of", " ", "current", " ", 
               "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "insert", " ", "stops", " ", "between", " ", "consecutive", 
                " ", "intersections"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"ncoords", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"ncoords", ",", 
                   RowBox[{
                    RowBox[{"ncoords", "[", 
                    RowBox[{"[", 
                    RowBox[{"(", 
                    RowBox[{"col", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], ")"}], "]"}], "]"}], 
                    "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "inc"}], "}"}], "+", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "jiggle"}], ",", "jiggle"}], "}"}], ",", 
                    "2"}], "]"}]}]}], "]"}]}], ";", 
                RowBox[{"(*", " ", 
                 RowBox[{"new", " ", "stop", " ", "coordinate"}], " ", "*)"}],
                 "\[IndentingNewLine]", 
                RowBox[{"col", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"col", ",", 
                   RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}]}], 
               RowBox[{"(*", " ", 
                RowBox[{
                "add", " ", "new", " ", "entry", " ", "to", " ", "column", 
                 " ", "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", "btw"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"hlines", "-", "1"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "topmost", " ", "stop", " ", "requires", " ", "separate", " ", 
            "processing"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"col", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"col", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "+", 
              RowBox[{"vlines", " ", 
               RowBox[{"(", 
                RowBox[{"hlines", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], 
          ";", 
          RowBox[{"(*", " ", 
           RowBox[{"top", " ", "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ncols", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"ncols", ",", "col"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "all", " ", "stops", " ", "in", " ", "column", " ", 
           "to", " ", "main", " ", "column", " ", "list"}], " ", "*)"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "vlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "row", " ", "from", " ", "left", " ", 
          "to", " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"row", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "node", " ", "IDs", " ", "in", " ", "current", " ", "row"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"row", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"row", ",", 
                RowBox[{
                 RowBox[{"vlines", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}]}], "+", 
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "+", "1"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"current", " ", "node", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"btw", "=", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"minbetween", ",", "maxbetween"}], "}"}], "]"}]}], 
             ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "number", " ", "of", " ", "stops", " ", "to", " ", "insert"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"inc", "=", 
              RowBox[{"N", "[", 
               FractionBox["vgap", 
                RowBox[{"btw", "+", "1"}]], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "distance", " ", "east", " ", "of", " ", "current", " ", 
               "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "insert", " ", "stops", " ", "between", " ", "consecutive", 
                " ", "intersections"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"ncoords", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"ncoords", ",", 
                   RowBox[{
                    RowBox[{"ncoords", "[", 
                    RowBox[{"[", 
                    RowBox[{"(", 
                    RowBox[{"row", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], ")"}], "]"}], "]"}], 
                    "+", 
                    RowBox[{"{", 
                    RowBox[{"inc", ",", "0"}], "}"}]}]}], "]"}]}], ";", 
                RowBox[{"(*", " ", 
                 RowBox[{"new", " ", "stop", " ", "coordinate"}], " ", "*)"}],
                 "\[IndentingNewLine]", 
                RowBox[{"row", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"row", ",", 
                   RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}]}], 
               RowBox[{"(*", " ", 
                RowBox[{
                "add", " ", "new", " ", "entry", " ", "to", " ", "row", " ", 
                 "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", "btw"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"vlines", "-", "1"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "rightmost", " ", "stop", " ", "requires", " ", "separate", " ", 
            "processing"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"row", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"row", ",", 
             RowBox[{"vlines", " ", "i"}]}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"right", " ", "stop"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"nrows", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"nrows", ",", "row"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "all", " ", "stops", " ", "in", " ", "row", " ", "to", 
           " ", "main", " ", "row", " ", "list"}], " ", "*)"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "hlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"generate", " ", "node", " ", "attributes"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ntype", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"stops", " ", "are", " ", "type", " ", "0"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"nline", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "stops", " ", "have", " ", "no", " ", "associated", " ", "lines"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"nname", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\"\<Stop\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "ncoords", "]"}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "stop", " ", "nodes", " ", "are", " ", "named", " ", "according", " ",
          "to", " ", "their", " ", "node", " ", "IDs"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"stops", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "ncoords", "]"}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "all", " ", "nodes", " ", "so", " ", "far", " ", "are", " ", 
         "stops"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Stops: \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "ncoords", "]"}], "]"}]}], "]"}], ";"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{"print", " ", "number", " ", "of", " ", "stops"}], " ", "*)"}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Define", " ", "boarding", " ", "nodes", " ", "and", " ", "associated", 
     " ", 
     RowBox[{"boarding", "/", "alighting"}], " ", "arcs", " ", "for", " ", 
     "each", " ", "column", " ", "and", " ", "row"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"old", ",", "new"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "column", " ", "from", " ", "bottom", 
          " ", "to", " ", "top"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"old", "=", 
             RowBox[{"ncols", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "node", " ", "ID", " ", "of", " ", "current", " ", "stop"}], " ",
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"new", "=", 
             RowBox[{
              RowBox[{"Length", "[", "ncoords", "]"}], "+", "1"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "node", " ", "ID", " ", "of", " ", "new", " ", "boarding", " ", 
              "node"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"ncoords", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ncoords", ",", 
               RowBox[{"ncoords", "[", 
                RowBox[{"[", "old", "]"}], "]"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "node", " ", "gets", " ", "same", " ", 
              "coordinates", " ", "as", " ", "stop"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"nname", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"nname", ",", 
               RowBox[{
                RowBox[{"nname", "[", 
                 RowBox[{"[", "old", "]"}], "]"}], "<>", "\"\<_Route\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "append", " ", "line", " ", "ID", " ", "to", " ", "boarding", 
              " ", "node", " ", "name"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"nline", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"nline", ",", "i"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "node", " ", "associated", " ", "with", " ", 
              "current", " ", "line"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"ntype", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ntype", ",", "1"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "nodes", " ", "are", " ", "type", " ", "1"}], 
             " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"arcs", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"arcs", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"old", "\[DirectedEdge]", "new"}], ",", 
                 RowBox[{"new", "\[DirectedEdge]", "old"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "add", " ", "boarding", " ", "and", " ", "alighting", " ", 
              "arcs"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"acost", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"acost", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "and", " ", "alighting", " ", "base", " ", 
              "times", " ", "both", " ", "0"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"atype", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"atype", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"boarding", " ", "type", " ", "1"}], ",", " ", 
              RowBox[{"alighting", " ", "type", " ", "2"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ncols", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
             RowBox[{"Length", "[", "ncoords", "]"}]}], ";"}], 
           RowBox[{"(*", " ", 
            RowBox[{
            "replace", " ", "line", " ", "node", " ", "ID", " ", "with", " ", 
             "the", " ", "new", " ", "node", " ", "for", " ", "later", " ", 
             "use"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"(", 
               RowBox[{"ncols", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}], "]"}]}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "vlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "row", " ", "from", " ", "left", " ", 
          "to", " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"old", "=", 
             RowBox[{"nrows", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "node", " ", "ID", " ", "of", " ", "current", " ", "stop"}], " ",
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"new", "=", 
             RowBox[{
              RowBox[{"Length", "[", "ncoords", "]"}], "+", "1"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "node", " ", "ID", " ", "of", " ", "new", " ", "boarding", " ", 
              "node"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"ncoords", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ncoords", ",", 
               RowBox[{"ncoords", "[", 
                RowBox[{"[", "old", "]"}], "]"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "node", " ", "gets", " ", "same", " ", 
              "coordinates", " ", "as", " ", "stop"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"nname", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"nname", ",", 
               RowBox[{
                RowBox[{"nname", "[", 
                 RowBox[{"[", "old", "]"}], "]"}], "<>", "\"\<_Route\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "append", " ", "line", " ", "ID", " ", "to", " ", "boarding", 
              " ", "node", " ", "name"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"nline", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"nline", ",", 
               RowBox[{"vlines", "+", "i"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "node", " ", "associated", " ", "with", " ", 
              "current", " ", "line"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"ntype", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ntype", ",", "1"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "nodes", " ", "are", " ", "type", " ", "1"}], 
             " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"arcs", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"arcs", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"old", "\[DirectedEdge]", "new"}], ",", 
                 RowBox[{"new", "\[DirectedEdge]", "old"}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "add", " ", "boarding", " ", "and", " ", "alighting", " ", 
              "arcs"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"acost", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"acost", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
             "boarding", " ", "and", " ", "alighting", " ", "base", " ", 
              "times", " ", "both", " ", "0"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"atype", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"atype", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"boarding", " ", "type", " ", "1"}], ",", " ", 
              RowBox[{"alighting", " ", "type", " ", "2"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"nrows", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
             RowBox[{"Length", "[", "ncoords", "]"}]}], ";"}], 
           RowBox[{"(*", " ", 
            RowBox[{
            "replace", " ", "line", " ", "node", " ", "ID", " ", "with", " ", 
             "the", " ", "new", " ", "node", " ", "for", " ", "later", " ", 
             "use"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"(", 
               RowBox[{"nrows", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}], "]"}]}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "hlines"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"nval", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"Length", "[", "ncoords", "]"}]}], "]"}]}], ";"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{
      "stop", " ", "and", " ", "boarding", " ", "nodes", " ", "have", " ", 
       "no", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Define", " ", "line", " ", "arcs", " ", "for", " ", "each", " ", 
     "column", " ", "and", " ", "row"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"head", ",", "tail", ",", "line", ",", "d", ",", "t"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "column", " ", "and", " ", "generate", 
          " ", "arcs", " ", "between", " ", "each", " ", "consecutive", " ", 
          "pair", " ", "of", " ", "stops"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"line", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"current", " ", "transit", " ", 
            RowBox[{"line", "'"}], "s", " ", "arcs"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"tail", "=", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"tail", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"head", "=", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"head", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"d", "=", 
              RowBox[{"EuclideanDistance", "[", 
               RowBox[{
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "tail", "]"}], "]"}], ",", 
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "head", "]"}], "]"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "distance"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "time"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"atype", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"atype", ",", "0"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"tail", "\[DirectedEdge]", "head"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "append", " ", "arc", " ", "to", " ", "line", " ", "list"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"also", " ", "generate", " ", "revese", " ", "arc"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"atype", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"atype", ",", "0"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"head", "\[DirectedEdge]", "tail"}]}], "]"}]}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"ncols", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}]}],
            "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "turnaround", " ", "loops", " ", "to", " ", 
            "endpoints"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"ncols", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"atype", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"atype", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"arcs", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"arcs", ",", "line"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "arcs", " ", "to", " ", "main", " ", "arc", " ", 
            "list"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"alines", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"alines", ",", "line"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "line", " ", "arcs", " ", "to", " ", "line", " ", "arc",
            " ", "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "ncols", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "process", " ", "each", " ", "row", " ", "and", " ", "generate", " ",
           "arcs", " ", "between", " ", "each", " ", "consecutive", " ", 
          "pair", " ", "of", " ", "stops"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"line", "=", 
           RowBox[{"{", "}"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"current", " ", "transit", " ", 
            RowBox[{"line", "'"}], "s", " ", "arcs"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"tail", "=", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"tail", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"head", "=", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"head", " ", "stop", " ", "ID"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"d", "=", 
              RowBox[{"EuclideanDistance", "[", 
               RowBox[{
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "tail", "]"}], "]"}], ",", 
                RowBox[{"ncoords", "[", 
                 RowBox[{"[", "head", "]"}], "]"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "distance"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", 
             RowBox[{"(*", " ", 
              RowBox[{"link", " ", "time"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"atype", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"atype", ",", "0"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"tail", "\[DirectedEdge]", "head"}]}], "]"}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "append", " ", "arc", " ", "to", " ", "line", " ", "list"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"also", " ", "generate", " ", "revese", " ", "arc"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"minbstop", ",", "maxbstop"}], "}"}], "]"}], "+", 
               RowBox[{"d", "/", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"minbspeed", ",", "maxbspeed"}], "}"}], "]"}]}]}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"acost", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"acost", ",", "t"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"atype", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"atype", ",", "0"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"line", ",", 
                RowBox[{"head", "\[DirectedEdge]", "tail"}]}], "]"}]}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"nrows", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}]}],
            "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "turnaround", " ", "loops", " ", "to", " ", 
            "endpoints"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"line", ",", 
             RowBox[{
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "\[DirectedEdge]", 
              RowBox[{"nrows", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"acost", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"acost", ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"minbturnaround", ",", "maxbturnaround"}], "}"}], 
              "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"atype", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"atype", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"arcs", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"arcs", ",", "line"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "add", " ", "arcs", " ", "to", " ", "main", " ", "arc", " ", 
            "list"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"alines", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"alines", ",", "line"}], "]"}]}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "line", " ", "arcs", " ", "to", " ", "line", " ", "arc",
            " ", "list"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "nrows", "]"}]}], "}"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Generate", " ", "core", " ", "walking", " ", "arcs"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d", ",", "t", ",", "a", ",", "b"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "process", " ", "each", " ", "unique", " ", "pair", " ", "of", " ",
             "stop", " ", "nodes"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"stops", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"b", "=", 
             RowBox[{"stops", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"d", "=", 
             RowBox[{"ManhattanDistance", "[", 
              RowBox[{
               RowBox[{"ncoords", "[", 
                RowBox[{"[", "a", "]"}], "]"}], ",", 
               RowBox[{"ncoords", "[", 
                RowBox[{"[", "b", "]"}], "]"}]}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{"pairwise", " ", "distance"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"t", "=", 
             RowBox[{"N", "[", 
              RowBox[{"d", "/", "wspeed"}], "]"}]}], ";", 
            RowBox[{"(*", " ", 
             RowBox[{"walking", " ", "time"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"d", "\[LessEqual]", "wradius"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "connect", " ", "nearby", " ", "pairs", " ", "of", " ", "arcs",
                 " ", "with", " ", "walking", " ", "arcs"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                     "**", "**", "**", "**", "**", "**", "**", "**"}], "**"}],
                     "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
               "*******)"}], "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "add", " ", "quadrangle", " ", "check", " ", "if", " ", 
                "there", " ", "are", " ", "too", " ", "many", " ", "walking", 
                " ", "arcs"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                     "**", "**", "**", "**", "**", "**", "**", "**"}], "**"}],
                     "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                "**"}], "*****)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"arcs", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{"arcs", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"a", "\[DirectedEdge]", "b"}], ",", 
                    RowBox[{"b", "\[DirectedEdge]", "a"}]}], "}"}]}], "]"}]}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"atype", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{"atype", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"acost", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{"acost", ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "t"}], "}"}]}], "]"}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "stops", "]"}]}], "}"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Nodes: \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"Length", "[", "ncoords", "]"}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Arcs: \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"Length", "[", "arcs", "]"}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Display", " ", "map", " ", "for", " ", "review"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"as", "=", 
        RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "pick", " ", "subset", " ", "of", " ", "arcs", " ", "that", " ", 
           "are", " ", "not", " ", "boarding", " ", "or", " ", "alighting"}], 
          ",", " ", 
          RowBox[{
          "since", " ", "otherwise", " ", "Mathematica", " ", "will", " ", 
           "have", " ", "trouble", " ", "drawing", " ", "things"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"atype", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", "1"}], "&&", 
            RowBox[{
             RowBox[{"atype", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", "2"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"as", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"as", ",", 
               RowBox[{"arcs", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "arcs", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "ncoords", "]"}]}], "}"}]}], "]"}], ",", 
          "as", ",", 
          RowBox[{"VertexCoordinates", "\[Rule]", "ncoords"}]}], "]"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.780839107164124*^9, 3.78083915348427*^9}, {
   3.7808529886701245`*^9, 3.7808530833436728`*^9}, {3.7808532037302055`*^9, 
   3.780853280910163*^9}, {3.780853317178815*^9, 3.7808533879777718`*^9}, {
   3.780853457168648*^9, 3.780853462433568*^9}, {3.78085356463711*^9, 
   3.780853633072615*^9}, {3.7808537304724464`*^9, 3.7808537380353975`*^9}, {
   3.7808538342490177`*^9, 3.7808538483777637`*^9}, {3.7808539124666233`*^9, 
   3.7808540575509076`*^9}, {3.7808542572469563`*^9, 
   3.7808543096302524`*^9}, {3.780854347862917*^9, 3.780854474240201*^9}, {
   3.7808545115873165`*^9, 3.780854676307379*^9}, {3.7808548632547855`*^9, 
   3.780855014481696*^9}, {3.7808550843718786`*^9, 3.7808552769123116`*^9}, {
   3.7808553967967243`*^9, 3.780855413977216*^9}, {3.7808555774179783`*^9, 
   3.7808557301665*^9}, {3.780855790665188*^9, 3.7808557935957537`*^9}, {
   3.780855835671893*^9, 3.7808558645704603`*^9}, {3.7808559930741315`*^9, 
   3.7808560790618153`*^9}, {3.780856323980884*^9, 3.7808563246606684`*^9}, 
   3.780856465052816*^9, {3.780856548882295*^9, 3.780856584267805*^9}, {
   3.780856615003056*^9, 3.780856901788807*^9}, {3.7808603019389634`*^9, 
   3.780860317156128*^9}, {3.78086035170458*^9, 3.78086038148343*^9}, {
   3.780860428991516*^9, 3.780860435457353*^9}, {3.7808604658149304`*^9, 
   3.78086050952096*^9}, {3.780860556421887*^9, 3.7808606160477905`*^9}, {
   3.7808606648544044`*^9, 3.780860710540225*^9}, {3.780860907399638*^9, 
   3.780860960083744*^9}, {3.7808609923943844`*^9, 3.780861002268216*^9}, {
   3.7808614083266163`*^9, 3.780861415731242*^9}, {3.7808674488267255`*^9, 
   3.7808674560002527`*^9}, {3.780867493857787*^9, 3.7808676378360806`*^9}, {
   3.7808677987501717`*^9, 3.7808678212702827`*^9}, {3.780867862227934*^9, 
   3.780867949501*^9}, {3.780868092313163*^9, 3.7808681093402576`*^9}, {
   3.780868186979131*^9, 3.780868217424326*^9}, {3.7808682729425497`*^9, 
   3.7808682735362525`*^9}, {3.780868358326125*^9, 3.780868420683856*^9}, {
   3.7808684585427685`*^9, 3.780868460139039*^9}, {3.7808687409260263`*^9, 
   3.7808687757503734`*^9}, {3.780868880625744*^9, 3.780868892893831*^9}, {
   3.780870935900695*^9, 3.7808710452466536`*^9}, {3.7809379375807977`*^9, 
   3.780937944736589*^9}, {3.7809381246671114`*^9, 3.780938187174043*^9}, {
   3.7809382591772165`*^9, 3.780938273790532*^9}, {3.7809383131739025`*^9, 
   3.780938356850897*^9}, {3.780939093467409*^9, 3.780939156819725*^9}, {
   3.7809392695848837`*^9, 3.7809393582053614`*^9}, {3.780939412961711*^9, 
   3.7809394631992383`*^9}, {3.780939558499921*^9, 3.780939642310735*^9}, {
   3.780939687843705*^9, 3.780939845176283*^9}, {3.780939888064414*^9, 
   3.780939928888777*^9}, {3.780939960397353*^9, 3.780940042330708*^9}, {
   3.780940166953786*^9, 3.780940206268397*^9}, {3.7809403054776125`*^9, 
   3.780940337977317*^9}, {3.780940441724405*^9, 3.7809407261527357`*^9}, {
   3.780940757703644*^9, 3.7809408016025276`*^9}, {3.7809409322198887`*^9, 
   3.7809409545637765`*^9}, {3.7809410004309034`*^9, 3.780941042994712*^9}, {
   3.780941082960945*^9, 3.7809410842868834`*^9}, {3.7809411692697725`*^9, 
   3.7809412842611666`*^9}, {3.7809416744128065`*^9, 3.780941696531839*^9}, {
   3.780941779338462*^9, 3.780941917628172*^9}, {3.78094200829214*^9, 
   3.780942129527347*^9}, {3.780942580807846*^9, 3.7809425990240946`*^9}, {
   3.7809426328270593`*^9, 3.7809426707548046`*^9}, {3.7809427052657795`*^9, 
   3.7809428876126966`*^9}, {3.7809429489153614`*^9, 3.780943001438075*^9}, {
   3.780943060075363*^9, 3.780943133199129*^9}, {3.7809431653992753`*^9, 
   3.7809433315531816`*^9}, {3.780943537733862*^9, 3.7809435634317427`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Dimensions (mi): 1.2 \[Times] 1.6\"\>"], "Print",
 CellChangeTimes->{3.7809433357742405`*^9, 3.780943401428094*^9, 
  3.7809434677513113`*^9, 3.7809435646583505`*^9}],

Cell[BoxData["\<\"Lines: 14\"\>"], "Print",
 CellChangeTimes->{3.7809433357742405`*^9, 3.780943401428094*^9, 
  3.7809434677513113`*^9, 3.7809435646643476`*^9}],

Cell[BoxData["\<\"Stops: 140\"\>"], "Print",
 CellChangeTimes->{3.7809433357742405`*^9, 3.780943401428094*^9, 
  3.7809434677513113`*^9, 3.7809435646843424`*^9}],

Cell[BoxData["\<\"Nodes: 328\"\>"], "Print",
 CellChangeTimes->{3.7809433357742405`*^9, 3.780943401428094*^9, 
  3.7809434677513113`*^9, 3.780943564858286*^9}],

Cell[BoxData["\<\"Arcs: 1054\"\>"], "Print",
 CellChangeTimes->{3.7809433357742405`*^9, 3.780943401428094*^9, 
  3.7809434677513113`*^9, 3.7809435648642845`*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJwl1Gl4CAQcBvDNDtvMNjObbdjBNjY72IltdtikS0lJES3SuXVIukMHRRei
O92IkE5Hjhw5KtFdjihSqXSQDv32+PB7/9/f53n/aQ1NgxoDAwICThLNtwVB
BBNCKC0JI5wIWhFJa6KIJoY2xNKWONoRTwLtSSSJZDrQkU6kkEoa6XSmCxlk
kkVXupFNDt3JJY98CuhBTwopopgSSimjF73pQzkVVNKXKqqpoZZ+1FFP/+Z+
GMDJnMKpnMbpDOQMzmQQZzGYszmHIZzLUM7jfIYxnAsYwUgupIGLGMVoLmYM
l3Apl3E5V3AljTRxFVdzDdcylusYx/WM5wZu5CZu5hZu5TZuZwITmcQd3Mld
3M1kpnAP9zKVadzH/TzAgzzEdGYwk4eZxWwe4VEe43Ge4Eme4mnm8AzP8hzP
8wIv8hJzmcd8XmYBC3mFRSxmCa+ylNd4nTd4k7d4m2UsZwUreYdVrGYNa3mX
daxnAxt5j01sZgtbeZ8P+JBtfMR2dvAxn/Apn/E5X/AlX/E1O9nFbvbwDXvZ
x7d8x34O8D0H+YEf+YlD/Mwv/MphfuN3/uBPjnCUvzjG3/zDv/zHcZrHH0gL
gggmhFBaEkY4EbQiktZEEU0MbYilLXG0I54E2pNIEsl0oCOdSCGVNNLpTBcy
yCSLrnQjmxy6k0se+RTQg54UUkQxJZRSRi9604dyKqikL1VUU0Mt/aijnv6B
J/7j/44VjAo=
      "], {CompressedData["
1:eJxN12WAEFUUhuFLLt3d3Q3LsnQtS3d3d3d3h12ILWIjJmIrYitiIzZit4gt
3iPv55wfD7z3nh87AzN3oPL4Of1nZw0h7Iu/2O+7ovOgPh/qC6C+EOqLoL4Y
6kugvhTqy6C+HOoroN4N9ZXYzT3scnt7oqugvhrqa6C+FurroL4e6hugvhHq
vVDfhL1c0x63ty+6GepboL4V6tugvh3qO6C+E+r9UN+F/VzDPrd3ILob6nug
vhfq+6C+H+oHoD4I9YM4yM884PYORQ9B/TDUj0D9KNSPQf041E9A/STUT0F9
GOqncZhrPOT2jkTPQP0s1M9B/TzUL0D9ItQvQf0y1K9AfRTqV3GUazzi9o5F
r0H9OtRvQP0m1G9B/TbU70B9HOp3cZxrOOb2TkTvQf0+1B9A/SHUH0H9MdSf
QH0S6k9xkms44fZORZ9B/TnUX0D9JdRfQf011N9A/S3U30H9PdQ/QP0j1D9B
/TPUp6H+Bae551Nu70z0K9S/Qf071H9A/SfUf0H9N9T/QH0W6pDlHHUWqLNC
nQ3q7FDngDonrM9w39pLiXJBnRvqPFDnhTof1PmhLgB1QagLQV0Y6iJQF4W6
GNTFoS6B4txjitsrGZWCujTUZaAuC3U5qMtDXQHqilBXgroy1FWgrgp1Nair
Q10D6ppQ10JN/gxKur3aUR2o60JdD+r6UDeAuiHUjaBuDHUTqJtC3QzqVKib
Q50GdQukcY+13V561BLqVlC3hroN1G2hbgd1e6g7QN0R6k5Qd4Y6A+ouUGdC
3RWZ3GO622scz4rcsG4SFUYTNHazpm5u3SwqjWZo6mapbm7dPKqM5kh1szQ3
t24R1UYLpLlZejj3/5CsdMsoD1oi3c1aRUVg3Toqg9Zo5WZtoipogzqwbhtl
Q1vkhXU7t7ZuHxVFe7Rzsw5RVXRAXVh3jLKjI/LBupNbd0IxWHd2684oB+uM
KAcykB/WXdzaOjMqjkx0cbOubt4V5WHdLaoO6+5RfXRHNzfrEeVEDxSAdU+3
tu4VlUAv9HSz3lEF9EYNWPdxa+u+UQP0RR836xcVhHX/qCT6o5+bDYhqwnpg
1BADMcDNBkWFMAilYD3YrQejEqyHuPUQ1IL1ULceikawHhb+/+fMfz08JO/f
cAxzsxEheT9GQM+v9Ui3Hgk9f9aj3Np6dEj+/kdjlJuNcXPrsVEKxmKMm41z
83HIBevxITkfrSeE5HyZgPFuNjEk75/1pJC8L5Mw0c0mu7n1lJA8v1Mw2c2m
uvlU6HmznubW1tND8rxMxzQ3mxGS88h6ZkjOh5mY4Waz3Nx6dkje79mY5WZz
3Nx6bkjex7mY42bz3Nx6fkjen/mY52YLQvJ9WQCd59YL3XohysJ6kVtbLw7J
ebgYi9xsiZtbLw3JebYUS9xsmZtbLw/JebMcy9xshZtbr4wqYiVWuNmqkHwv
V0HfK+vVbm29JiTflzVY7WZr3dx6XVQN67DWzda7ufWGkJznG7DezTaG5Lzb
CJ031ptC8n3dBH3/rDe7tfWWqB62YLObbXXzrdD3xXqbW2+Dznfr7W69HTqf
rXe4tfXOkJyXO7HDzf4F+BQvFQ==
       "], Null}, {VertexCoordinates -> CompressedData["
1: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

        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
epZe8tSXc0FfG6uep3l0rn2ytIulyznX3xfT6GXVd4a4evE+2z6WLvE3fepX
Pc6q5zt+9l3yVf3MqtcJx9M6D5a0seq1s5bXTdVZXSzNyFz0q9fkC6t+3y7o
1TtE1p3/rd9m459qByJHWPVbhLO0iUd5nFW/Ny5uYIgemWBpdn5h54l/1ff/
T///R71n79f/qv/s/fVf/YC9H7Lz2L/6BTs/sfPMv/oJO3+w8wB7v2Hv1+y8
yN6P2HnuX/2Jnb/YeYidT9j7GTs/sPMre79j50v2/sfOf+z9kJ3P2HmJnV/Y
+Zm9n7Lz7b/6KzuPsvdbdl5k57d/9WN23mLnffZ+zc7j/+rf7PzMzrPs/Z2d
N//V79n5kH0+YZ8X/sUH7HzPztvs/PsvnmDnVfZ5iX1+YecP9vmCnUfY+Z+d
T9j5nJ1X2PmZvf7+i2f+NV+y8w77fWXnH/b78y8eYj+v/+Ij9vPBzkv/mmf/
xVP/13n3X/zFXi/+xWPs95Odz9jvw7947f/vfP0v3mOvv//iP/Z6+C8eZK8/
/+LD/+t8z86T7P2WnS/Z+92/eJO9//yLP9n7wb94lL0e/4tP/69/f2DnWXb+
+BffsvPAv3iXvT//i3//r3/vYOfl/+vfP9j5mp1n/sXb7LzBzt/s/Zydx9n7
JTufs/erf/E6e/9YlKVs++ueNwouuJz6Uq2PhnvZZyV8A2Aqave7NMUU7/S3
JjTIB4PD6lvblkwL/BpIFWn9HYrVy8JOfppljSXJgb0/K8Ng+qTX4cXdc1hV
E/5o6P4N1ISrxx7wsENuuIePYn4kAvYs6HSJskdezUOTB2lRqNkwYH171B7c
HmXzbvo9YelZMW0/S91SWOuNUrOvWdk+ZcW75/42r8c0lbVfsriDXNrxZ+D/
68dVPfzGpoNpGD77//r96mHbRtueDuW/+XSWv6CIr85AwN98HUKcb6raUHDp
VFbFyjJ/VD0OtJvSp6DQadFT/eAgGKWrKvlrUCBz4xC9eUsoSgNfxrXupSBb
8JiYLeMqXL6etFy+g4KTV39M1KVch7CF20dFWQrieVdsGpaPhE9avI6KDAWo
KRiXWhGFOqGhpztJfSiMV2xy5hbSrpZ/WalMcvjOeUm2XU/wmI9Y82s/BRJe
67rCP6fgZKdiWIE6BZ80e51pJU/x2+n823NHyL60u8+1KCsVzRYbLo+bUMB4
fagl58EzaG04LaFvS/Yz689FW6+nYdQli+eqLwVnpTWJ+x7p2K+gsTAogoKc
lYJb/YwzcEOOyilPqUCBc0VMhN5pImue21DItQrI1fX4cjMtiEUuAfo9uuTv
4flSod42hPzg1Fp3wQokWelxiavbEz/T0l6Y1JfDWiFnWlPGifA6HlVCRJdD
Ttn5U+hxZ+KngqhzsX45CrKIaGFRF6JOdwvnNeFyCHcNrQ296EK8vNw6uC2u
GEmHL6/y8HEnPFqrq/qNitHP/7oqxN+d6I3b6pWxohjz3HPvbRN3J7K/PjyZ
2loEud7viq8t3QjxZ8+qOBOKkPSDUe+n5kqsWB7bTjtdBP6pyt5tFGdiY+Zt
U/21pOZyvuTe6EhQlzXkJfQWQpdHR8XI1Ja4uzxxPcWdBo++V+IWFsGIUC4O
9baioa115qtX2xUseUeZp2FMg2aipdnYuRuwmVLvUjpCw7pW2ZGS4JsYjZvm
OqNBg6Xs/BPjRrfx3FhTKOsA2VelP3wxlI9BlqSd525lkktrYuJUlt7Fk/xL
238q0SDf/kebc/IeBnu/0ev30HD4Tb/Wt6cvSQ6sfk/dS/Yxp09fxc1eoYs3
YOUk+fzm/A/fxpdnQiE+RkrvIA21mQd9xmoy4bTjVEbfYbLPpansyryUhc88
j7Y91qfBuCnieoViNjKueI6FmdNgz2nfXPE1G6gK6I50psG3LeutZvxrfC/5
tPDG6WYMT3Fy1f2xgUSJGCMtrBkK4n0il284oSU+Z6f9W1KvmDfL8I4rig/c
8M7ubYbu6XzzyCUesDgu0HFOsAVeh4qG38z2QkCzgIHLvhZEeIbrPrbxxvBJ
avILxxbovr9XegU+OJI1bboggdTpqmn0Sz7o8Bi/cnZTO0vjg5RagXE7a/1z
3a6b01faWfGqGrp45rxtZ+1n32fu/L63Hep//Ry/viuTW7ADcn/98lh95iwB
qf/ms+vs6vYu2w7U/M1X4Me+yTUrSQ4wHeJbIngR96WMqtYJkfXa8sLBMy9C
sVB4QlSJn45Tr5bvvHTmGqQSQs4689ARfVZM4GZkJGS3hQUUzqVjq3nNAYbX
LdRupcfKzaajxPj0bX7LO/D77rezgJvs041zFx0+HoePkV7bnEm9FeXdXSr3
kC5bNb2YfP7q3X0+RNZLHN/PDO0ldeXDPNNKp1cY145aQ5tPh/PeivvaMpnQ
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
2as+VWJN/LHDOUcmsT77nvOazVUYi1WPm9KZxHOFHRJfr1ZheS19U6X2JIw2
csmp9VchhLPq/UZSyxINh36pfkD6B+sHoqTet5Typyb5A/TeCLcdIOOZOhdn
T1nXgoswkiglddwGy5vNd2qhdPz1xYajk3i1l/oyqqwW0R90j3mSfiS1/tgs
mKhFmZFp0mPSb1uLoYK4ODnPiOevMjechNemhtoi3U84qp8q+8xkEndWy2z7
6PcJRYWFXb6mpL7b+EI69RM0DvDHWmtNgjn4qmeRLQU6qS+HN6lO4ndF8bNS
fQoelx8paNw7ie8q8ZMaahR0Lvx1+pz8JJI8HoU+2kXy4QWXHQObJ3HTKd2l
czMFU5L3XhpLTkJidJUwpyQFij/bDxeLTcK4S3HNwrUU3I93uyIhPAle6gm/
WSTPBbuX7nZMm8Az8z2iPCT/JT8Xia15OAHVBM6ZEVLrt666u+PeBNwl8jrK
REn+XBVb9OD2BFIvpXmHilNQ8dkvTPT6BNzy9D7IbqLg+cDBc08uTWDL5oG1
70h/wfG6FDX/Cew2TOQV06CgZ+OeOVxeEzinusrphDEFBd8ED04c0UD+9Exi
ogQNq3348kre6mFB4gMGx3walJnpCccsT8N5/H790GATXrylHig6bo7IUe04
n49NcLrwdEGI8lk8/rEsJftFE4blX1vtdLPG7KAdiS9vNiGp91Ns2JANpiIU
VQPcmsCfF590P+Mcur9e99mm14TLTgI1ZgJOeHrjvW3I0waYWml0Ll3iBMnt
c9bIhjVAbvRYRbuLIyiLr2t12ZF6bQqfJrcDBC/d6UjXbkDBadoutWZb/HhX
8v6xXAOcaCezVv60Ro+xf0rb4gZwUKfGA89YQq7IWd1ioh7DUwaet5aegStj
KZ9WUz3Ufaf0Lrx0JqoztAK3L2jG20vBv2NF3IiMxtQt3ZLNkIt5/itN0oPo
fSVS9ke1GTUcF5wDGj2JfldhW3cLcn1xw4slG7wJow/3hHYGNcNJso92f4UP
ISdXc1PuQTNWK/roxmT4ECumKy7rFDZDfReHwP0uH2LuYeewwM5mJO1farVt
4XlCJKkxMDa2FfOuSSnKdfgQLatrhavetkI40bls91Ef4mymZeXXxlZ0BnQE
PLX0JpbKem5kTLaiYHrv+dkiXoRcr3VnxtI21Hw9KLDEyYMosPr9cuP2NvyI
OO1Wa+1GHF6/Iurw0TYYzFMTcp7tQhzxu5TG5dSGwBMXviaHULCx4b2r+Opm
3KRvz4tyoSD1utP6hUrNkPD54mBjRoHL5RHtMybNCO6hRG0+QcGyR8nf+c+T
7yNYmnNQkwKnI3oT8+KaUTW3lPqQnKMeWM0elc9pJs/ZZpiCggC7LM/LTc04
6XiwV0yJguJ3Jr8Gvjej6IrOu7J9FMxnPrS5n9mKbOlinTDy+Qv6cnpcn1vR
2hRXcUydgl2vvZfpjLbCqp2ms1KXgt8/tCTcBdrQ6r1Rg25E9nFB00Vmcm3Y
8/besURrCs6ZKwVx67RB8pD1YQ1vCmrmrz6jZt+Gq6vyDBrDKdhc9zh3RVgb
pqwG7KUqabD9YVmUu5CG7JSI1bRPNLTx9JrlD5Hn0yvAXIhGA7Pxy95zNU0I
MZ0V0tpGw4E6O/VPL5twK/jiS6kuGgw0ExPnRTWhUGDDxI9uGpyKBC+Ikef9
8CahvVp0GsRmcW3ZcKIJxtlT+mvJ34MWOfAqyDfhw90+V5lyGk7eF7U/HdiA
Y4brFl8qocFo9u+SELMGTESeKbUooEGO72Rr/YEGvNh5f4b6jgbjjdHtZyQa
sPxAlUBuJnlvh4I+757bgFTB3A17ntGgItp6y51Rj6czBTq692lYMTe+eHVV
PSquPjGfvk1Di19MnvbzegiU5TMOrCS/6xzRwNFUGmSd1CTTFZuhZPd6vVsW
DdMnuF9eNGjGZwfv6cu5NMSI9LW+8mjG9lQvyBTTYFizt3Lj7WYcP333l2EF
DUUblJxbMpshJjG8hq+KhoUyOcnPPzXjQopfgMZHGrT4W9dEjzTD0PpG6dxq
GjhuSu+98LiVpZU9Dr+3KG1lrQ/zqvim0NPKijdWWxHVz9XG2i8rVOzimTVt
LD/aWtwZkWhj+V25ldhpdbKNlc+eVjX3Gp82Vr5Hpe+Myxyno+q39mEm+f2T
xC/1zjOmY+4jg2mxribs1pnZVm9Kx+K3N6qzsprwSXSz83VLOt7mJPBWhDZB
sFCkdosNHUe29x9xM2oCt9hRmTxbOvq5yl3qZJpQoC7DKWtPB+fFVFfumUYE
NLxwu0RqVz5hd9HaRiyc47jt2jk6ug2XHtmtXo9FuQ0CVDLerPiYAEORelRu
Tf341YqOwsVp82K+1kHW0S940oIOL+9kjsVEHdyi1Mf7SX+E/32T7sg6XOM5
FVxG+t9t8KBN3LIO9z9NK908Qe4X8ZBzRKEOAynXanS06Xh48+eYOW8ddt2Q
qrkoTEdj3jH9fZbNeH0xQuiEAB13BfO0dkU2w0/7g4ACDx3PVVeN1eU145OK
n6nsHDpogSJdPwfI77g9+c9eLjpilvKaXBNugf7DbqWzM90QqG+1cjvYgu6p
lZ+f/unGpgOTDVFuLQg45Vk4n9RbZpsb1TxoQeOBy2f4fncj8Jj68bty7Uis
Lp0XTuoVNs1htFPtEPZYLiYx3Q3R6DNC0+HtmJWl9YrGQccKy67739614/BP
HamUWXR82pD/K7y/HUKum5Svz6fDybFxdeHSDuDJKcErfHQs0Lx02HF/BxYt
C152W4iOX4s9eP0cOqD/teF8MRl/36xfX+aG0UA/UutsM9yNkWsFreIBNFzk
mLhf09UN6Yfhxx560PBZtvAF5+dudAgvGLzuQN6XkkKz2SXdmDPrvF2/FQ0m
Rqfu9GR1460OvTzLjAbYxR5IedQNt55Mge+naBhILbIzjO5GZ8P3gJcmNFh7
1uk/yutC5j0Rg5mDNEhf2LLocEYXdrtIqm4jtcW8JKvxhC6Y762V6iK1UeN2
n4c3uuC9XDx+ngZZRzyb9c4GdGF6RbxBihYND5aMcR9w7sL7x8MK+UdosLzK
4XXArAsLHugoqhmQuuXELadjXXjVIX0BpjQslvK0T3Eiz8dS1T5Zso6t9du9
8KQ/HZvOd4S/HKBhvtPyWrXrdBT5PbAoG6VB7yhP3+l7dIjn3H9k85OGneny
p+LT6DjgUHLmzjQNgzT5LePv6Vi0ffllLa5m8Bu7aZ6qpMP+zeMvl2aR/fRD
yJXaZjrUPd9uVJ3dDJ5Fm+6oZvew9MYApYa3JT2s9bqcvsy1dT2seLM3+xb5
0HtY+/VefrLrzWgP1v71s9U2Vqeas5flV+SU55J3/L2sfDZk7s50EOtl5ava
VZuekcpAt2CwX+xeGm5F7VY++ZyBe+8k+HLFaJAREn58NJOBuW+VFdw4aeCu
Ng8Nf82AydlrXz53N+F+wZpf83IYGFKS3POtuAnOfH6Xy94x8N6gJvjTwyZs
FkuRLHnPQNte0Y3RIU1QKfHaz5nLwKfAy+maZ5vQn0CT5yPXp66SD/jyrAFm
c9c+DSPjrZDeeTYhvAGJ68sK1N4yMPYGO+zsG3DozrW9KuT+ty5SLM1I/iEW
vdK9SPozTbQ0iJJtgOgj6XjuFwyIc7VoCgg0QOpk1hbqMwYyYg0PD43W48iF
mMimxww8PFexc099PS66q+zV8WbgQ+XdKKZ5M144SBhbuTCQQ8jvESLvf5rF
79N37BiYODoZTMtvhlk7NbfbioHTUa4nVn1rxpBstaKWBQN3NKPVKStacGBz
+8/6Mww80/2Qm6/ZAqEtaxwDTRmoSDvX0+3dgrw1uyx0SL2hbnnD8qctuLi+
0OSmJQNvLYZa7VTaEbJKh3nxLPl8k+LDONd2PGztjrhtzUCD0cqjyQ/I+iCi
M5diy0DPQAivbW07vkWa269wIt9nUZN4w0w7Vu5buP2qOwNJ148vp2zqwIBa
vfhiXwbyNhjkSBl3QM3t06nnQQwQuLC+ObQDAcPV5U9PMnBfyZ8STN5//fCI
paI6DGjoSh/XvEj2UTlKn6EyA7pn3GhePjR82+j5y3YLAydMrKaWuNFQtu+C
pPFaBqIGb/mvdaTBpcFOX06QATEOmt5DWxpS6NsujXOTfhrvRcbbkH24uv7t
i/F+mIY+MF9I6nn3njO7Rfsx++kFJ09yvfZyhmwSbz++9q2WPW1Hg6Ri4yWr
6T4YBEkfySfrjUbfve/7mH3IiF/rGOVCw/UmAR+Fzj5c91+r0upJcoGKzcSx
2j6k39z0/PYFGqYsJhXvFfUh9Q5P9vtLNPCMD3GszOqDyJqHFzUiaLjMiJNy
rGHgeOEqtXUtZH9XOl0u3sHAIsmcr496aPDfsjd80RADyRt8S959paFKUPbB
+j8MzLI8P/vUGA3pDkbLzRcOYJ1IQmHYDxrO3DX6+m7FAJgdo33Kv2m4JBoz
W2LjALTNAw6eJ+/r4+tPVWIUB7BB/GbYrhkaAqp1jy5cOsjSSfvMIv3XDbLW
lxYlpjK2DbLi+TAT/fYdGGTtZ6RZOe53dJDl54lM3oLoM4MsvzfE7lYHOA2y
8klwO+2ww3+QlW+dUra32Jxh2B2sXCsjRMPI/MumxfOGwR1lVnDuRxNS7V4N
L+AZRqbhri1yzU0IEnxRM75wGE7zNxpff9+Eu8ru7f6LhvGSZ9eZO/FN5Pwg
IveMbxgd7z7EnPRrQuVBqyUe/MOY8e+6MHayCQ33FAU7ST0aPC/dVqkJUpZJ
3AuXDOOQguE5rYAG+GoptC8hde6GgrAc0wYIFendyBUcxuLrq45u3tcARbrK
IW5SZ+95dC5vTQOMvmf6MwSGYRrEdPHmasArP9/PjmT8iJA/39zo9Zg2373+
DunvnYnSrqKSejQkfbhhSvq/7fEi0PVxPSLdbR9o5TKhK70vYSPZv36OKgnf
S2ciTYI/po3sV+HHIivzE5jQfHY79Jc+DXf3zLn67gYTzAaRgCtHyfcf8G5n
bAATjPsc769q08DpzUE1d2Zi3tbG25xkPwretni/uBkTL7W/RzA1aai5lvuk
8ygTRjUJ2icO0cCldTT+8PkhnJIce3zUmIbqzfE/BOyGsKK/Z0D2JA23ee11
v5gMQdEhPC7I9H/6347Ez4eH8HL3o7xDlmT9D0ys7VYagvlpS/+Q/7k/J/YX
iMoNweWOtNwmVxr6hG2kr64Zgu+cp2pKvmT/201/sU1wCPO3xFllkvdB0iYr
uHbZMCr6Dg1Ikxz9PEqobqPYMC4e/nIjjeRH8Wsh8vfXD2OZ7lOrQpLLNS5c
2Lfpf/7/Y1hKigU5N+RsXOJXuWMYMcqVFjdraBDcf+us595hmM9ZHaZWR553
rm2uMqrD5JyTzghsoOH1+/eLv2gN454GsVm5kYZ1JjeWr373n96+VDiHVvjf
+vL616XXKf/FW/NV/rli7X/7RcZWDTQ1/efnzdXSCYvO//xuDN5u0Nz3Xz6Z
GdFPtjP/y/dFHldNp9IYLn0t5+DfTMOVJ+3nc/aNIV9NTFNMgOT1u5cOKKiM
weXCNNezsSZM95ekGR8cA+e35rsl9U2Y2+/rulZ9DGlbciv83jShpO3c1TCN
MXxtLPDoj2lCzrniFdGaY4iVDywU8mnCL7FXV/YdGkMkRa9fxLgJO78bzBY6
OoZu771JJg8bsJFycuAMqbX43X+phzRAWurKcm1S8+1wGZE924DIu9EJzUfG
UALqoLhaA6yre/Pmkton8KTWTqkGfBQ+Ol6vM4ZnnO5mvvMbsOhK/6Sq9hgE
9w6enj1YD/n3vq8MtMZw+8hZ7R5yHkq+NEebsnQMbeNN6avJep6Ruu+J4aIx
bHww7/kXsj5fehacWzVnDKffa1evPEOD3b59cyRnRnHWS3Z/pSENcy3v8Nh/
H8WugWsnx47REM395HQycxTrGkTuxOrQsC2mOeFj3yjW6qhfLCDvA01Fxm6s
YxT1B4o/2pDnv75UbqbWaZTsK3SnTQdo6LhiyzlhPYrjNVEMQ1Kvkz/XKXJm
FLd8JNzmq5K8WXBiv7rhKGYrCgnsVqdBM7qnIvDIKGTEtFu/kvEf345fVKUx
ii0texeJkn609y9/uHH/KGYWBv8pMaLhT5s+7yPFUaTvF15DN6ehuHiuhKDv
JD4w7XxjR5vQzX1aJdV/EhlXfx26UU7OM8y6nvcXJ6F0yWxZ190mdNTt23Ew
ZBK0m9bvUxyb8DnvbpZa6CQWEElnOQ40wdSieStxeRIHZhhXuISaIKvwrPbZ
lUl0uJVXUPobyb44MYv36iR25sQxnN6T+rmYWETYJHQ0yqzFFOth63si3ZLU
uYITKoUL61GQF/P8Obl+zT3uHK+OOqw8lRrpQMark06/ZfqqDid+pAokk/sr
bZwVFhVShy6VVGiT/u5oJq+VMawDddYcP2fS/6uWH49UNtWBURFzfhGZn21X
tuB3zjqMR2lRNU+S8eTlAmXVmuGYorQqwXASf47aV3K4NiPLeYmJt94kog9+
5PZJbMY8Tw3T9mOkbjaoD6hqhsCRsuyPRyZx0HzPnamfzXBumrx1SHcSXTFx
JlWSLdiwUYB+QmcSe997zWo50QL7yWtbhrQnIRpRrcET3IIhlbkP1xyexOvQ
ww4aAu24mXxITp3UPC83//BHO9RLgum/Sc1bNWFz374dc+yzj4KM967ovOvN
u+14eWwifxG5/4m3+7t2Utrhvb576TnSX+KfiDSPSXI95/5RHdL/myBnnu3i
HVAdaojPJ/Pbdjwi4IROB5SvlMTVn1HD7xj1CHNyLit4V7OhaPA4/GXPnc8c
InX+slO670xg6dUw+rGjGxE/c3l/hZ0BY6arPL+mG8Nf6uHJYQFl4Te9YYXd
4OhblCKVY4msuYu08Kobumm6hguyz0KLhza/+0E3Vmds2RI6dhZBJ/p2+kV1
Q/mPT/KyjZY4nXxvVWdOF2q2hD9YkGaB7iCFZt/ULhQMKHMRjubI6s/Durtd
kGu2mDfscQZZ53ZbdoR1QXmfu1xkyEmILeM98ca3C6aL53OXPtVDoETQvGx7
8vnhgJ1CeVo4XRpp1nWqCxyXpKy3Jm8F54br0qq6XfA6VJ38OcqJmDJZ9MjI
kZzbZ/eUhjS7EG5m5e5v/OgYviFtLVXhRkjHR/Gqh9Mh7DOkcsfYgzgQW1vF
fZeOgM8vLtCjPAm9r0enup7SEfHw9qbjTl4En+WlCtpbOjrvtVedHfYiSowz
jLrLSS219XK1oDcx9kOMOtpAR0W2xuJKLy8icX7iwYFnPah4FDPqBi9igcPc
lJ/vemAwHjoQ+NSTiIrP5J+h9CBFVr9I840H4TK76e5IUw+8AnXop2zcidCb
dY4VfT24bN/MFVzgSiQIuRT7TPZA6oZLenaeM7leiD4zqxdJB63MNUocCMZp
xg4dwV74fLBYfW7zRQyX7pl36AQdcpmzUiVehWL3TScVOxM65v7Pf83UvIaN
dfu/nDejw+3YVMtd70hkKXPpe1jRcfnkiu2jx28hXF30oYEtHTqEeInNjjvo
aW0JWO1Ax7HJZ/7ay+NgN1OqVkW+3+MmI0cHpuOhqxP1y4icO3XPRCls9HvJ
0jXvLDbdlH/FWh9ZcdAkjPmKFY+7S1356ZNM1n6XxY80XDiVxfKzjnjSliiY
zfI7s4ZP+H5ZNiuf16sOXBH2fM3KV9pToHn/GAUm1FfXls6iY814wjuFOVR0
Za77OjTRDYKv/oiTEBWfQ3LFb/Z1o+tM4uxOcSqknztkz6V1Q9jNust/MxWh
ifJ7DajduHCrOk5DngrTxj924e+7sU3H7LbCbirEf7vPTU/rxhoj/V6N/4eo
646n8n3/oiQklBJlRVRkNEh0IaOkkL3KKnuvjLIiSiISSSGFhr1SPEi27Jl1
zrGOdY51EOl3f16v3+t8/3y/nvu5xn2/r+t+X8VDvgkqtqYHa1LwMGkhFiur
2gR7LS4LdDXhoNOU96+jShOQv5vSTX3DQeHtuu0qxSaYoSPV7/iCA1Nibs1/
9hQyyxRF3+BAzmj1eL9kE7CcO3XB5RkOZEoXyzKEmgA4ZGy7gnBQKbie/x7F
7zsk5GXhjgMLIvMyYSdar+w2z2+Ng5MvTN6XKDWA+o5d988fIYD2ojZpcroe
rnPcwHccIEDLbFzfz6f1cNxqqz2UhQDfvQdvRkrWw9HKsp1aewjgIJLz16a7
DvqeMD2/sIsAB9+wbSV618Gp8chxJVpUL1m/+3U46+Da17sVTjTo/OK7rdu/
/gQLnK3Ut3940JEQmVQProLj7OYi06j/PM/+e7BaoApm2uTfGW7jgStUsaUj
AoPEi7dws2g90e/y7ZWWSlDIp1lJRfaHYmUFjNgrQUqsScGbngABKimxzkYV
UKFUFmLHRIC9YUUn0tO/g+NR32YfNgIUfmwQMl/4BseqhcNSOAkwyh5yasff
JqBruZk2aESAi2xHxuX0muFGYvjwpjkBsmo0gytymuHSoGEgE+KXN+vmzht7
WqBelZO8y5EAXyX/tZVZt8DbG1Ly04ivS/I0NfVVLbCGXzyc506ATmU3I+Wj
rRC4a2jMxJMAzxcHutZ8W8FKLzt+BmHDb3h2Q40OKi5jO9Se79dBXS/yoo2b
nNVBtafC3R6/1ttB9Td56uafzzs7oe7/42ntFJZbleykxvvwU/Xj4lud1HwK
PrLYdD3upOZb6YqxNc71Q9ahkmILtF/GNJoetlX9oBnpk/kL1UOK1lkBj7h+
OGRhkHED7X+2MuE73d1+sNmzPT/+Bw/6rw6dPCfTD1LS1/nj1/DgaTsVIcDY
D7m4rrO3UP04QxHf1O8+4CnK8FFewYOZ807tN1/6oC/7WYwawoLp/b7xvD2w
6riypbWFB0sJgY9Gi90gsldwxhXx4Yhg7IUrP7phIIhnxxfk3yK/09n/RTeY
h5wk0dERYIW4YMNi2w3YzKFyj90E6L0vy3jkYjf8u+NQvcFMAF4W+6VKlm44
kTKHPd+P+BzYbs1G6ALOmRetstzo/AUmM7VZBsH2ehbDp4sE+NviPFF+ahBU
g7x+Oyig9QUnXWKuDkLMDgM1b2UC3PVhSa6yGQSFt71T9WoEEBa7E3khfBDa
N6Z+3lJH/T/8jjgxYxBKTNmNLmgQYDBizKLixyDc5TGK0L9OAC4nurF3+EHQ
2cZ9LEa4bUF788nLISre1+Xp614yRF1v3EP6pNozRLVXc5qsTVkeovoLHVdV
cGEfpsZzNPuk41uJYWq8c9GTq543hkHl//NhuuByZsRhmJqv/YLlXu0rqI9O
SfUd68DDREWLnr8mAYruFsUsov5168Xq6zeoT66xWJg7fcBDjuVjhVJjAhiV
PqTLiEH3+Y1DcjX//fwwt7l5uh8eVDg6TlZYEGA1O+yBlzUehob/XflgRYCq
WIHAkzfwwPyR0SvAmgBxuTIvfknjIeLQI4diW3Tv+K2tx2yOAZ382+P3EH6a
F2UhOTEG0b5ML4QRj7V0u01+/xqDoHvsD2rR+y03DPhfl43BbM/Da1rI34dX
vCNB6WNwfWKSoRX1+euVs1kJUWOQWi5rKW+A9gXv7D/jPQZqYg7pGVoEIHKm
n4y0GAO+uvNWFxbx8Or5fHotKwFMq2y6q/F4iHrzRlgC8Ye7W1T8YDfide3T
g5oMaF+GTx2Dn3jIWyn6dgz1uz3nKnxVSvAwGOWzlov60QyulFUqEw+bxDD5
VdTv/nyR7NmbiIc0/R3xK4i/veLnK3EReGDoG3ueg7DzX13MqgAH1TkcIRto
vUBlQoPMOxxw7m656byDAH4pR+cPxePggKR4Xgqyb5O8ys8YhgNNzbTJcFSf
N0VxWpzeONCj9+8WQfw3k2PXuWaDA9gqmQlmJKC+Pj/7yRAHXodHxGJQ/1Yv
7vuhpI6DlO0z0tqoHsp07Dmy0PlwSmUUuMggPZJ1usgU9RmKtVuYhDwBcpOZ
fdWCCaAweXNRVpEAW/e3o2/HIF0U2hkbhfg13H+C/vVbpINGCC7HEP9id50c
WM5BdaLIQreNeFUSbrNkVonuBTo9KW7E1971e5IdregeIAzr+iGcd4EPVLLG
qbj9k+SDstJx6vpVUZeXAvXjVHsfjVzs/XrHqf4eF73ClUyMU+PpS4ha+7Uy
To0Xi7T//pVuAlb/P59fI6dNnNknqPlOulRGTeYS4UlwWs00Dg8bw7v26pYS
wcww+kFJCx6ujl2+V15BhEJzXQ7xUjwc/mC98+APIggPCqveTsPDiQH9MKt6
Itx7y7Wp8wTpAac559QmIgjmeStyeeFBtNa0t6mFCEWjdErYLTzUKdt44FqJ
wHNJ/oLWFTxwBP+KTO8hgrSz3sMFRhyMkgJKMxAWo48rv7cyBve5wzyfdxNB
74VowJ6RMTiQetXKsZMIppNJbDn1Y8BV49t4po0IFt4vSj3yx8A8SevZDPJf
vlf1pU0yqp9tj0txP4nASfaoTAgbg2OTHjSSGBFYFX8dYnEdQ3VMG+JuQISS
AabF3bzonOaEJfBXiHBk9sztrsOormJ+HzkoSwTeYz9e6nAQwHnHGuOhU0SI
J31SfoLu09Gth7/nuYlwll7pXQDiF017YMQ7ZiK0kSZDTqD6sceCeBX/ToPe
57XLcYiPlzqtvrfNT8MR9q3ecqQfYjTzyzX2T4PG1LVLDKifz2RJhPTQTYPY
BdtjC4jv4ml+ry1WpqBQjc3+OXo+1fVT/M/4FFiq0+WvIP7XGEwaZ/VMgbm3
//EDiP/M+lPiXnVT8ESiKIKE7OPPfM6xK50C3dh3x8P2Ij3q/xqLzpqCgsbN
sU4Uf87I3PAZtF98KaYSp6+i+/BMfsB0PxG22k7QkVD/fX/8mWLXFBHUtJlc
NrTR/c4QbDBLIcLawuN9/+nHLqvPv4TpZyDi6ut5HOozj2I+pwVyzIDT57qg
7+h+/cw2U04UnIGjznvzBlDfbAnd3DA9OwOMNxI6ZUwIkFmbvruDZZaK688X
qSrzzFLXz5Uu3s4Rm6XaSxtflKKXn6X6C4ajH5U0Zqnx/OLfV2VsMkuNt+TA
/EMV+1lqPj/t8o/9uTcLvP+f79Ci286/QyQYS9vfF/sI3QNP9xrs7SUBbxxL
56cUVJ+k2xXi7SSoOEhJPVCE8Jxfnk0zCbJ7+P9VNhHAQot7V1k9CaztOINT
cKhv/9gkCvwkwQvX4Nfp60j/bEZOZv8gQf/MibyqfeOQsrE9cB3hpCMHmWeO
j8MeX003zjoSPMzpua7nPAGnzU49H0C49KfJxYCwCdgryOFc2kCC/R5Ku+Je
T8BLI56ZPOSfJ3vk35PCCWB+Y3+5to0EPQWnYo2aJkAuUZaV1E0C7r5+mYWx
CVAoNVI8/ZsESrVqiXJrEyAyO3/sAZ4EHAw+ftJ7J+EzOf+GRhUJpL7Uyv1B
+jephr7WK58EP3ZUTl5H+tCG0+uwfToJSuT3xxkhPTy6GiAtFUeCjHShJF7E
Hz/zFr6+UBKk/6DBpyH+m6cR5yw8SSC/JjOFQ/wfF++o+W1NgqIGpoIxpK9c
PR93XdcjQdlczeAbhNe9shLtfRfglCkvTgXxs/JV9+ERO4TDS6J/IMz3TlbB
1HgBInRqvWn2EUBmp67sgvoCGBl/GN5E91X1+tDJlIsLgCmSE4pQP9drcDjm
LroAv9OO0p84hOI9x87rfXQBZJXCeQ2Q3uG5zPw3n2UB9hyPt5PjI8CzfYVc
nFxkCAz3SmVWIcAhWQ57d34ymH5V8mhF/Hhy5mHLlAgZMmUFR/sQf/IF7/d5
SJDBoP9d4AnEL/5O9v3sMmSYkio2q9IhgP/0860KIEPri1HyK8RHlmzJPR5q
ZAgwOM5Xpo/8W5ZniWqSwV46V+kQ4u8T2ujcu9//h5O/HdTkq/3f+tMBxSY9
zf+zF/H8nEpw1//8rUNzEO/v/8XDK1n75BP+f/E+P3lmgW/mf/lw6b2Q91/8
X74bUbb3nx5aBp2scy2fD6J+8OHOKDPrMogFtDnQsROgLnet0Y1hGfblGHMd
QOdr+3m5oopmGRR1FEVx//0eUJb41e31JdDZtAx3RPogw7WdTnxxCe6/Wn1d
iuaRrPOxTw2IS/BSJNv9B9ILHHn0TwJwS3DEhyUx5r/v5Ax+UHB3X4KTF+Po
D6P3FcMDDRPtl+CPaV1SJsKSeTUStZZLENNpqrqG+lnu4D7HP8ZofdhLld2I
X6Unxj6AzhKYevTf6kXx+Xs0eyZeWwLDRpNpSxT/l+edZnuUl0B37UzDR5Tf
gxd5vxPkluCXRITXJ8QHaSOHchsPCpyUMy1gHcSDox0JDvpQ4OaQkTxvLR5k
SQ0Zcn4UCPlu/GHgC5pfHzxkGgigwF9msaPXX+IhK8lymviAAkn+qZvhQXjY
Q69E6xxEgdvxbyri7fAgdtrIwzoY4cXTG6E3EZaszG5BuH/ZQd/yIh6cfhaR
3oRSQGl4JFsO3Xf8vwu/3EPYoHB08NDwGDwaWt5TG0KBRY/XcX9/joH+oK1L
MHp/+mhH8GbOGDQ3HkjJD6SA8JVxZd5EdD86JbzXu08Btxu9d7yD0f1WHr7g
jOKHanlNFocxyOd/L/7PmwL3+vRUVnTHoMhk/WmTLvKXfrbaNvy/7wjFNStq
U0DyN17R7jUBfty47K94gwL3KVGXygsIcAc3b9V8jQIVyu+DbjQSwMA648/Y
VQooJDVmc44hPTT6wyL0CgUev/lykWkN6draq7aFahTgYuVM5WQZBwcTo0g3
hMt4FiTOCI2DNpPOyDeEldm3xgcdJoArdk6BAb1vLK6/shIyAULcvaV4hN96
J3XTvJoAFfOSanV1ClyZiRkj502A5A2LSNCggE1JcGhp/QS8VdCfxFC8xQXn
FNVGJmAz2sWsCeVz1Hyt4vnKBPQz/OA300PxZ/rVRTFOAh99U09LkCNEsS6+
EbIngnkbfzVzriuE5irjUozRvbgvXdy2wh3WH4YOj6gToUxpiVXR3hO658wm
F5EuaBj0908q8oJeoa92YyeJkOfxu+9Lsjc85eSaLeQigoJoru4qjw/80qLb
9mIkQmJ4orTAJR8wCLyqIPFnGoLUd53/KuUNKepHekQOTENEas6er/NeYP3x
LHEc6YArc2VZRcpeEJMV5Pp5eQryHJ4Iscp4QoH4q12RhClIdN//zL7BHZIp
784/7JqCsQcvn6dQXOGdRFpg5o8pUMj4uOr7yAlw633KW4VTEFTpfFjU0hai
mxVbn2RMAd/Wacb7Z02w600/PDLGiNCu87U7J9sS6/May9QhEWHsXFQKgdYG
G/h4pVluG+Fd339cfWeP+U7O7zHYOwNa58++/BbhhAV45LgnHZkB10iOwyH5
LlhoberWn1MzoEBu/3cy2hUrxjtGuV+cgX5uWjmJcVdMsC5vg6I+AzQvZKQ/
0HhgEi6iSz7H0b0evNa6f80dy9o3zUxzfhaq1rntSU/dse21+fQQFYQbDDR8
frphD47phVF0Z4Fvyfi4wBtXjGVu+ulN61mgKT6cLS/pjJHa4zKeesxCjCLD
fKaDPXYQV137JmQWXCtWWirn72CjiaW092Nn4VeeSOml+EfwafZjmAnSiQ8T
GhT+HHoKlNKR6gCkW3N6dzDSGsbC5EaeVRTSnTwqpsLhovHgcte1O7yPCFKa
9wOHdr8ENefH/Ha/ibCRF7ZPdzoJ3tKqb0uMEOHv1N5mmZbXICx09ufQKBG2
r+u86c5/C0xeO3wd0H5/G3ZonjhRQMUXpeWrNAgF1PVbyrwkldeFVHvOZvxd
VrpFVH/Lb0/YXWAqBuf/j+fZxSBX46piarz2b6Y+mniUUPPhT+Y+0nWslJov
Z9GjfJxoIyT8CiFs44gQJMysubavEV67GnAJrhOBhU+qwmCtATTnh78lsyBd
9/pMDBuhAQTOZvoZCs3Acy32RomuBsg0NhzTkJsBW7GAX5X1DWAj8E7PQWcG
Yp1kbWqqGkBwx82TH+xngOR+ugQqG6BlyjKFFDwDoRZ3W5zLG2DFtvSjdPMs
FP84eMPmewN0BwQtBeNnoYj2V99ATQNUkAeUsQ2kE62uJda0NkCxyJVRHOsc
/Hy8i4t7uAHKb/LvGxKeg5KIv6qD5AbITcu+kHppDpRp+ZxXGBrhvBn/OJ/e
HNgZSqqbCDVC8I6qb1oOc/CGdeK89LUGOMndxrXuQoTQ0Uvr95bqYX9e+naq
HRGYN14Nvk6sh8yFt52m1kT4kHqFvV++HvwP7Sg+bY50PouRmTm+Dmrf3+I9
bEaET09aCQ7hdXDvlMzEURMiGLeHH5I8WQfSYaNSl1A/EfvEED/Z+hNoGeuj
/BBWeugbv7ekCoLYCrc+3CHCVM+LbaJRFVgJ88K/u0Sw4xRsUNvCIMHh4ht3
FM/aw6LzBBUMHlvEffjnSITAGx9V2WMrwcJiQT7DjQhJNn30CiMVkH85OsPM
hwilqrkGvWIV0Ly33VvkARFsfid8lg/6DuOZYrk04UQ4ml5vrBPdBPxKp611
36J4Kf09Qo1NsO25eZ4jA/G5WovYvrMZrlCG0nmzUPzXOBUlFZthPc70stt/
P1dT8vPosQfNELngxM+Qg+Kxq7ML+dYMztqJRXg0V3I4f/91cqMZePaPEv7l
EeHFedrmtfMtwLRsQ387H9XDhbc7GlLbqPgB7cTf+JE26vrHoU75PCztVHtL
Q04Gv0Tbqf4Kn9eqqF1rp8Zz3SDLzceunRrvEXnrTY1H7dR8Lk7NyZRktFPz
vf+o9HiPzQAs6e4ozsUTQVacK/af0QAM/OqyZd4gwlCG22PdGwOwl6cgtXTf
DFSSrm8OKg8A/Voa+d3xGfi52haYKD8A67E8dT/kUT8UM7COlRmAkGF+1z16
M/CMi5LecG4ADlSDsI3jDLBw5eIAYYv0XxxtoTMQdWb+1Wv0vvud0tAPv2aB
KaXspC4MwNUjO34xTs5Caqfu7muXB0DL3+eV2d9ZiDQc63twdQBIsVOHYw/M
gf4refKs9gD4t3x49vLUHJAfg85T0wG4yV1sZKU0Bw09KcWmdgPAq9W2Pmk4
ByG4nOCb9wagg+jIyeEyB9PClk9OiQ9Au/cFkQpvItSMkf0L2AbQXO+pvIn4
VPDvG2Prcj9Ef1c7QXYigkb4hdmonn5gORpz8Q26LzllYuh3lvaDC3uE+25b
Igh0brkqJ/ZD8VCyvhjiLw47etvctx+cngTTsCF+b7w7xW1v3A/hjc85C1E9
DYvfWH6X0QuFa86C9QiHpat1fgnrheO3VPDCaP2uZwdPNN3thZCIJGY1ZM8m
pViR6UovjGxbbxxD/hI5TLVCT/TCbpxqdAWKR+p9ia0yUy84HTqlyO6M+G93
xsN8vgfKP5w5zOdOBLcXNgLEth5YTSbkjqN8hzdfJPEfHIS8X49UBRAfNt/z
9D0+MwjRO/QOE94RoenJoLm59iD0h5wPm88kgrVWZVSMyyBE8JUIAeKbED2H
/57oQeD0r6fr/UKE6Nsc/F8/D8L28GJCHuJrv0WMztPmQch5K1PXivjMqVrY
4TEzCMmB1dOiiO+t9TvmTd4OUfHez4IOSpVD1PWGOW9TDg4PUe1V7U69XLc5
RPUXXEGRBK5hajzcIYNmLjLD1HhnbBKmlPWH4en/57OHnVcox2OYmm+/XshY
OQnp3J+H6bdRP0j4eXIhFYeHg0Q29ZlgIrzH7n3S6MLDP6HmlLD7RKhb0o2v
Q7p4wfRUcqcvEa5MiygdKsGD78sp9y60nxVJ9XfVMvHQxSQzG+lJBO/navW3
E/HgItZ8aw3t/8nsjvN2kXiIsFv/dgRh8wIK25diHLwzviLC74D44hTlmPcB
Bzx/Qsjb6DzZxBpjS17iwDpgr8wL9HxSNO12QwQOohLn3xNQ/2OJ5P+y4IuD
tVk+TyI677abZ1WkHHAgIM3u+h7xN6bPAZdsigM9wo1NDi8iMIr2C569gYPk
OwHMF1D8op+knD6ZE2BuGZN+ifZbjmaNydyFAA3HnzIaFhPh2HJ3u/oDAuzP
cva2/EoE1566ScunSBerLBws+k4EbYkls7dIJ+um/ltRxxBfzZYk1j4R4ALd
yQihapTviLi6xTcCEGtdS5VqiKCupRjZ3USA3oyNgTSEBWOnE668H6diZbo/
Pd+Kxqnr7R5Kk4Rqx6n2ePKla+53jVP9bTNZXSjHj1Pjubagq9m5OE6N9wxO
6kAFzQQ1H6XzawVu+yZg9v/zfZyRdKTNjwhnpT25JweJ4J7ckGyBzvFNuSjv
FhHtb+/ioVx0Tsyfs08qo35YoRFY/RXdk+GqnySLGWZAuavfMBT1hS7Sl32q
nDPw7pWx2F50LgPbOk/nhWfgQ1r0EUN0bjafBu+kS6N+F5kda42w9lyChona
DOyUfJHuiM5pcV31QKjQLLDXnk+Q/e/nL1mFy8+fm4UnOs7RjR5E4A0/1/Vb
eRYezNC+5UTxXVPhOmKH9F/hyX92x9E5HstMuN1jNQsjQUF8iwFESObd8D+E
9J/jucZQb8TjaMMw2+NI/2WXxk8WIp7nhLXKbsTMAolRMO64LhF8AkUOHHuC
7heNjDZvFVRXH3n61NG6GBn72mfnicBKe6JFJIQIVwdVlf2EicDFUX4HQ/cp
bUeUPHAS4WXaYhYr8hufUlc0xYB02F17UR60r5+abmMBG9MweefqIeJ/3xU4
qPxg98w0+Ak+43NH2L5Qfc153zSsvwQOAXRfL9k+iF3/NwU+P0xC7RD+wVt4
+jF5CkQe0Im6oPW57EOLorgp0LdT95RC9ktUfy4TO6bA6fa2VgHyn1GUJ99U
MwWfMlXU5gOJsPvD1o9epPsfqwQ64UKJYOnaa875fgqkRq0doyKQ/V3R2zv2
kqHUIkrzBMqTRv15+CtWMlTHWBO8+NA5t0u4f95Phj0pkuauaH6ht+MgnztI
hljdjjahlWkg1BQE/vf9PPMBujvvhqfh15HjS9mHyfBRINmDUjcNLK9m7J9z
keEJMcFWNG8axLpMzBcQ1vwiWXMzaRqWNWq/8h4hg8+/xfen9acg7pfL6gI3
GUx7383ehCng1T8XL4nwt5+8H0JEpuDq13P008h+zm0tg2Y2lHdIDMt+5H/I
2tBddnMSztuRawo5yJB8/LXO8Pgk9M1OPm5mJ4Oteb9M9a9JULQ/xGu6jwz1
0tcuLJdNwta/P8J5EyS4NbzKtID08CLXA7nwMRLkKHVenOhG94mjPuPBIRL8
8Ut8cmgc6YO7clKW/SSQnp/c9F9G53/PasKxhwTLnDkue+hm4HSd2Lh0FwnW
l17kl7DPgEGewP3aDhIkp7v5+gnMQDgmErUfYYs7lW7XpNA8xDZjndtCglLP
4pLd7LOQ9LP2ZjXCl234Q4b4ZyErqvdAQisJKPMHqz9JzgJ5r7CYWBsJvnpe
PeSoOAtylV8+hiF7E3IKkge0Z0E5YezEm24S8C3+bnxlPgtd8eE9nihe9fKu
XIrLLJyMabXZPUwCvxfHm3kCZyGfhvBxv+gyMGV/f1DZQATCyvjhuhPLkBNI
fzQXzRN+obQiPcLLoD9X/a9rkgiHdvlsKh5fBmnDIHFBCppfitZD9gotQ/2i
eHLCrhmINzrlJSO4DAMk36MCHDPw/dhZrR/HlmFPj2hIheAM0G05G+Ug/O5B
7pPbZ2fA64i/3Gn0vsy4W6k+2ywExGkH+SJccFJOkMI3C1ciznQKIn/6vdpF
kRIon8f5LeIonvDs76cZFGYBN1PWkSSyDE5KtDa2mrPwXHOR0fLkMoQmPldK
uzULV1Mv2j9C+T0dOVWZ7TQL1cvaHxnEl0EgUWL5XsAstG/bhRy3WAYDmfez
Np9R37h0f0PMEcW3c0A4spAIjUXH9t7yWYY41U+NiaifhvIkHc0LWQbuQnvZ
uEpU3+kb3kejl2G5/OEjL9SvpWov6L1NWgYNTWVrecQnlgnh6dPvl6HL7fQp
Yh2aH/54GvzMW4bS6s0Rn3p0HzgUWLzWXaFifNC/dinzFer6yrR5qxqHFao9
lR9iSso+K1R/zmrRyfkhK9R4hPPpPtNFr1Dj1RP+iJ1JWqHmw2dTcf5ixgo1
X1m71pSXvhQIO+1c3SJNBBMRFcflAArE0PLo1/MTYf5uSWldIAW093fXeDGh
+14T17UvhAIdl3wuTaD6bzlocLc1lAJR76SEjo1MQya3ms32Qwr8SI4iy9Wj
+ufkFkgPo4CkgaO4Aqp/NRb8uTKE7VrYH8ii+m/2Ko6jR++nFok87NOZgkkO
s+VoZP/nR/6HvXJT8Nfv60RkMAVOpkl2TwlNQcxFk13rKB4aUxWGw/um4OPE
GYXB+xR4PGST5rM+CYeO7umT9KfAlUc/drHhEc4tMaW5R4HtM4X3lponYY5J
oVjNkwI8g1PsJ0omoZOb9hazKXqfflc8P+L3+pfufB9DCqimmdg/2SIC8aU/
nbMesqdeVaO6fwbKxOx5F29SoPHqZ2HVkzPwtKX0Aa02BWYjbmz6K87A6AsF
1XeaFJjyTA4cNER4z7pK9w0KCK25jOi4zsDHKaf1Fwiz5NdIDj6agYo0AoMQ
Wq9320fWvXsW7PU3n/sgzKAVF782OwvfhXp/GGtRoGSnAYMzHdLvh8kH/vt5
uww3j/x6rjkI/ODysV2HAv9i33+nSM5BVl+mjoU+BXpIEy7zV+agsKDlyQMj
Cjy4GCn15vYc8DsM+B03o0CowPUXm15zUF334Xc9UMC0yd2uBt3rXJcM/PLP
UgDm5EcTkL4WyvZUdD9BgbGy1xYPLJE+WigfYOWhwL1zgVEBaN69f+IYTTw7
BbrN+/XjjZA+MJoMpt1NAbW+IdYGfcRPZ28Zq81VuC2RYXlYD+kVTtddFaRV
YJ4UuxaJ7t1e27YN+murUANV5kEIH+GcqjGHVYgpND23D633etTlVH1mFaw/
+aV9R/YCNWSGxEVWIcpq4MMj5O/er+dTBUdW4T0n7xtnFE8Dq6iZNtsqMOR1
SbugeP1L2f6w0a+C90zl/XCUz3Ymp83mnxVI0c7uzkP5VtHJ133+4QR18jPb
I5UkiBnOzs5ccYU4w7ARjTwS5HnUlkl8cYdRzWG6qDQSkDNkvzkyesLz7OOn
3j9Hff5O4kwUkxeURh4QTgslQWJ1wp6NXC9YNn37O8ITYSmo1FzzgtNXq2Xu
3EF92fdZ812cF9wNOXUO9EkgQXtGtYLTHQYUaqvlgxZgTJv3fdp7NzhqHaPH
47YAWUzjAS97XOHIX7Ini+UCxBwxWD1z0wWUTcYZD+ksgCu9AluJoiNsDswt
KygvQHuWSGOYvy1IfO9Yjz+HsP4usdEd1pBV4tDI/d93cB/XH+nIMYML8kFr
w5wL8EtnqTH2TBP8Xvt88ctrEtAIECmCmk3AMnTw0utwEugU3H/tdrcJeNJH
SHKuJIiI5CfZ+TbBySvMMa+NSMC+fb+QNqIJnDxPP2xQIoFWJpfKmedN8Ajn
oPXrFAm2dPyTV182wf0vIc++HSCBSFDBddWkJnh8pXwm5e8CFAgvVDhHNUHf
ZUHCYMk8LHWn7bwe2QTDP84zVr2dh4znweXlwU3w/O75T8UR8+DqKmby3asJ
Ylk87Rvd5iEoOJrG6E4T8D5yGGQwmYfkkPRbr7SaoFG/3CNYeR6i+SoqoqSb
YA0v9FThNHquorR8iasJjFKKdXQ45+HHDHcvcDZDc9x+tloGMvASi6P9XZth
0VcsV5eZDFGviKe2GpuB+Opg0H+6wXg6PjdKsAXEtL3LBtjIkLInyW8tsAUO
69GNNiGd1MvxypF+qAVUeK1aTyMdUnKEaWeoTCtESvTn7US6ybvR48H5F63g
31/JqIGweqa47ZpRBxV//GslpB3RQV3PFXzE7VlJB9We9O6jMwnjHVR//Yfe
amqwd1LjwSo9Y+Ohkxqv90uWMV3HTmo+GQkm390TO6n5Nklu6HTVDMA3Wncf
5SwS3JYkbn3qHIBAG/k2LcTvIjbJRKuxAUjhFRCgDSDBp9Qs+qXZAfB+pfn+
Pz4L/v3iqrU6ANa3d3+PuEECQoGUuu/WALT15pLuSaN6erhT33bHILy53z51
mQ/Vy6JmFtfOQZhV3LJYYyBBb50aw22uQWD6KC6lgs0DV9dNhi6E3WXxGwuZ
8xC408WN4fAgHDmsN/Y6Zh4KWAR0aDgG4fkV7SJT33m4vS+MtYJlEFTtaWXl
LOdB5/vgLSX6QdhzvF3g6rV5MDEyu/xicwCGvyjtij2L+FSjwvp9YQAoJ9d0
+XnmIX3ft72O/f0gXMgtnzlKguEUo94vX/qhRlC3wR7ppuLpwOPqIf3AarMZ
LN1Jgi/venKM9fvh1sVhDjakywZcf7pvnOiHksyEmD8NqJ4pHF8V/vYBa329
GeUn0oWsJlvq7X2wMpOhSl9LAiezK7+l3vVB/tSU66kfSHc+8n9rJdQDjQob
y1Wo/wiG8bdeXu+G1w/P4DYRpnzm2SHd3A1Z5sHO//0/7Znu1imDN92gmv+m
O7+GBGUX/dmr3bpBf8A062QdCZreZU9FqXRDS5Pv76ImEtwpdo3rOdwNvCl9
FdfbSSBKu71WtNAFhzb2/1vsJYFt5s97//3e0K6kuyLye8gQrn2jpJ51EDyk
WmNTmMigJ82okHJ6EA4vV9SnozmBtDnv0KoxCIvVf19eQ/zKy1c2VnUYhAsu
9LtfornhMJMKDSVyED6nJms9RHy02lsl1ZQ1CKE7YJod6fB3i/i8vPpB8HML
9VVC2MBDsiUxYIiKXxroqgcmD1HX443aAnTKh6j21AvbBOgGhqj+mOyOswWs
DVHjeS/GKP+ZY5gar+f+urrgM8PUfOIqbuyc1Rqm5tvYpz5tS8KD1NYd5SwC
CegkfXuejuFhh92hPlbEh2I7t/cPOvAwffJbiuRvEpQoNSop1+DhyfQZAjPi
hyHnx/ypAjx8fLcemoHmgNrLfozu7/Bw4M2fuQ00B3QE+XnOxeFBTrWViwXh
sAhjPvOHeEj6xJqEQ3xK8Wjpe5WFg0jn7ahi9P5PGtk/6AlIJDB7X0Hn89DH
qe55JA6yxojur/pIMGhXanvCDwdcj+99+zhAggUp9h0j9jh4eZx08B6aU86M
lad8NcHBzu7YIRo0x7gkd5/7qYED+aIvK0rjJDhXczhjzyUchHD1Dlwkon5f
wP9FOogAWJ6uXBUjGRIkrySrJhBgIsF5UIuFDEtHX9R8+EyA4VKDT4Zo/+8s
BhLUfxCA37mU0IP6T8mGQoLQIAH2uisz1qP+VCtXffPEIgFk5TLWTx4iQ8CD
lHtXGMbh/vXDQzRoTvucLW3gxTsOLqv/zl1BeOVxgcMxmwkqFizRUNd6MEFd
P7Qm4uryYoJqb0Y2W9Tj8wTV38XL9qPXf0xQ48k5qEezNDBBjZeRLl34JnmC
mk9aSAOHBf0kNd+mPnOny1lE0Nh3LegUqt9dE+3pql+IUPO4uGHuK6rX8k6G
pHwirPCwvPT8hOY4i5usMsVoTqR9GNCM7ksuK5d4/jI0F7dfFP7zlASy1dW/
dcqJIN5xymxPIAmUtW8ntX4jwmWZGcoOdH9e60+df/qdCAc1XAfnzEkQukgx
Z0I6Pkei6G/kkwU0n20NsCHMHX34sGvAAkyfXvS4VU2EsFfqZsZOC7BQw5y0
iBHh/NWKMu1bC6Bpr8ffUoHmdn1h9tuaC5D8kPcmCfkvOXjh8hOFBWjcf33Y
tJQISrTm+0clF0C/T2PsIJoDPu2Ol7I6tgATnlZmL+SIMDVbcjAX8YXOIdM4
7DgR0p6tpqojfgl25BH4WImw8b5hcg3xVSn9hazXxjT0qSZ/KEf978u5uOZn
+GmgpEb/edGI+kkJt9CD5mlwbXynH4X6UZtRG+l60TTcnFJ79Bb1P/aDdyeZ
U6bh/svLee2o/3FgBntEdafAIDTh/HXU3zSvBZGnkO5nPmjR+Rphqwtfo3OQ
7jdm7s9nRP1O4q9IxlOWKfCjMdl6gezZFPvin69NwtPpaxLy6Pw2HlWMN49N
QqbN8rFtNEcL3jYXVm2ahIsfGuh7UfxHWk7R7CuahEgSt1U1yu9z5TpDCpEI
5D1O8YKofyhd4l379A+dDzlcqhj1nzcnHXmYD84AC5srXQXiG9u2PuSJzsDN
+raLsoiflvScS48vz8ClZlPLU1xkcL2amBNtPAP2L75rPeMmg8gTz+4vbjOQ
80Hy7J0jZDAsYSkcjJiB1Buc0Z8RTn0ZWR/RPkvF7TXHPhRPzVLXR+ykaene
nqXaS1ALiujnmKP6m9JUvFgoOkeNx/iYqKnB5TlqvCX7fENLjeao+Vx/9tat
zmWOmu/+vA0r9x1keJaUZveinASHA1u9EujQPcAUfyDmMwnMxrHXVrtQ3bZN
SRm/Qf3pW119Pz0ZNJcjTm89Q/flKOnw6m4yTK8fj3wQTIKLm4SZUqQruPxO
9RHdSeB6Vr2eD/XZ84Xvy1WtSfDIl9lNHGGZP2IjKXokeHbqxHAQer9MjYbT
MXwB3q4kXjuH8EOvhBN1PgtQauP56Rnyx3ftQc8puwXg/N18KwbFgx8+Uv3e
eAFu/6zfkt5JhtEDg2FyGgtw4JKm9iNaMsTDns/r8gvw9PIz00Ca/3TX7/d4
8QVQ5q7LUNoigQyDRROtwAKsncOaHr4iAdunNsZTqP9eVpzqe/6QBFExDt1B
v0gg3qdgqudMArdb9/ImEb86LFpDBgxIoN51kHwb8Y/PyD9ZVJEE9pLGiiTE
1733lfebnkS6n6HgS0Llf/+uJOvotZ8EgX7FiQYViO/WkefCtxYAn6eFSSF8
9dzDW1Zl83CcjjZ5FfGb4GIj6ps2Dwa69PtnUX2oGx6LSXs8D3KGR6/9QXqC
c+zPvhmPeXi8ysMkgOrtxz8xXnOzeTh/tsnTHNWjx266g2xq89BqM7azEPE9
dHr0BKPkPPTvSY8/iPhuLXTvjiH3POyw+mzyCNW7s8fQx7hjZOCxatuxiPb9
QiGJP/k0GZSvEt8Go/vS5kTCueYLZJCz73SNRP2TP45J9agKGYL4pLLpUX+9
esjx7WMtMjgKYm1riF/tMp/vM5uSIXGBp9LkAOKN0SvW1zaoj/+LS5NEfFR2
mQqU8iDDr0y/zXsIT48KPt5zaJGKg1bdNt4KLFLXmx40jxI/vUi1R5BOtc+/
sEj1x/SdppZHZZEaz08h725XrUVqvMvJR6ZTTRap+VT+Fr+ddXeRmq9AOVs3
28VlyKOYMMSi/TyKszNdkl8G3ag9zQGoHmZFFi55KSzDWtNRqeOo/6fl/tlO
VFoGelnvmwnJqJ/bgKGp8jKIEgcse5+QYJorCCpVkL2BhyUkfxLQZ0kRKlSX
ITY6vXTWgQQq+zY/GastgxTDN1yXCQkKhSWYVa8vg2zSVO0/xPfvJ2VTAhGO
3aP0dthmAVKVXLv1EO6OUygtN1iAfb+eNTVoLEOtc9mrVLUF8HXg6uq/tgw9
NVc7E6UXoPmRYEC4+jKkppT//ozmvcVLO6I7ryyDyE1DwclDC3CkqpmxEsXz
K8mS7gbDAtzCmCuL6JYh52nkowNIH7REnE3+uL4EDyOHS8yRnuA5/0jfc34J
ZG1L5ytRfZwO9ojjxC9BqLn24TNIT6aKJjO96V2Cv2w6IVXNqP4/9T1mal6C
pobRJjtUL9t/z8zaYEsQabh7XgLdB70nR1jLC5dAxP/VhUOIz+YbWv5BLEtw
YObZsh+qB/vgMK022iUo7jJkC0ZYXNGnmn9tEfBuZVsfUD15C58vezC7CF4x
WbvnUL2Nib/knB9dBDJeYPAGqsfJvXzfPboXQbV4zr0V+Q9YWnc63LgIAc11
IndQPR/ompwcr1gE2e80n9lRPq16zZUdaP/2Xg/TtUXzkV6QGIuozjIETM5W
NCD+NPq+dk0zXgb+zKHlVqQ3SfYv/MUsl2HD60itN+Lfbc5Tpc12y6B4TOhM
DdIfX09/SvVxW4Yi3fKAXMRXDdLVL6K+yxBVbHbg0n98zurUmAxahhCh9PdO
CDde+aDDt/A/PLBDfHlg9X/rHWta/0X//Z+9uv7rRNldK1R/58MJggPMK9R4
TH2GxO8cWKHG2+567fkg9wo1H8PkL7izx1ao+X4dwVYN3SjQdiNPMbUA6ZeX
Hk+UvSjw5hydxVOkb6rKKvgy71HA/S5PJF84CcobHxU98KdAUM/eHTYuJNjf
zZDYeJ8C6zdU5J0NUX/3rHUJD6TAS7bsvsuoL+5JNDxbFEQBz0tBj1ZPoH7k
dPjMzWAKvMbrHY5lJwHgLvCxhVNgqoXpb0L9PMC75E0ehH/ohKqfzJsHuk27
T6/DKJAoIyT1I3Ee9gy1BDx+SAHeTpFnLsHzoNHDxU4MoQD+gIKkvP08yCzf
s/yK/A0J23df0EF90+HK1y0U33B6B6eHHJr/bSyLi/wocE7tmx9FaB4uO+nX
SihTIDvOLzBuhQQ96cOb43IUaLqiUvaVRIJgZt+Q++co0JtbtxE/i/rrAZfy
bTEK5DcylglPk8AI37nf6TgFNMZ9/3hMkOBGMWFPKw/Kn/29sT+aJwxS7/Ad
O0QBoy86dIAnwceLq2Me+yjg4tiZi+FIoHN4c7sufRVe3un+vojmjccVZpSD
yatwxy+8TBz1591jbfn2casgPF82chKtrxXR+V73ZBUiDMpe4ZE9gcG/yeIP
V+E9SWRaD/m/I3C9LTtgFdRzU3VCUXxNc/5NF7xW4YZc6KbtHAne/BxdITit
QvY+3tidiyQIyi58YlxwHYbapjbYk9pBoeEfy7NgQyj4QWhx8Uf4vaCcsJk5
/AzcH3HLrB20ZqKzVTErsFkcXSdfagfznr3/BO/chW+1+scu8LUDX5MoXuK6
LWTkBEpf3dEO7fl6ple97eCosfhem9o2UKBMhVWO2kHgRTfygfA2CGrZ/en6
XXvAXcPuDR9ogbxvD/bj9tnDIzj3KLK3GVI/2k3+3LCFdbpDWYaJzVC1zNua
KmgDRMv+Ly7GzRBUrfT0Uaw1MK6ZKCwfaQZWM1VrGiUL6BOC+t1jTTD2s0GB
1tUYDgtr6Ha8Q1jn38LvWS1gH+aJ9rBtAgnLsdVXUq6YU70Zc0loB/Q75O1v
93LHfDpPX8OldQBrWqFTmIknBhV/t92rOiAvq9glGe+F5T7TZzEaRVit8MlJ
Rh/Mj6ZLLHi7AziblmtCO3wwdTvSTP/RTnANer9XUuYe9pFAKbku3wl5G1jq
qvw9TPgQzVKLaSesT6cqayJ7NOm8sTNoTo94RCgWfuSFsdXsf2FxoRskBH7/
vdrsiRme/VpVYdgNhg/mDYRyPbA0vW8hcz7dQPPsPo3lGXcM68my/p3QDWPe
mh1jhq7YmDCe415xN8Q8+3XPS9ERi4h2887r6gbzDMtrQZw2mL9BXZr7Yjdo
qT1TWnp0Fyt0HN9Q6+0BMsNzzb5nDphNi2Le5FIPBF22qOKZdMFofJRq1/f1
wpUQ+1fctW7Y2L0X/xzFekFkYuDv1gUPrNm9ZVHyWi/YKpqL9up4Yo7TOX/O
2fVCVaKzCg2bF+YzmK1r86gX7j3susLk5oU9e6DHW/Qe4YSEK0dP3cMafouc
trzZD1pPfxm2i93D1KVH7pW59gMDb+7QiS4fLMtQ/zr9M4SljYJuc/tgtyY0
yi986Yf2HjeOEXpvzDePd0ShuR+y2ItuXk3wxJ7uu7O4h9gP5Me0Hv5N7phi
trt2KP0A2L6TLHqY4YptB/96nHxsANofzIj+3mMJvbczjYtI3cD3/LGtSsxd
aNHt5Y7sQPu3FXMkz8Qedtrvtl0r6IZ2phd8Q3ZOEP8yx5AtHuGrMYZ/ylyg
8bjUBaIn2s/MCKved66wUcEREKvXDVlmsjmhjG6QdJkl78j5bpju1VW8wuoG
R1h3eaUcROcR5dB0Gdm7HDbRE2jUCUGN5M8rBY4gdWexg0G2E9q3R+UuXHSA
2aVrHz5zdQJfKapaWjtI77g6fn+zA1z7BZXsmO7CQ21T2mdDHSCR1UC4q28J
Vv8EtJcqOoAmnuxxrsUEviXGkb++7YDUCs7D1/y0oaHt0s+14A4Iimm4dAWn
BOarmUICrsNA4x5VzM6hA8EtV708bw7DWKlMwa2rJqC+ODBmeHYYJMS+Kuvv
tAA1iaGLOA60vtD+x4NMK+jp1Y/hXRsCV78nHElRd+Cfh+CB4/1D0P42nza8
4C4c+HCKZ/fXIeB7UxH6ktMGRAxCuXuS0PO8KfHvTjbAsfOoUMV/34NUYekt
3m8DuqHHoh9XD0KVXepCy8YdaCRH/7ZLHwQtsQCrLD5r4PK67+8UOgisJy4Y
mkdawL/KJ3WZ1oNgzpjAsGlvCi5y6ysnVQeBJnk9nnxdF/D3B/bvEUF4UfTC
SJAKjBx3/qPDOAjTGjeqF4TcsRDSETZFwxGwHZ8M7431xNxer3+s8RqBvNvh
fnLp3piZ3iesIG4ERGyMqqf07mF6se4v/uWPgDl/vU3vJ19Ur6kXX7aj9z+c
+iP/zg87Hyv3woY0AoanS7aeXPTHvhiUW91iGYUIOkGlu57+WIBXo7ad2CjE
3M4UCV3xx6Rfbt2TcB+DPJms3Q2t/tics3hbSfAYkG+3OEer+WOSjI5dZ2PH
oKyf3Ctk6YcJ0zwwSksdg/VoyQMHeXyxO4ZRsJw7BjEO93fxBvhgxyqCPfix
MeCc2xSQue+FMRk6rAv8GgPboEezzwQ8sIenmmcXhsagYQc3kXbJHcsQxYUn
aeFA6+35qjIFL4w/AUu+ehth8yvXTc/6YBev6wiedsaB7Xzq95/N97DSn2qa
l+7jgNP6Sw8dvR9m/sVd0i0KB3zjjZGmeD9sroK7uSIZBw119pbXzf0x3XKt
vdyfcKhfmvx6EuiPHXVVGg0sx4ECKXC3brIfpigQtX4kHg8RkQyPWk38sErF
Rbmgd3igmcSXZFb4YnNDDn39BXgoG165oFB9D5szXsg/WoMHctVosKiNDxac
c6RGpQMPMsUPvS/keWG8qR9Yroyh9dEFW/YpHpgiTWIRNwnZ21A23RR3w96+
Tp4r/Yuw7vbHc7ekwNhOWI1neAz5u0xrFK0BhOcX/MzQfvGNvdWsjdAHp/Nj
LnfQftJsz9q7GZiBW+LWTsgbA1cPbdoEAwvYHzQhuYzOI+g+l/AdVSsISjy0
6wk6L/On4qI7fKxBpbg/ZV/IGFRJM5UWT1uD2fGO44/RebeT2B6Spu9AU5z7
lyOnR4E1fb+Sb/IduD3OvIN1H+IH2YSV/pk19H6JW99PHgE+fMbY2VpLIFa7
zMl2jEDqjeMmHHLm4MKmw/eyAOF9Af43yEawqGZbJhs/AlVs3osFK9rAz/4i
R9p7BGjqrggLHlAEcYee+reI7zS3Bw5FSGhDjmbsNMf+if++15iqdc0Yzqr3
H/q6cwJcZd7Fz9NYwANW5iARyjhUMZ+60SxsDXf2/6pynBqHGCy32irxLtys
0oiL7h+HPAtfXhVtW0hSO/wzoXEctHSZbtlr28G41qJUdDnC9gXdFxPtoLgw
8Mf9T+PA9xA3LWVpC3ve0aiF9xKAzzowO5xkA28uJU541xNAYcetpNQfd4GD
dS7A7b/vSfhsXZEatYbzmfWLD7IJEMQ9/9j4siXwczUfzXqF1k/tir9KMAPG
BLGm1ScEqHK6e4m1Xw+tj/zoeh/hgJ43iV1XANMoMeB3IQCNT+p3kr4TdvXf
qUd0YRPAWWx+tbjPFVs+1RKdGzcBhm7LT+my3bGchbbyqPQJUKjSFtXk8cRK
n1y69Dx/AmT4GXm/nffClJPlzpZWTUAQR6tZ2qIXdpZX6/1SG7J37BvE3fDG
/rzJjbo4inAP8bvRdW+MQShpOGJhAlhtLfW00j0wnYiC6h91k5AX6CY8p+SB
vTOod2TunYR15qONL8LcMXkxuztqE5PAmtuiW2HvhqWPcWQ6rEyCeZzNwwPo
fv5zvlLWlW4KtCg69CWXHLEm7ICcBvsUxLDP/4vA2WAxCR0jFL4pCHrwdVKg
wxJznJ3ysBGfAlaoz8vht8TYZU0/LGRMQV6fgtnm9l2MO5nB2rtoCiQMFGUL
uB2wDz8bbc7VToF5JW7LyssZazIj3RLongIFnz+2jGGuWINg/O8z41Mgwmr8
k8fRDWOTOmNsvjIFZQ1iSndJblj7xlW1NzungfXYIaE4FndMrZlu1/iBaVif
DD12ks4N20Ej6Tr7Zxpo5MXWTlS6YrKpnKbiTESoipBOEOJwxVjSW7ptuImg
xXrgOC2bMzbHVQhPThGBj0dwo0TSAaPTzWaJuUiEvPOiNEejbbDNw59/Ol4j
gsRwZruJiBVWoe1Fw2lChLGFvmluelOMNZDpXoQ9skc+2t0hdAdU28hr9qfR
/hAufdR4YAev07XIlbxTQGNqfYbI5wS4UY1aHOsUTAewylTtcoV+pRGFoR1T
MDbccFKUxw2unRlTL12aBJHOJ3bsA25gktsy4E+YhKpR32s7z7vDC3GnJalu
hGOzGprOusOj7NC0idpJcL2qVBOy3wXkVO0rPs5NQN4987vlus4w563HbjmM
+BZXmr130BFuphUeFv6F6rHvYLVphj3Mz9P302JoPfNEMqXIBl68vKW8nTsB
qS4dRxP3WsNPFobLAmmong/1nO41vw3/pK+l+jxHz0lOW3sU9OAY4SzT7ocT
QHNgppE7wxJ+fMxtUn4+C1XEJ4ejCm3gwr/nCS9CZ6G9+Ra+itkRpJtOenz2
RDg5mkH4iwu8jA47+/zOLPDdpXPWuOoG8Tt+Nmvqz0LevpWcXDN3eJrXqbig
OgsyF2XTD+/3AJPn9AXe0uj9uw4jPHYeMJdTo7wkPAvro2kD8WFeMLZLTcNN
YwbNA+autAFeYHvniSRRbgbKLocxj7B7Afv9sOS7Ygjvr164o+4Jz7V5vi4d
nQFO+doG1mMeQBv5OC+BZQbuCVG8n6a4AX/GaJLJPyIE9Q1Khnm5wJ+4fF91
MhHMderZXq/Zg+TQt4uOOMQXgV713cS72HFe0Sv/6OaAVTx9/2i2A3ahNTVV
m30OgoT2Pdjz1QV7qPlQbpBvDhIv2abve+yGqd8iBcWIo+cma2OxQ+7YcYGl
UodLc8Cpvb73cpcHNhv8ncPq+hwopCUejnXyxLSsuyqcTOfAkGifyffJE2Nu
12wIcZiD9gyXuLEgL+zRyVm+VoV56PcJlXhq4YXFnqh6S9CchximP7Z2E56Y
sdbOjKVb8zBNZqyoZPbE7tdfvLzoNA/3DAO99va7YwYlb1/3BsyDRGaFAfMV
N0xu4fZI0pN5yMsU9ND65oxlfP2tLvVqHlgV5oj0Z+2x5tJf8i+z5iG1+Tf9
9RJb7IzqVQZlrgWgCV2KI/12xO6eyhHpFVmA1L79A0HHXTGus/p0L6UXYIzh
8e/voW6YzSDz0H3V//6uxhTj8EN3TOkPz1iw3gJECE2euHrCA6MXjj/1yhrh
hOiRt65oPpB1/1XhsQCswyOzJcYeWNwOhk5CyAIotOxs5RJ0wfguu6hMGJIg
1WH4MUHeGRvifZe/05YEEqN3ZdtSHLHhcKXnB3xI4Dq+eq5b2R4rFtHcYgon
gdavEW39szbYdrbqfnw8CfJc6/ccd7bCGustWKLfkcBc/srv7WkzTLu1Xn53
AbLPtesNW7wOVqVauE+ligQ0VjsO5bgYQ8UIjeIk2o+xCo3unHUL+CgRNR2H
9kur6Oulgd134XZOlgZT1DzQMPvvIlnaQdJbeQa9+/PQrpIUsrzbESp+y3b4
OqPnkslDeqtOsO7v6hFyG73f8Xt58YQLxCUZNftozUOQRdA+tvcu0Cc2XGWp
OA8yc7UeV7JcwbRL0ZbTEfEF62ddjXCFm92OxB1mc7B+U/NqB7MrRH4RmVhC
fEp1rZK9busMd88vqqwgvlVB9qeZbQeIUns6xyIxh/qdkOv0iC1k7mv9eI0f
8fN82xk+xjsAytqXChGfx34lfOwNMQdO1VvXbuycA6S2+xpPNwG9Xc7ueo0c
yCt6//eAQhNkGgb3elp/AYEc3KmYG03AzLa0+4DvZygd8GqTMm6CGXHyuviT
T8Do0rjzv783CZ2qoXrJH8F6rSC5G83Ve5ylP7J/zAba3MdczQ5NUBZlrUop
zYIs5QtVfQhLil/Kf/YzEzrbb4cuGjQBj5+v4qWGeOi/ZnvlgF4TWG0oYJuE
58DvPzdyQ7MJGHWxFMsdsRAy8yk/Q7UJmse9z/BfjoYMyl8c18UmKF0bf3H5
yWOQkmpQLhNtAkXJurXbw+EQNe1+K4y7CX6cmN2VcTEU5I6NmEXtboL5smgv
R61ASLad2fob3wgH/4+o746n+n3/l4iEUFlRWkqIQinjImTvMiINO3tHZEQi
kVRmSUJDmdkcm3NsHeOYxznWsQ6ZSfrdPX593t8/n4/XfV/3NZ7XuHvkPq0M
eXn1+bDC6vnrQggWRvYP4xNkC8Bz6429qTsWJhOyE08XFQA447IdrLGwYtBH
d/hsIRRVJDh6m2FBabVWXfRLIZzgto0OvIoFS62VlT2nv4HoSMfZJ3pYsHCN
4nLL+gY7Ei9+TdbFgindXg+OE0Vw+xAHtsIYC06j3n7b+yuBmqqV3W2KBXTl
z459Xgl798iVzVlgoY2J2bx1bxU4byXMM9hiwT2e1tIqqgocrXJ9DyP9yI/j
t/YyYgBLq9ImEoSFYMVyalgIBu71OL06GYuFffmFZQG/MCAsGtpEn4EF3wKG
UeOL1dD6jXV0JRMLO9W2z2bS1ILTbR+64DgsMLGZnRG9WAtulxg/4JA/apUc
B56714JGyvjXQU8slEmaXPqWXQuH2rZMKuyxEEf/hOQ2VQuXngrLetzGwnQP
F3Pm0Towm9dVoDfHAj2d3sczFnWQUWad4oXsu2sY6jedWAeqRzRex6pjQfhE
qFz9ZCMYpob0jCHMHUSeeHK0CapzLcrYtbFQunGXRt6iCW6t4ewOG2LB+f2A
ZHFiE1ji5TQZkPzK6XdaeHwTHCzsPViP/LPaU6nqvrcZShUCpnS8UTwu2Lk5
qzdDZ8M2e2o4Fpj3f/XMDGmG2THf5mPqODBnU5Dpu1ANz2UWsRQzHPzo+2TQ
tI4BDp0Gs2bEV4rh4FOpBxhQHUrkLrqHg8HE3KOKOzHQ+bTF5HMIDqLW64fP
hVfB7XO/z7+LwIHj27hzV5mqwNTxRdyrpzhw8/+1lxpVCWF5p7keRePAe/pe
ofbeSjghYrBl9QgHd1jYv9w+XATxn7h4dENxQHev2a897Rv4wMk9UoE4oCXd
b4k7/g24dVr6eHxwcONaWP2vrELgnSzQpHXEwZzl4mk9kUKoVD28sXIDBzqf
Wy8M5BUAq9famU0tHFRc+u5Iki4AM37i74MXcTAUds8+tyYfUs5o0AyJ40Dq
Hc6kIXIYnryNE5tTwkER5UDmkOMwbOwmBXBexcEC9UVAuM4wJKRum+jfxoH6
dxK+T2wYtP+8nn2B/LMoKN43yjYMev47jw6646CKLXggb2kICuSTvhxG+hL3
dF+91T0E1ftDGG4h/72uFOr6nT8EZpv3zpV64sA4YuyO6voA2JnSv15B+0kC
Rt6TfQNw+bPocRFnHJysZf6WWDIARRkLKXdscGAVeDHLI3EAFJlep6egeJVb
CVY98huAsZbTiURtHKztV1OfMBuANelbqeflcPDM2cYhTW4A4qz3vPgghINz
70f3th0egNJl45HgCCywAoPTsOcIuH5quHHQCwtz+usamc9HwNpzY1+CJRbc
NCtI5NwRKNxnf5P2GhYos1+1QjtGgHkEQ7qD+NpgkWHjtTACG/3FgdUKWIis
zxl5zzIKjul7DAVksDBGvyRHg+77Ky+d88Kk0fqHT5c9tUYh/v6pxINCWJgd
uptdEEqEgzhtlscIj+feu+P2ggh7u7eNfomg7/qDR4TeE8HvsKKDhwQWYsbE
UroKiHCZI8prThYLi7/4o27XEcHdkWXgFtLHewFf1tFNhEa3X9JYEywcvxpE
v49EBMa0H+58DljIGsq9c3SJCIUXTGh+2GEhCuRESyzHoKoMd3gL2cdg1NI+
4obu86kvHterYOFAqES8zN931rVw+KtI/6rrwfSN0WPQeGnHz0JRLNy+Wxrg
9XoMbvMmwewJLDw+90NbMXsMsm8yqGwJIHtZ/AoEypH8qxyrM4dQvrMwEJlw
Y/BTS1Z98wAWBj9kJ2ymkIDFQGO4iRMLG1pxxZOfSSCimz7owYuFbfodyy1l
JAhtKOX6K+/DnQu+aVgSpF/zLDA/jYUBfH2wRT8JPqz7HHl2HgsfV4oNNidJ
cDTS7VQM0t9FFKfiuEqCBw3mU3qo3g40PGj7vJMM99hMJl/uxcHLI5Il/cgf
1aYzNlvHcCDILau+gvzVGlOcGyiF+lGyaUDPdyIELF6xPqCM+Kh5Sy2sngiC
gotjhag/lbJblzN/I8JF4Q1lYxMc9I3c/OOZQYSGW+/d1lE+ishjdJteEkHO
WXHf81s4NF8vrjA/IkLS43DhLRckvzkx9KTuKHBeulMcg7CrwAPubLFROHou
z4kP5fedkZJEWbZRKBp3Nn1vjYODmL0Zs4sjsLh0TFfYHAemkRINLV0jgIl/
N1OE9NHOaLCl5o+Aw/PCJzqony8RnLvtXozAKctK/V+iqJ41s3BreI/ALUZ+
jRZuHGi8dh8NQPPozxcJ2d+Qvcq/Xn8w+fv3sinu8tdQ/499wMUwhuaNPQJu
Dsmo31dd0FE7fmoOJh2en/NH+XqR/TVJjB3NzzGnRBcCcOCrbuDEvjkLkzp3
X8ygelZxNz2hlzQLEereKk7hONgf+vzE05ZZWL0uLyb/BNUvWnlulZAZqN94
+kUF1U9mqmfn5l2ES3uPfUf19dj9gw8qDWfA2dTUcgbVE2GlL+QkdD8oOJs6
FovmDUEefMHbEzNQK5FV2I3q1VmcZsQQug9IlIU+LZHFwSdW/IjZBgX2Wnnk
6Qvg4OZdKQYREgWUeT92fj6FhU+1z2VmueeBQys/nZsFCz4jpy5unZmHqnL+
7ZbVZrDlvh1upjIPj8d9P38nNYOZu8TULzM077nyT13CN6N5in25w30eahqD
rjHhmmG7/7sgLmIeOHkF/qjWNwMjS+XU0Nt5mJmf1lqvbYZfbmFRm8XzcOvK
l6H2jmb46n3wReX2Aggk/ny52N0MH9YYnfoPUMFlkIcYMtAMy4a7W0kiVHj3
2wmCJ5th5XMLc4cSFeLmmJPG15rBRgKfEnOdCvdmN2TS92ChwjJsJ5cbFUK1
R4Zyj2Mhuo9nxjicCj6nTLO2FbEgwh95TOU1FUyfuuynUAhATcKbjr4uAisb
zQLpDQIobX2qrlj4BsQ55XP2dAOworTtxiL3DZ5kN5h6sA5AD82ftEsRhUDL
zCatzzkA9NmM2K/fC0BFs/749sEBuPEl3qqHrwAUAt/VeaM621n3vpjXOh+0
p8N3lQoMgH7Qk8jZ7DzYXSNgPHR0AK7QRqhs7ngDrToQOHVkAM7ykxoOH0mG
fYnR/BWHBqBhcqVmUDEBKpi8Ocx5BkCKjf3ZmPVLCHXLjcKxD0C5MM8LUjSa
F5PtGZgZB+DkVmcAb0AMXOGPVxXcIsDTAuoh7vkI+Dbw1ERggQCHvueK7HYL
BXUDgRMzLgQYyvO+cXirHH5lJn28d5sAPNdvnLf5XAEPzoQ3CV4jQMfFI3IK
Nyrh8ZIC7pcGAQgFV44rs1eBuOta0e/LBAh7fNuIoakK3gnwqJ+VI0DVLnGp
Q2heAKFn1MSLBLAM+yjCerAacNs5uIvSBNB6LG+v4VMN+33tnb0lCfDZc50r
OaYBWF7m6ehIEYCGJ580PNsAnDv1C2+g9bUTBsmLqo1gx+re8Q7Jz01gq0pJ
b4QXJK1gXhUCePCN7szeboQNfxqLah0C+D1+HjJt0gQDveI50dcJYHqspZUv
vwmsy+18HtgRQDk4nn0/UzOcTH7PWZ5DAHnXJP+goE6oTSsfYC0jADaofqe3
ZSdIHz1zZLOWAAUPnjCuqnRCTwLPOx8cAV6pztDuPdUJOlEiCyGdBFiu/JrZ
s7sTjtdccePuIYC36O+8b70d4JUR7ynVT4Do0QDN24kdwFx4UaCfQACXGax9
t1kHEFQTLzyYJMCnCZ5w/EoLDDl/jMtAuKetPEWsuAUweMJj/QkCmH1XF0r0
bYEn7wOJIST0vQmbLiXbAlcIB5VlRgjgucZjLfQH1WXdm7IB6Ly3qDAl1OIg
I+eTmFYXAQ4WDzNkoTlr7OCeW9nNBAiqlFe6p4kDpY0jeqYmyJ5a+ml76y6o
Z4jp+KlNgKUoSbOmkC4odbVs24X8e7DtQ3Py2y5gGz3wKgz5X9Pnz6Oeqi64
E3Q62e8CAW5W9+feGe4Ck4exrpRzBKj56Cp2dqsLdJof4/BiBGhoudpw5mA3
6NDR+sufIcDarrM86pe6gfkOvarlUQI8H7/Mb/zjOxRlxipoISz0sqr+Pjse
Zn50xxQeQ/4lWOomiOPBSsDzZrIgAWZ8I/WTdPEgLpG1vn0anbcELi7OeNhX
LYQZEieAoaSgLf1TPPR3tMueRfwR+3qZX+MzHoSNnvJsKBCAS7A4QxiLB5Hz
H34oIPsk2mJvaxT2gNvqDoVnyL6aUo4ate4eeHOC47cBsi9nnm0yZbEH0uSi
B6OQfWZLkYOSe3vhOQ9bjgKy78p9k9Bt0V6wjrJ3cBUlwJmd4xlTWr1AcPU/
xo9wYM3qj2GHXmiZjmdUPfM3HhGcHZG9YEr7eU5WnQCKxweLsqAfvis765A1
ET+rf1mghg5nmc8m0+kRwLkoSfVsQD942yzdeoPyUSnptkpGcj+wmDXqfDEn
wIM+D72W0n7wj+w9L2pNgOsfD8bE9vVDwJsuNh6U3w+rzG5NrvSDxb7Zrbt+
BKhTvWlTwk6ArPsl17WfE+Bo88+35i14EHTUHMxOIUDTb5zony94OLvTZzg1
g4DmVaPq08/wMPCifv+RLwRw2kdDu+SGh8fLOXtFClB+4QT7LQ3x8HxR7VJl
MQHWidGmLyXxkPJZn9iF8mm56lNd/AGEXfrP2FWgfH7Y7hKw9h1G2HsslRAf
BTMrHFzku0GyTe3udYRjVhXqNQ53A00ww8EfjYg/uckXz9B0wyNDG8099QRo
Z/O6IDLWBWUKEgVZGHReAobHuLYL+gpyZ7GlBLA2IhypSe8Cjvd7nL3yCRAx
VOHgH9YFGH7t2K8fCZBmpUZOsu2CwWD80Tc/CNCF51HWdZ6DQwNuJR40AzBz
XfXZD+M58LfixRxiRnP3HnsTVcU5SOKR10k4MACV53wZzU7PQdy+CuwA3wC0
xG+dk9k3B4xDkhNjqH4rav18vPprFrALLzM/HR+AHLvBrvjxWdCgDtlKnBiA
O+FaZLG2WWjvefO1F+3Xr7f0MkH9X9fx+6HDqH/4sfAKr6D+X3b+wuVTXAPg
8TXdIg31/67cz24rbAOAj5cYdUL9n85FxzQc1Xu1G572tqj/332gtTbxmwBu
rDapf98reS6xEMe5RID3BE0abtT/+08ONwmg+vEDvhIpYxTgfViLH/IkwO3I
hSccfPMQ9rBbmA7x5/WJY5K7zs2DeHrkMy1jxF8n+bGravNwcf++o1WIn5k/
2CyWLOahupil5Caq/yWipqrtXvOwgzZi5LwMAbSLcveNRM3DVfHibtXziJ97
nx3c934e5modgl5KEOCsplXazfJ5YF7wENDnJwA7WbyLnZ4KzWN2AsN8qB4a
PNhtx0cFy1yt4qxDqB947jlWJkEF8czEnhxUHyKV9+pualDhYcZ57uVTBOg9
aoHlvUOFmA0i1uksAfbZPiOy+FIh3MxigleWADDKv90QQwX5H17cK2qIb3fs
v0plUmFu39hixW0ySEy40d0tLQJzcjNvmR0ZPo6n3qimL4KlZVHcW2cy/PGL
wiTrfoMep9dBTh5kyOg7SWsXXwjt/fE2/D5kCEi4L/V8uABEkOlffclgMsB1
+/HRAgjan5Fz6D4ZDMvnL5fa5IOY36cCJ4QfjFWyvPiUB3pDRtMtaP+WUYm4
JN9r+IiVuPnTmwzrZ5tf0Ykkwe7KmAZ6LzJYdbx+vi4XD1nh0ko/3MjAJPtM
Bmv4AiqEPD5VO5Ghf8rGQsIlFkqqp7w9kP7HoyOo/ceewuJpoVaWO+i73L7b
2vfDoQAIHnHXyfDW/lEp/3QwHCg3DCo4ToaHzqNGv85XABcZk2PIT4Y9cbHx
mZQK6JYMpDJykaHmoRnz8ptKONKq9LOXnQznQf2Gl1EVRNUGEqtZyBBWf4Nc
vRcDE8vP2bBMZFDsnJq2xWFgVsVcc4mRDDdcZVZ/X64GQS2xD5cQ/kl/Ym5X
WjXs6yoxPbaLDCHfPLk6uhvA726JcjTCsu9NjEfFG2Gt7NUDXrS+40/VGUw0
6veZZXxNSP62NIHxwlwjnCnBRTxnJYNR2d3ovepN4HLk9SO/fWQIYnvayJ7R
BIsqUcL+PGTAXZC9wEDTDOMMYjNxAmRwxsbTl5k2Q/utzmM79ciwL7cy63ZB
N7y7YHY615gMDlb43TmPumHkeh5B1YIMczIJhVqm3dD4Kk6j0RLdm7YYw68J
d8PkR1XZU8jfXWqqJeOo363phnE6OJABwnyaDrR3wZ9nf2aiUHzquf0c6FK7
gOIQ4R2F+BTyNSSk1aULJBh0NdI8yUC/o0alOqsNfHBJqwEIj9LMKcmot0HS
x7ieC4hv/Yw4RsJMK9y7rv+5w5UMF0VveHdFtcKnmgzyFSQ/kG1T2lysFSqX
lF+lIn0YTfUzc7tbgO93eOgQir+ER3YKvU8LeBu1cO0wJ0M2vdudWL4WyKTv
mTThIENmHsY0gBUPJsyTq/57kP27iz5oXcJDJdExK5eeDLfWHvQV26D+sE/+
7joNGcpWXBLfx+Fhwlmf6epvEhzxE7y2UY2HVTbenOZNEkR+VpVMWMCD9BQM
GP0kgZuIlYQ9Xw/cMy23+bNBgj9v1s7qafTAnNDvrI1fJHh29ee1s9/7YMbj
JbZ8iwTOHN6C+3b0g+jvGubEbRLkJd95gz/TD9jqBaOYHWTYlHTIvG7eD6Ep
x6ZSkH4FZ5w0IiP6weE4qzEG8eOCkSNWragfjG84pSyzofzlv5txn9QPrOEj
TOe5ydB+8EABIysBpG2fy9MYksFg80ESwXkUyj1Ob4ii/Ih+fyBj7PIorGTN
b2ncIoOfe+G2CucopObJfTW0JoPe+RK2I5QR4K7lYlexJ0Psu4aXT8tHgNeg
v4PPkQzc5NWIzKcjEPMrRYaA4rPlOcQbfnMEluKVtH1R/DfyXeI1zo5AUv65
Lx4uZPhgFfk6MH0QugVX6dfRd1bdDWtFr0EwDUqj3kD7WY66DfKpDoLTZWfz
j3fRd8MlXVGeQTj+++7kgA0ZjKP3rz2dHQCzh0/bV1A9K1X71WlaNQDndM1/
/TQjw2FnrfefYwfAcvT8+vxVMpzJMB9/bT0AXyQ0P57lJMPswZJbNbeIcM5q
7BbDXjJgUs5nLXsRoTSqhGcc5Z//SkSfzxMi2GOOebfsJAOvlo2kYhoR1r6/
8qv+Q4JHU5F9l4uJ0M08/KQBxe+BqXWpSxsRZJS/Og0hPhS4NZeUkYnAdC9d
cRfCRMP8d5ybRHjGdFKzbZUEShHL8lfPk2D/BOszpjUSTBpY9BZokSDiw7sj
ZuskOJbDObTbkgQJH5OlqxCfsgrjONV9SSCiJeRwDvGvza7F1CqGBDjZpi/f
ED8EVf5E62SQwMfW46oKA6oPR/wrNstI0Llyef8IqleRM2os5p0k2DDPXH5a
RQEn4aeky3TF0CpP8yi2gQLM7w16tg2L4AxjV8/DFgo8GnM3kU37BgUJdTdu
d1Lg/jVmJeu5QnBQtJQ9iaeAYvCLrHGpQjhu2yn1vZcCHyvcXwg+KIAJ3n3f
LPspUNdJj49vyIfTRKa2PoRZ1C5lZzDnw6F5kRqrPgpc/8aQgjFOhb7D/KIV
aP+vJf87hz1TgCmrR28dyddUb/a98TwR9gz5SHN1U2Bf83TemcJXcBbbF8/f
TgF/MmOlymAcHDrkh2XGUiDT4tAZg92xYOQu1jZVSwG1+sYf24FRYPpR+0p+
OQUyBIIWpnaEQ1m5NuOJYAqkfX4mm3i7AvLGOs9/8aXAlxcmOY/3VsLkYztJ
JQ9kX5nLxrHqSnhVptY240SB0TWOcFqPKtASyRTOsqfAFY0wj7KTGMiJ7O3x
s6FApWR9JXEYA7m4rmxbKwos7XBrDNWohlbLA7POlkiequsFq8xqYPGmkw+5
QYH6I8xOG6UNcPgMwfs9wtSje0PmDjQC58Svl2MWFJjPdsVWuTWC8IuPo9K3
KXBaMmZCuq0R3HxZlz4g+TYSv7OPn2qC3We4a8SQPuzvnmtohTSB9+lPaThn
CpiHad3wG2wCH1pJRW8vCkxXTHH5STSDYKxBl+ZbCvTCZumT+E64NCh28GIG
BY4eK9JS9OsEl4r4r64fET+S4pQemXfCJ7wx82I28t/POWlH+U7AUXWOfsuh
AOuk+R86gU6gTGZqVeVRwHFKPP7Ojk4Qk2wzYiqgQDc+WPVMQwfsyBTyT0A4
i8Gqxj68A0wf1IaeLaJAKfHjuS7+VsC8FnbbgfCIb3LqTmILsDzkVtz3jQIr
D1Xi9d+1wNVfMcG2aP+AC23aqFULvGHsEfv7Tpibvtyh7pMtoLrQWTL4BfHp
+ZSk9iwObI7KbGwj/b0H2cs8c3DA9j7wggOyz3iskM/REwdpLrfNXvlQYC31
etyJoC6QlnOemHenAKHoecypN11gb301+A/yn3h9vcHLCjQvey6FtDlQIGnC
jGA6iPoXS3y7KfJ3Q17rrOVmFwQdm+vLsKXAMQcLoTSebsAvs6XlIz6sxzHv
+yPdDdYiu8qC/r7r5u7H6WDSDcOkM4mcaP+f9ksycftRf7kddDgTYX3r/MpN
CTy4FkhUrd2lwAOzUyc10f1C1X7zCwPiX9FV+Xk3dzwQ9n/41udCgQVhuTfm
sXhIK549bY34WhFPM7eRg4frIlrLX5B9J6vaiiTb8UDdsAnL8adAiTYr9/Ys
HswCNj6uBSB/Va/pr/T0AHNLNJca4n8qz7XqruUe8FTLzzNAfJHiuxTPw9EL
r2NsOrmRf4hO89Ol4r3w5/UH8xR0vs5Lw7i3ur0gpqvdMYL0C77/SaPcuRfc
4aj4mCMFbr6yeL/+tBfMk/QPvEf4rsGPI0pfeqEEsyjwCvn3+Tdl3SzbfpA3
/vCVB8k78knJnvqoH3ZI08XfcKWAOp9M0pHMfrjWJMt7G53/QT/PXrihH8Z0
uRmOIf2GJA/4bJJRPyxNLU+7RwGe7tRQf1oC3NvBKTiI7I2+dCQkVYAAusSz
ja0o3xPs8+P15Qngou51thzxYe7qkvNu5I/++3ZZlp8osFu+1H1XGx6yDEP2
GHylQL54eE7iVzxIKU/sDkX8Vtu7eKonBg/Dn6FqHfGRXymQs8UVD89ezhR+
RnzFRMz3P9XHg2xDw+wbxOfZW0AVO4eHz1Gd3Z0I+4Z0zdZx4EGiN2v5UiEF
yCfYm5KNumHG2MjpM5IXG5OoLHmhG97Sp7dfz6eAVeKxQTJXN2B1h0bUEd9F
3rIcqNzoggvvz/T5Ir6vNLNadRO6wGXH7O05xHfBG5qc58u7oCgqMjEd2Vd+
/oHmZkoXHKl2YXiH8v10ltyMeCBa3z31/noN+m6vID8dNgoKhF3hl5sp0OGV
8bLGZBRUyGIhHKi+xpEmtLZPj0KM/e0TTaj+Cr2z8y/dGoGd3DeybqB6vTSj
EsHaPgJfeXSmv6P6PjzOeoAndQQGOfd4nBr4+/943OZXXEZAUnA54DrCN2/X
/qpUGEHzqkMYVw8FOjvnV+5mDIKj0PAPQVTvh83TROW8B0HbQV1/Pzovf6Aq
UBL1fwPR4QEi0ue9hlG9I/cg0BU1e0bjUD647/y6YwbdC3cJfD2M+td0ZngJ
a8UAMNAYV8Wj/tayJ5Q7J3oAPn03fbiJ/I9dvfH59+2/v8eKYXocSoGvPTwS
qc5EOHTzXiQvyoehbRGfrodEaDe/dLjQG/W/NRuiSSIRtl/xxJm4UYAjIC7n
VA4RFixPcuxBfK8pfrsp0UCEPx2xp9pR/h7IUi50GiTC7D10DUf1IMynuKB5
iQj6G5zHn6L8P8jzoOIC4xjQVuSwtKL6TkuxdktUIYG09g4iFmFm/VMye81J
kHTk59GhmxQYr4n2feBOgp2vJSVp7yD/uB4ZJzwmwW8/uvZL1uheSzwhvz+V
BMXpooyh6PxAdS8LgW9ofpBnMh1E+XXEVvXCEo4EK0ZM8XIoX4Q454d9iSRg
Kjx6oQ7Vb1cJLsJgzCwcrVwuFkd83JVr0dMQNAuPQnAy5GKUL1Vj2AC3Wejb
I/e8v4wCh44Ta5nvzIJeGHmTtZICXX7D4/cNZmGp8rZg2F9/O1ywxV+ehYUi
0QuXMBSQw+RGH5aYBcYOjlpRhA0frGTZHJuFZydP5p0opaD5SJkorzIDIS/C
Ko1LUL6YWl16IjUDu+l1GppRvMLGrx2ZRPd7TufSQl+kn+kJt34TzhkYE62k
OKB8DK5beTG3awaK+mQk0lA+7NZ8fu/TOgVOHVvuOIjygZNjV1TyNJL79qTT
SDqq9+OVpc0ECkwo3Lc7FYHymSqv/YZuDkTJ2L0RiA/2aTHO6n//PeOVdmpq
EAXwvdV8QkfngNVi1dYZ8YM3+UaE5Nk5eLrztfa639/8ZGq9ozAHJa8WGmRQ
/UxTbp36pDsHhufC+mRRPfojZdq58+YcVATq8/xC9Xh/speLlfMcfAgzPPgC
rW9/+EC3SXUevCwuF+5F8rxdb0QKGs+Dc/UJM7X7qD6M06net5mH1CNEIzl0
fr1RnluF1zy0M3U/+PvOV2uUFO1Y6Dx4F0fIGD9EfHhtuIMYNw+qhoXh98Ip
YEDZE537bh5uXNFb0omiwDZ5hKSeNw+7Qsz8Mp8gvmned7l5dAFaPGeV0/++
A9jBdvKN+AJYplJG9EKQfTIlJpywAFIb9n15f98RNb7sgdFegKI1LcNmpJ9B
ZGTzM/MFeJWwuecVskcoIul5sMMCRDHe0OFD9h84OrTx2G8BwoIPbpoh+y+z
Gh14E7EA2nYNj0ZQPn0S4vhBc5MKmVgMSz/Ccq3ZvbzOVJg+3eLxBNX775j7
z8UDqEB6laOzgfrbUfbdFy5GUSGYatPIj/LThC51WDiZClI9KS830XnvlJ5m
//lIBYYrLkxPUf3nNLEZ+lxCBb8QF4bvKJ5fDM5Vnmyiwkn1uCR/xKcyYpLG
du48jGYqLx9EfEw8oyFkiPxFt1JtSY/4feYn930P5M9tYZ7k89Wovkj6s9oh
fwc+cvv2Bc2Xb853tFxE8bi6fFjOvp4Ct5+w5C5Zz0OpcYSwHapHO5OCmhKM
5kGPqZLyEeEFSatT0ijeVnTlU2xovaSWmVqP0xzEC7fqvKyjQNRNfxZvizl4
g53OMkfyD8/i9Y4gPjnZncm2RefL+54SJMIcyAfKhhYj/c4rvX9ZLj4Hr7pD
m7RRfp4+9+hVxZE5aDh//b4Iyp/cybbdcxxzkKNUxW6E8oVubrPQAPG9vKjC
4xP9IiS5fGxZ31cMDfaae6x2L4Kf2Ldr6ZZFQOx2HX/BvAjZXJfCM3K/wVfq
44MyexfBsdjrut2vQliopDt8jX0RZr7rHjJWLgTSlnHuGMci0Fp3nR95UgDB
zd/GR/ctQrr/+tDd7nzofZN8Qnf/IihxM47c5c4HVu3WmkDORbAHNf+yK6lg
J2zWdhPhBB8rZwWLFHgb/aAo98AiXOrp5Kb3SQQLGBt3R/sP2OtEVD9/BRuL
Ofuz0HnbjebMQgVxoNknZKTDtggT3cVCPwjP4IHXH+a7LIsQYvNDOZ49CgTo
g6i/kH0bonOk6pBHoP3aMVG4iwoC72saStwqgC/yWNkqjgq86326kYcrAdhT
+NoaqGDffnriSUcleKVi2gtrqBDIs6F7LbgKvmTIyuVUUeF2ZaJWgCQGoni5
zlVVUOFuc39T4jQGajUTv5PKqVDSMMz6VqcaXqVmpPOj79cKr2bTfqwGPlwu
kQnxcK0qU4Ga0QCh/Z4VZs1UyAnLaxWmaYQzux8M1SB9FkKnCczXG8H4k1iP
TDsVPl5jO3ujoBHCLyXFN3VTwY2QvDi1pwm+WBe4/32fLirm1+d7lk3wY2t+
/+6/f1eWkRU5WNoE6evi0cWTVPC6020zzNoMmlbitE9ZF0GP/uoZ2pedEPHn
Cssa8t9+/oX5Se9OKO5KqdqB4mfGdmD+hkknvL0sQPyK/B+sxange7ETfMoq
PLZQfL5pPTqrydsJT9iXCigoflzK/c6tqx3wKkh5vzfXItCHZnaWFnWAd2ui
YhrC3069ID706QDPVOMxQ4R3URc2un+2AI3uoVp+hDl0aY+nlrXAXNtt70dI
3spj2t7n91vgk0eRcTQ6byxI1/K7bAuk+NL9lEL6TJU2/QjbxsHGH3HBB4gP
LgJY245qHOCuZpBtkT3yraZa+Ic4KK4vdFpBfHjwIay8RBV9d1w0LVmhQmpY
gjbZrwscK91rGBapQA1w1rSK74LmyO5Vhjkq+LPUaegVdgH3XZlr5dNUyLjc
JfyqqwuezdZ9P4b8eSUyJfE4tQtehahs/n1nw7lKYv8Mcze4zHlM8JCpQEln
+YU/3Q2nUyVVPpKoIFR4L/67WjdEV1zKjxyjwlk5uaHNxe8wVSOL7Ua4LHrI
4RcrHnpluhy/o/UKmcLCcyJ4EPhERx+F5A+v0d4q18ADM2kj6hc6n7aP08rY
Dg9DIYFxAjNUsCm4m/M1DA9vn6zI/JynwpJuPinnHR62n5nAwx9UuLyU1KWO
wUOI567VR1Qq/HyeJnfwfQ+oj9w6CWj/nStMb4dqeqCfm5nh7/uI+YESYlzE
HjjewqY6hPRb7VCkL93ugRXXR8KNI1QobJP4k8PfC+XjMo9dhqjw6FBqE0W2
F+Kt3mEIA0gf0ydjhua9EFj0q4YeYY+rVgWD93th8KT42JfvKN/S9q1tXuwH
CVMakRSEP+Zk45+a9sMfpzqsFp4Khpo6rDy+/VAiPKWP6aFCbkrTakRCP9zb
uZvyo48K9EYB823F/dC85qM4ieT3GLq4d/f2w5nTm8nxSL/P/mdOhq32w4Pc
nmY6FI/OOxUj3/cRQIFtvW8A1beYynPVBcgfi1NSxyVQfYMG89pz6Xi4vGMX
kwSqb/lSjHVXHuEhKVb/OgHxK4Jmc4zGHs3/eiwHTyD+TZec8XTXRPepsNbw
A4if1aHxP7NF8eCiJ8XxCWGV1EqO2r14YF+/eoeEMH2MgXfd0ne4Od312Q3x
+zd99NkU9W7In9B7q42wZ+FCWrJwN5R/eKTThtYvpKSSPrF0w6slR9oldJ6+
VvOXQcS3tz3u8qUoP0UcCz9CN7q/homVCyL9mmNuWUwjvvbRrNpcQvyXW+YW
nkJ8Prl92XoV8X9OX1xW+34XLPw8Shv8992crfu2BcyTwCPS07+B9tvsCXZM
XJsA+l+fM6bQ+c3hia/FiRMQ5n8oW/PvuyzNTvAIOwHZGu3Bx3gX4YiUT2VW
/gRwslvsdT64CIuirO/eJU/Aygpn7Gm+RfhSYB0dGjoBrN7m8SYIzwX7njNz
mgCT84Way2j/jsXSReqJcbiifKX873uh7f0SO7Gs49B3S78tnWcR3IW1L+av
k4GjUWvvSXS+7WqufCmRDH3pmXf4kb9yZy2/zGLJgMmU3wpH/rjbVERvXEAG
Oa4cSztkv9KAaibjazKo/7Zyr/77++WvuOtZwslALB5o3Eb5dcF8x/WQkkmw
FusuahukgqioUKNU+yRcP/py9CPi24SAubrM+CSYLLWQX3VS4YZ9BSFscxLe
ysXWx7dSIXo8QpmRfQpaIj6NfsVSQTn5h9S3k1OgFXNkYRjVd0v8mkKg/BSw
8MNOQYRT2cynTK5NQbCQs15dPRV8qpJ3BiRMg4IgF+E46jfPpyiVJjnTcJIr
Kjm1kQoSG047hRqnAa/3pPgckq9gIWdAHJqGqKqezCF0Poep1AW35WnYXDwg
n4z6mWH80rX23RQonT311QHlx6Mb31xnDqN7xEJTmAbKh5OPLruWSKF7pMnd
SvGdqD+Wvn22EDgL+bhTBQ1oHjh3tf7WuusssL+Tbf3NsAiTB7fZGm7PAkuG
ekkf6p8fP+a8vYXmfSG+IguDPYswHzAt8h3N+/tW9UYdkX+n02lmT6B5/09g
73NBxDeVlePH7qB53+6e4Z5AhAPP9p+O3TcL0PHjUB7in9DRsQm8xAxYeNGf
+oDwazEvXprjM9Abu9Uoh/DMh8BB8f0zcE4ff8kd9auTR7XDXOlmgOUn25YK
kvfL1MiheYUCjE99KkqRPtUZZd2KE+he9vS9TTvS99VQ7dwEumdysgXzhyF7
bHa4dlU2UoDC4FE7j+pFcZzg2Sers6DNoe3YjeJtvL5jMA7NR+Qq5XduyJ9Z
NPxzveg+oHJ5+VdbGxU8PU+baR6bg8u2q28pqD9vWb/bMX1uDsxW36s2ov69
U0w0Lf0ymq8ED0hao3jvDuajeBrMgWyTwYUmFE8pA+p9gztzwKv4SsyjjgpN
olj7ssvzMD8lnJWA8E25YlKSwTzov5zxD0b88J9SGPS8Mw9b+DVBUbR/aAuz
KO8+D+E3eD8kofPUDNew1OB58N0yfdbcQoXT9a/4HsTOg6Z3x+/CDircN2jI
J76dhwuExtc3UD2VOP/ElRXNu8fDgqXWkb01whwraWj+550isOcge3Glh9Wz
0Pwfx7datx/NG+9XW04Pyy9ArdOU02kkf0f3aTEZNP8/P/ESu4TOt2uNwpeY
LUDfQvZJR2Tvec3Hj7TvLsBdf6JzEtKXl4M1ffHeAsj9MDsYgDB3S1hgYvgC
iEYfVRpAfE4IKFBpMaIC69ZlGzfkz1Zdfkk3ayoMHojKrEDniftJPd7jieSI
DUM58r/z1KuU2BCUd9cndjqifHTLJfRtPqPCMfve622of1SEfcqTT6XCOQsj
5eG/72b96iu++oUKjLivJomoP3FXGsRJorlsJHP6bt9vKjjo+M18Rv6Q0wm/
5btjEVpm3iikp83DD58nDR9Rftwfeyh26/k8KJ4vTLiP8uOrk3f1bMg81B2T
aJzftQiC/ts8uh7zUGw+6P4H8etwgYdfnCW6Xymnb+UwLgLP7dBztYbz0OhB
92sb4fmYvNRxpXnoLyJtf2BC81VhX56/5Rw4k7mUXiFc954inWKI7otR0v1H
EM7cvKlQqzQHk47ndmohPl+ZIJ7ekJiDdx/eXj6A5A1Ef9JXPT4HpwhBOg+Q
Phv8TH9K9s8B8DVyPaZbhKyYQTsj+jnA3sU1SdAuAvXzgc+n1mbhAvuzTCu1
ZUg/KHzuWXknPC+/RJ+jsQwLs89Sr7zuhPM1eaHJWsvw1s5I4eWDTqD9brZD
SGcZInE5CtE3O4HyjRhjpLsMKusP/ygpdAIuqTDgmN4yUGmidmIFOkGiJ1g/
BmFxDrNFsR2dYJnv2pKIMEvkpzXOug4gcCiEBiB50tSGrnzlVkjO5HsjiHAE
GKbco28FG5/rT5y1l0FWjOGJe2MLNDGslVxD+gwqPltoCG+BbR3JtiGk7+vu
DFK8egtwqipk0akvwx3fvdIszC2Qjcu0aL+yDLva+y00OnBQw5Z3WUZ5GRjd
q/Q84nAwk89jYCW1DNx2esWi6V3ge7WRVkZiGbRlkq5RMF2wy/5G9d2zy+D/
p2xg13AXKOytfr0itgyCvsm7vTa7QIrO4x7hzDK847rjdZS7GwTvH9zgQbjj
eP2T31LdsGvwYHSR6DKsHHZKXTHshpAUPa8chBd5vX+sunUDvtKa2IfkGXUq
ZdDw4iEylpZfVHwZklIKPTYv4OEUOcZ/BOGRGMbtgWto3ihjfDWL9GHLzI17
5oEH51lunCHSd7Ip6vXuWDwctbuvxInsMaU1+iD5FQ8fI++tn72wDE9Dl51p
WvAgu/0wM+MisvdK4bjZFB4eH300wSG9DG3m/ll9TT2QI/3p4iW0/+WOExbN
4z0wp0zrXn5uGUg4lQxZ2l64tF7HmID0MTC3Zz4m0AtnN/Zc7kL2ZnE9HrWX
7wVP2kPCdsg+W7eHZ//8nfe8GhJviCxDGUfdZCea9+Sqe4XzhZehNnAe05rU
CzsoYrnDx5fBrWMX4xP9fmDhEm6JRZjhYkf2G9d+YC35k5yBsPL+7qLimH7I
Uv7ByXNiGWJ2+1XUfe2HTrb09VmECU2TZrlt/ajvn6/hP7kMH1Q7VBzm+uG0
8duqL6eWQYHZVI3ERADaE8w7k08vQ9X6sOlOIQJwew5GySF+Pb6aH1A3gYeI
7jNDNojPhsF2owxYPGxVxh+6oL8MxytVr898xkMtl5TiF4Nl8FOyFfaPxkPb
0RCbZsNl2H7/FtPuiubvz4TJ8KvL0BUv/3HZAO3XJOjNIpyd8vLlliQegiLf
2/9AODct6vIvTjycsY/ZxiJ5GnNVMYvO3XDv5Y8aT4R3CejUrOl1w4CS9Z06
dH6tyOZ5ToluOOE4p1aE8ucZp0HarQPd8EJmaL8O0rdsxSt+ar0LiFW+yU+Q
Papl2VEVA11gmuI/5aK5DPuk9zYuVnZB4yk36S2U74+9dfRepnVBDZ+6iKfS
MuTLDu2ZvT8LMadUK2tUlmGvzXOnTcdZ2EgUyslXRfH82RvZc2MWzLi/Daqg
/Hr0lNssTGcWiu0krvqh/FtbtqNywCyM1NHc0UXnja8ecgoXm4Win+uP6hEu
ZHNknDs8Cy5HKgMICPPaUrbV2WbhN01ekinaH7bj5HcD1P/XIgaMWBHeU25u
U3BsBk6/3KCzROfZ7lXtPYz6f+pzPyYTpP8F2SGzNNT/Y8950C+g/NZLf3VM
cZUCxLZLrSeQ/pe0d6kxTlJAKGDRkQbZJ87g1PqnlwJ5QgMigQrLkKxtFy/e
TIEXXCyssojPR/Okhw9QZ2GtNcuIAfF5mP8iR+DvWQjszFsVRvxtU2TR42We
g2/v0+g+I/4MpjcsjvDOwZHft23DhFA+1ixJ1QvNgVYrrqUc8e2yZZt2jfQc
dF679FEHYSF7X5M21Tm4GqyjII/wnWlZp1GjOVAK2M0wifYr+xxQHBOehxsv
fG+fQ/JnD773WLw0D8PBbAaDCJ/OtCEsq6N+8qrJk4jyZ9uqNppkMg84zA4x
RZRvzNHmFQW26Dv3VM4W0r/4qlGKhfc8eD0mLrKjesGb9SBwIHQeVFQkigJR
vfAN8O4+FDcPdOQB4Vz0vVdrYYB/1wLsrghJ70D7zxUrcJ87sAAyntvVWsj+
mHsieY+PL0DY/BKNENInaDf+GbfkAgxKfcmyRvZcv+4a1K+0APIhjtU7Uf71
2jeIYAwXQGC1lI9OcBlWC7OE6ywXYOzpkqEtyterMjE7Bj0WwMOrYvn+4WXQ
+nTnUI4xFe6659+5jPDqRUblLls0t173F3ZEOD9nt8iKDxW4OsylfiJci49V
Y31MhS9nu0UoAsuQF0TDzplABbMDzQ9ljqJ6mBHDQPsBzVkWs27UY8tgsbRU
1VxMBaZhgdWdSJ+Sj1Ojt9Cc0tX6bOkM4nd9vKVICOrvLlxrH/7ybbew5To3
8tfkvrndgPjKwxBTGuA1D7mwtYlB/WdPRi93qc08KE/JJEygfOsN//T9u/E8
8HB/l8hB/ev9RHt5r9o8vIy2NOJD+Vk5ejQPd3Ee2C11MSIIh966mVJyeh6O
2r7YCEX733U9ai66NgeMesffSCP8S2TjZdaVOXh85+mXGHRexTsp8fcX5uCm
Tm9kJNJnmkzw+3ZqDpKOp3QKoXwZKAPtcR70vbVI1xnlh9iKitPFPXOwaFbJ
aoryozWNP7JyaxYEUu+qz6J8cGo5ccF3YRau696TEghcgzCR09M9Wd3wY+jB
xbCQNdDPuDg159cNQV+EmW/+fa+dpYTjrnY3EO1v//4cvgbaAyRzu8PdwOro
mHs3Yg0iuLl27lzqgmnJLr6kyDU4l5obcK22C/zpKNEXn6yB6rVGl/txXXBV
WuuDGsJwuu3VM6su+KyT4nTk8RrQhA9htpLa4M+V6yfeIvnRnIm75OTaoC5v
uyn60RrcWGhvwo22goO01fp86Bq4d9kZD4e0gsznq5+qkL678nPKPgu2Qh9p
TZg2aA26WYvDHVtaIOcr08Ey/zWIO7Wn4ZpbC4Dyst30vTV4fq4Qm8LdAhNX
N70db69BGX/YeD8NHhr3pxv33FgDQsjafrIwHjKERIvrrq+BeniMeqwxHrBK
1TYXTdbgq19EBvYhHnqu20xdMFqDAB39TbdcPKgVnrSvvroGyqyMfS7DePAl
GuG+G67Bh4TTCR+YepCfWOLdEda7auyzQxphe5I/VX8NpOuFNwxK+0AuJXuB
x2ANWn5uHcyb7IPp6/ZzHQjbuC5k/dzXD0/KjJnYkfwCknIru2I/GAoYRw5d
Q/qR5ntGnPqh6bux+Vmk32KtjvyVpH4Y2bd1iNVsDXrO/iwTbewHjK69gJvF
GvCJoOv/Uj/47PP7Ou+zBvcJe39/1BuFre3w60n318Cgsju///goFEvl82Ee
IP9g3fxuboyApXgA9/XgNSiRmvpg0jIC141o6uwfrsHuLzunRl6PwGZ7B3kO
xcfZJ+MIi+sIXPb/9pKE+MNxrcl3W3EEtnOlVTVQPCWCXCXb941AwB0MnhPF
P/Hxj73PHg0CYed9tUUUf+Wb7I9MTQbhGFnxpQzCl5U19kufHgTrS+yCP5G8
l9r1TKpbA1Bm2FUqhM7bNP6dktY+AD+Cxu+0I/1yOXK67qQNgHVm6KNppH9C
VLt7hucACJZSB32RfXwVOb8fqg1Az+F3X+qQv9Z+1lBUrxLh7d5Dpw4gf7ab
1ltcvEuE7gjlugUUnze+dasPgogwu/nY3EB3DY4JLT3YE08Eq9FPgYraaxBe
FvC26wsRdnq0WFdqrkFNWuBIXT0RRjUKVxo1EFamvsMPIqyqW2Xx9/crL+er
rP0gQmqByb0otTUYMYEfBy+RYPa1aVk+wtgQ+RoFfRKEpfBY2KqvgVhtMKOZ
HQmK3rzf+Ij2S3Nr894IJIFizgbOV2sNfs5fNL74igQbe3xqe3TWIGdK9Twp
mwQFVY98K5D+Y55ELY06EpgZ20mLIPs+WDQbWRFI4ElK+RPlsQb8ok5abkyT
0HNlR+0BxAellaoW15UJsKbqc3D6rcF6//6OwyMTUGeeJRSF8qk4civqSdME
dBEWn3sj/0qe77esyZ0ATYsuYTyqJzPiK13tiROw4at54j3Kx+uYCKeakAmo
JMnQTSJckVswlOkwAX3nLuckIyxemXHqz/FxYP3yQUsXYd63mjwTLOOw8xim
xxPJ6zFhvEhYIwN5eKSFGZ0nMsEmShklwzpVgo4b6cPCIxB5FEuGiN/yWX9/
zwLD59j6PJ8MojknxJ96r4Gxyydd1RQy6El1O2y6I/1PnlTVfkQGUkQWQQrl
7+XKw39OFk9CDU5szwDKtwsUl7uibZMgFlWF2aW3Bt79pb8fkCcBnx6XXoni
vZbNGbJ3cxL0hvjZaZD/L6mZJXexTYFXnyhbB4oPnd6OzuKTU8A6aHpNGOFX
L47EFspPQc/4c8UDCFscvn+57NoU6AdgyI1o/8kL1rL8ydNwfpgrVB7Jp1V0
lD2UPw2H75XHKqF4vtYwn2PGTkNUMY97D+Jfc4xayeDoNLizKF5YRvGV2yt4
OGBtGuh7Hd4mo/oQaIUrIzNTgF65irfNGPGpeECV9hgFxKcka8NQPfjInvml
RZoCORmM/SSUD9b4AwWNXnMQse98qA/y98eLmCHzm3OQIBRzLhjV16xn10PT
1ND9Me4t59/f9xCMdT787uwcrKwYFM+hfKYzaNV0RPPQO2EcVRPlM6NNYBPL
ToSLORZ5UX/Akj/ZvZidhT5CipwpwmNCJgdY8bNQf/ikKA6tT7qfzuwdPgNc
DnvTfRCeigzPX3SZgYZkSfcXKP8v9tbJ+5nMwJ8s3iNH0Hma9lkvBRRngPZg
8pNDSJ9FNa/IJaEZIFDukJ6i/Oedlezb5JiBdlb5T66IL26psfs1tihwy+hs
eTPis2NJW97cBAXSOd4mHDJfA27vqdtSx1E/vj5HK4HqgXrMi8tqaP5KkX7n
1In86WXhy/tNbx7enewnbCB/21Ij3jmjeUud33jtC4oH1cvAxvbBPPT4Jx9a
QvHTK1hoiX05D4amDNfrUHw9HnHxEbPngfDwitkJhDVJipHK9fPAzybobKOK
+t/Gk0z5vVTg16l/boLwcbf9pp8FqWC6tkoaQFg3yt2NQ54Khgfi2OdRfWj+
4bzf5hoV2PhU/KMRn+hzjd0THKlwfHtSuArJZ3ot2pH8kAoCj7h6/JB+TEcb
I+8kUaEm4nd/LeJ3fsDQqdFcKgw35WKPCXwFAfqjTyTuOWIo3g7DBMkvwOZ2
WuRhiivGVS0qRvRKNtzinOUrTXPHvD3mLJ599TO4LpSaR2h4YpK8SirHb32C
Z+dtrTdeemGMP317auvwEdQ+JmwqPvTG0CQM/2zw/AACwT9fE9h9MDTejYzP
A7Kg2ceedFfRB1PU+d78XXbc/+Eob79LVbH/refojMpYSIv5Tx5DevDEz5Yn
/523MPOJd2grHOz+6fPV+Nyb3vOhYPJPX9zrbzYn/IOA5p89KwUKDr9e+wLN
P3sN+BqaFj/lw9sH7haTHcbQWj9V+VKgAPT4HLcaPtyC3eZ947PxBUBjOz98
tsAK3JxtXmSzFYIA15Mb3XR24KlSo/0sshD0siacc5PvwoHPtRM69N+gM0ot
UcnbERQKv+akBn0DV1kmonucEyioXPpwcQt9F5qxe/nDCTi0PA8MdFT8Hx7+
w+KpWfnfevnJ2b76xsr/5I1qzrs8VKz67zzSUTUh2/IqYPunj4ZUX/9JSQws
2vx/fR+1Nv4J+IwBhX/2BJWt+MWyVUPQP3t/vaDwyozVwNtjq4XWE2bQWwFn
ZvlqQUD0F5PzeUvwN5RoiDKthdwJfNFStS1cHSj5+etVLTyrdnz2NMYBYrkZ
HPf31EI19vETmrfOwOEmYJK3rw4+OPrzyN1zhdio+M9fDOpAegw33AZuUOQZ
cnA8tg6esWzay2a6AUG2T1yOrQm4/eKshd94wn4KWfexbhPckqvZJ5PuCRmn
g9/XRjdBUFrT+PQVT+jpZ8U0tjXBB/adIQ4RHmDLy6jnwtwM3CdW+SQc3MEl
m1c+XqMZHgv2iVDmXOEmx6EKnsfNQGMWvp94yBmqvwxbdNc3g4KVdXd9lj0E
/vMH2z8+hP3zF+M/vqj98+f/+E/85+//8X/4Xzwe/+Oj7L94/Y+v7P/iyf2P
z+z/4v0/vsM/PvyH//Hlf+v3/+PT/+S5/+Pb/85z+cfH//Gf4R9f/8f/ln98
/h//9f/x/X/8l7YRGBlzGIV+rzomCXU3DJPt9x31MAoJyR+PdxE8MVejLxbs
3IdwHI7l3ZgPxnHK0q18YgRy+4KcBiz8MC29Y3t2lYxAf13oJo2ePyZHb+z5
dsQILFJ1rlMLAjDQdkq12gytl7jV0R3xADPivRJhI4rwCcYika4HGL3C7VtM
bwb/w4s3cOm5LoP/rQ8aYDdxVxz8T57lVfbRu/sG/zuvVinG99vEAHz4p89g
SukFp5IBePZP3+P1hynZTxD+Z89afTdzzM0BaP5nL+XOpaXJO0So7qhVEUm0
A/OaqoKFe0QQ5+V3NrvlApWZZ28oxRCBaCoVc/aJO0hY9Bf2ZRBBT12XsDjo
CYXrSuZvKojwzGTzLXOaN/xMl+mL+E6ExxeUU+8RfCChoCQuaoYIix3BhPuh
94AxkLqUsGMMbnH1sOal3YOIyjrum6okMHnnn59j6A0yhZIethYk+DDcFE9P
9oK9rdWCFl4k5O+ZsapxTwh9XJEkFYW+byodcjf1gNquLTXiOxK8zYky3X3Z
DbT6+hv0SkngGvfk9ENwgmwFvmbfDoQ5mbmvTttAzvq4uM4ECaqf2e5/SncT
YmmNHsZxTcKtpLdu55l9ML9CxF6G7pgEgepHT/ApfpjUVySn47MTIFCS5Znx
PgAjUreuFYSfAL7tMzMLbEGYwbLzSRmVEyC+kisesjsY0+ZTNJyWOQGyTK9u
+ZYHYw6cHygOiUHrsw8ddBAMwUwwKRCu3UM4w52VWyME81qooT5LfPw/7LR9
etKPZ/y/9d8qdKrNaMf/k5fl277TZJb833lGbiz6AXgy7P+nD/n1UXFCJRnY
/ukbntfD6JuF8D97Fs/m8N6NRXPgP3tPJnr/tKhDc9zTVxduJt2CpSQJjABh
EtUD+/IyVTuIVoiKvUSdhMX+L7sZp5zB5W7K9VT6KVDwMswVveQOgcH8/Yp8
U7ARvZUk5e0JAicV0vdLTIFrqM9+dUFv6H+ULM2kMQUmIfXqduo+0PtKlObA
7SloTigamhzxgYclob6cWdOQsE7+uijpD/rZVe2nqhC2FOPzlvWHhp4ERqme
abj1rYv6+9t9aBL+GCw6Nw33cIVNfWl+wPjlwlu6nRTIZXlyPIvGF/b2ao5k
81CASKbZbfndG1asv3Zxi1NgI8Hf9tpBT5AtHJCQuUKBIMs6C94BV3QPoGg+
C5sFmn0xElbvzTEJu098GfSehSCbzUm6fZaYPE7V6UXbWRDPu9/sym+LsZK8
1t1vMgt6t3nU2F3uYh4ShMxS1NH6JQ9TKv3/Y+q846nu3z9eaZOZJpE9ymjI
iEtFSspKsjKiRUakZWYkIioNFFJRNERD2ZkHmcmxwsFxrDM4RvP3vh/f8/74
/Xk9ulzX63Vdz/fn8/7cd/ftbFF9lnyEniaq97015GqPe9ELxVH3doURSAm/
T8r+41EUmdeufHI9+nPNfPkzSp5Fby5ulZjQHSbi2MUSlEDVYSLfNay/Wlhi
mKj3/mj/VAG61+F+rX8+BgZzDYMuR8/19ZWnT0/SQJyjN1WO9iQA3fM8OX5u
NUstJrWi+Qj+z28ue6/c6MwI9Hy6nTK54gyUGXJXpiwZhZ57FWcrv7pDpjYt
KmrVKOxjpqU/cPOCGbGO1DTpUThafY56WtgbyJcXr+3ZNgqeAuKMNgcfiE5f
PLpDbxRUQk3DJA6dh7dyeosem4/CPNu3cp86z0NTgoWe8PFReGMmcfYAjy9k
dfw2va49RsS1B3njfhuNEfnMrwdenLAdI+o9+3XAv9B1jOgXfuTC5M/LY2DC
0dOsfnq5UOQY6HL0flY0qP9zfwwaOH5IQdzub9NRzPFr8XNxY+PacUh5OMUV
sPs0PLxGVt4uNw66PF7vaxvPQsUbJ9datXGI8Fodb/HdE9ofC/bE6I9DFVcJ
4yR63zoLljZ4Hx4HftKQstITb5Cv73Y9d3wc2j54S9CDfCDV/UlD8LlxWJMk
ulJu/nmoYNutfBA8DvssOtdGS52HkOs2fMwjdIjo8RdRjPABhdkXu5ecoMNH
P59d6Yd84GtSs6/QeTosfW5z2/ajN1TPcn3hCUX33jVHeZ+UnwNv7aT9w7fo
EPTV8NSKC14QvdxdOy0VxQLnLxQkeIBZJGtQCd1zg7YKSMvddgWTTO/noYV0
MHE7m1pAPkHMA/P/iTMvzD+eJ+afmDeHt6ecfWAe8b4wr3ifmGe8b8w75gHH
mBecj3nC9do4vOF+mEfMP+YV8/+FwzPmn+Cdw/9GUvOu+3QG6DYm84g4OBY9
SPZiaQ+h+FUTeVz8RJH0swWxVT0MYMyYf7ZWPFP0L3dZ2E4yA/ifMzV/+Z0t
urnEZ/+jRgakiMg8G13mWbSdOWHPqmaAw01LLbVpz6LHKhbm2qUMUDn5sbsu
zKvo1oXanJBPDOixk5O0f+dVJPN9Jmv/wbl41QbPFbH6c/khdo3zOrTn6skb
mK5WVpvrl/fgc0esEgPmcfTczihtWCiL6nH0ir02d78phupx/NwLZW747/fV
qnD8pscvUNkrzwRx788vl887CcrFzoEpKig2Gb/cVewKaXnNvcLqTGhI8LDd
X+MB1S9qR1OBCRefLh73ifECjaNOcroGTIgdy5mikM/Bbfc+gdFDTDBxGIja
XOkNMsrBG1KPoHrqe5XLLXxAbWhZofUxVE/pvfeRMB94EtFVdqdmLs7ddcL5
UPNcvsGCRV5cHXP1UteEWb/um+snULHu7sFhJnhy9Oz4IJRKZjKhmKM3881V
LuNZJvBz/Gzt6Dd7Po8F/By/OxTdEhdrseCNESv15q8TMKT0bmf0bhaYhJ3w
3ZDnCkkPm+uVDFnQcM7HbmG+B6jfX9cwaMqCNUtTXjCCvKCX627mGysW7OPR
eeJUdg52QVH5NUcWZDgJJNxP9wbxdeqXT55mgfo/0UU8Cj6Q7xUpdsCLBXK2
8RkeB3zgmaulbFMPCxzIU+W1Pt7AW/NB4N0QC1KEJjp5tnuD6Nnq+FsMFDsq
yhjfOQe/fjtyn5hBetgJdaxbXvDP60CDwrwJWHpddlusqifwuyw40LlkAhwa
GxWYvW7wHjzGzvNNQBAterXrk1Mwm35/x8SqCfCsdR/kf3mcmAfmH88L84/n
ifnH88b8431gHvG+MK94n5hnvG/MO+aBOA8cXnA+5gnXw7zhfphHzD/mFfOP
ecb8Y94x/7lbvBc+fzwJDirGcoefexTRWPbRqfcmgVGwQmmfi3fRZ7+8S143
UPxOafXas75F84X0TosFT8LSn/2+psMXi8gxFL635ydBZXCI62LH5SKzs2mq
KmcmYZ9gzvET4Ffka/TuUcoxlH+krG2/sH9Rt9op5eXmKN7nVpRm61+kWaEg
vfX1BBE/ftP1LiltgsivuEmXWHF/gqgH7q/1om5MEP1WDR8aEQ2egJnZ/+mx
CyK315yfgB6OXuXlWysTz6CY48eZJGZyx34CdDl+u957TSXOTgJ/pc0D06iz
wFLbU1y0kA0XKRJ+zmfOQbF0u/AKfjY0vHrpxgg9D9wPxPb6r2fDm7gkJV+h
i2D+1ipqmSwbYpPXap5beRmeiCvxZW5hI/4etuSGX4Ebl1+NW+uwYWhJRZnT
aT+4vdxNR9CQDSmXxVrYn/3AyH37q/9+H+oaqfAOR2N/EFhqHXD+Fxs8HRbJ
PBfwh46LX7pllkxBxtcZteo9frBTWoxCEpwCuXsuE1qDl4HHhSvdesMUqOR1
mDbMXoTLKgvN6uWn4CPP6I/ngb6QmlO8XmL7FMQWRgjrXvIGEyeqsZHuFASx
3cY+NXiAR+uzKpGal3CjMNThm1I1XAlz7Gz6kQVrJoyFm9ZXwwLLqzEyzEwY
G6t2yeCuhi1bnJWf/nsBmy7UUBz/VsGm0Ff5XdwvYJQn3HXxZBXQPmbecFj1
HI4Ed25IGq2CW8+aZwrFMuDe5RJH2SEUh+YviZJLh76fD7+/GKyC9rFY6zsL
bs/Fz50ubloZR+RbL3dJbToYQ9Qz7rLq7boQSfRTkw5ZVZwRDps5eqbilid8
6rtK6JV6s75c0CSA8BMqx3T6wvYl/CZK6hqcDXoLSYruvywaqkG41klbcOot
8E8/3mtFqQaz42bOp87mgNZvuamrE9Xw6XyvkPxgDvw+J3uxeh4JCox21vE4
5MLOLjeGFDcJjr3Vdqlpz4WmU6u0bwqS4PpneWWRI+8gzkP1J9dqFBu9k33f
+A720g+HBq0hga05/c6Rp/lzcf/laIZ4AZEfMXbCcldSAVFP3vwU/d+qQqLf
JoUvGZTYQvjF0XNnp9nRJ8uKCL0NzbsCfwYVEX4M/ZzPJ08VEX7PWK5fltlS
Aq+zGaelGqsh2CvL5qpgKYQ8+n1kf381hLmT/m0xLUX3E2Nfj8lqKBC3+X4v
thQGWhTVo+eT4GHlLauohlIQfBjcloD0WOlufk7l/wIm70OP30J6KzTIL8JN
v4C357Y8j1UkeCRdtX73rS/wNrT2pgryx1wzXxukK+GlMZfQN/TzNwNiqhku
lcB6e2Tm4jIS+OkzJc89q4RWZSGz+QtJoBtBW/dwsBI0UsZsvX5Vw1Cw3ZsD
MoibPR8UvtKroWxLm/JRlyrwP2KXvKG3GirOdOo9TKuC8KwWN9d6pH/+P/6p
nipwK55YUfSpGvZz5oF5qOfMC/NyizNPzJMCZ96Yf1nOPjCP4Zx9YV5tOPvE
PNtw9o15j+DwQMQcXnC+LYcnXO8zhzfc7yOHR8y/CYdXrHclh2fsJ4HDO/a7
SyksdavsAPw6cCq141Q1qJKLFwSuGYBrQVuPtFkgXgb7tO8sGwDbKy+fvdKv
hj9cTFm/n/2QtPC11Cn1ahB5Xv4GRvrBJuF0Fg+qd8qvvIva0Q/lvMX2j2Wq
Yc+va2X+tf2weOnTx5slqkHyum/Y8oJ+MI0IXpMtXg379tVfuNtHIWK51gJ1
yWYKkc9lESSW94VC1DskF2TkmEsh+rnXHf4m9ZRC6Nk44lTEc5dC6NWYCf25
8RqF8KOQVmxz9iKF8GtU3ud/M2EAVuSZ7rRdjs7funQRvecDEBwafs1elAR7
VoT1Kn0cgKzrPDuubyZBLN13em/lALjN486r1ySBl+Fj95DWAXh5xkRVUZ8E
0hce7+oYGIA9U7P+8UYkMJz5Ya3PHoAFf1ZqLTclwZkzzAcfFw7CBz/18nAz
Euhn3k/f9GMudhF9MZg8PkjkRz6i/lv2d5CoBzXUJscVVKKfmIyQ4SMRKqHH
bekih/eKVELv4V99UqmaVMLPcZP0Lxb7qYRfnua6BqHPVBilyy+tXkCCH/F1
XbbVVCia7RIZFSJBbreka+t3Klg09jQbSpBAObF58MIgFeSV12Z2ovrWu7XS
1dlUcPXpqUpQI4EpeTuDb+EQUGb45wXtJAHX+N6ZScEh0Ehb1RwBJNC++HWs
e+MQ7Pj173wOiv917Nr9eHIInrRlq1SiessYuSYRXDRYZ60bKaRIgluKbU8d
BWmgfnJ6a4g0CQ6WzfhKb6SBT6P8pbXIzyfxjYtrlGmQErHYokOABPMG9dP3
69Ag995Tj3ou9Dw+c6r8vhENApRWr/vL+u95kUl9bU0D1xUX9nv9qCbmgXkw
58wL84LniXnC88a86XD2gXnE+8K84n1invG+Me+YBxxjXnA+5gnX8+Twhvth
HrEezCvWa8PhGfvBvGO/wyM0dYfLIxDFlprk2VkN7XelEzJdR2C1AiNjmXw1
TKQZfCu2HYFRqTOzP9ZUw7MSi6KMgyOw6ZXrhQfo+VJ+QmGfm84IjOyR+ac9
vxoENBXOr1QeAYuPfm+bZ6tg9OOozQuxEbib7cg+xq6C2r0dIjv4R6BXVce1
b6IKmIu28X3ZPkzEjbclGoxlhon8LMGB9wOrhol60wP9lOglw0S/1VF5bqYz
NEIPKaPyiAaNRujte0eLO9ROI/w0O0hPPKihEX6nrhoI54+NwEMn3pvRXdWw
uI071/P3CAgo7WmPZVTDGIl20YZ7FHZurb7+Cb1fNV92xHivG4Xfzyu55/OS
YP3SJYvfyI+C9soVobbo/V2/bQl5icYoNCe/b6gQI8HkOz2W175RdA9qjNaS
IsFKuSOqA5ajYCDDXv0R8Tx+6o+O1ZYxIubt4A2o3TVG5G+1NbqnZjpG1BuK
MDoT4zBG9KuiXOgleYwReoQrTk/3BYwRev98NMivix4j/PDw8thcTRoj/L48
am7TKzAOpvueLYxvr4YYubt8qzeOg9Men8CaUfQ+lAs/GKQyDrqFSlV8v6vh
8FcttpDuOMj+rm85upQE8d1v66qMx2Hn8A77ZHT+nlvpRsbbj8P69Mu0LvR+
b1+8ssHTYxxOj4uX8K9HzwfHUi3TwHE4fOXofDUUfytI6nz133/3GbMg+tUS
ErTNvlwS5UGHJ/IFYhXofc/8rhRjFUgHvw8FBY1/0X3kJ6wUuEmHhl23x1rY
1bDcO+VAxiM6FN++Ov8brRpmdVRmhV/RYfiZ/Uoy8uPqdfKnSQEdogqPLhqu
qgZybaGhSS0dRF69OyeYOzcPzMNvzrwwL3iemCc8b8wblbMPzCPeF+YV7xPz
jPeNecc84BjzgvMxT7jeOg5vuB/mEevBvGK9izg8Yz+Yd+zXuffJ4X4vJtwi
3VZo76uCB6lxXZ0nmOD8oEzDoqIKXBVHqrNsmPAk7srbVa+qILvkfJ61CRNC
fvjTNyVUwXVtYYcxPSZIFAt/TousggUi34JdNZhQ4r56X2hgFcj8Ghzv2MyE
tH73Td8uVkHMwINAfQkmCD3VsEvwrYJhH9vz7gEMIjaz51vcdo5B5PvqbPTe
d5JB1KOL9N6psGEQ/SruB2lZmTAIPSuUuRWX6DMIvT8+Oq/+rsEg/Ky8ZJpS
r8Qg/I61sS0PVzHh2zqZ3j/oPJQEiO4+ir7XA/7GTpUi3vXi9utGdDNB76i/
xW7Es0hY6dsuGhOKrZIOuqH31YKSNIopG83L5nLRVvQ+Sy5qWd49jwUbx/dI
xaD3dfwMj9kVHhaQT8+/421Bgl7lnjaJNSzoMNAndVuRoHvZYg2uAhbkffjh
mHyRBAopU2teVbGgcaK/OBrFpMtRpy1aWCCduN78nzcJdq05qcf6wQKJRxI1
U2dQ7GJX7T/CAima0tVLdiSYHgyTYE6x4Me7Hp+bB0iQ0GgQob9gAp6yI3T2
bCdB6VM7fZ8VE7AptVfw8ToSmOxNaYzbPAlXtU1q1x9FfK/XubpDZhJ4z60P
XoPeH4cl6sVKN0wCxS2+cXxbNSiptq5UWz0JklN3jTNkq6EwRJd8j28S+qJM
vxuJIp7OFtNHlkyC0byMyD7hamjM2khRmzcJMbM36s4KoPlO3N/jPzMBbZdO
72Hyofrm5Tv3RM3Fegk7H14PmSDys8kPY1uuTBD1LL+Ipsv5TBD9qMIRrpFu
E4SeEqmbDn+dJ6Cfo/egovjfCLsJwk/5vMJXSkcmCL/fBOqL4OQk3HmhcTJp
thrsdqryJbhPwlJf97fJPCRo3J7ixec7CVuvTDpWi6D5yjzwS/SfhAkmi8Kn
QIKTLUofNcImYZutuq3rNhKUDL9KHbgxCSRqb8Y3LXT/yjz4KuHOJESM/3Yx
1CWBs3PrwcNJk6DjLs6o2EWCpoUvDscsYxNxX8GWSQMBNpF/PqBx3p81bKJe
/R3T4QxxNtEPdlOlDeTYhB6XrT0qzcps2MLRS95kfHvfDjbhx9Eyu++xDpvw
W7XmQ2fTBTas97tbcv9nNZRmC4etCGQDb3LYz94VJHC9c/7d8XA2CEm+fG23
gQRbjGuFG6PZcIaZtmHBJvS91nVY1zSeDRenE7dWovvf6m0KZT+S2DBwXiHm
mQ4JvjsNyV58wobX4bxhiXtI4FlkNiqcxYY/Dyfk0tD9NXpwvmbt6imwX7gi
MukgCdyzsjrPiE1BebVB+jt0fj4FZrQvkp2C+N03Knr2kWC5jlLOfaUpcOhN
2iS+mwT7I/YPb1CbgrsvWG0X1Eng5BXEfUd7Csga9iFj6P4YXeSbNaE3BfW8
L+5HoHlsVony0DCaghQJRTWz5XPzwDzgeWFe8Dwx/3jemDe8D8wj3hfmFe8T
84z3jXnHPBDngcMLcV44POF6mDfcD/OI9WBeMf+YZ+wH8479anUanG+43AW/
jdO3brEmg+iWoh0n7bpg9zBPzBsTMhwy4noVB13wkrr/feI+MuReE7vquLEL
jLIMz8/sIsNEY9XtoQVdsGlaNo+0kwyRF6vG1Ps7wVG1+ZawBhl0fQ9+di7v
hAWv9Ld1qJFh3i0F7YBnnSA7vpUugmIj/s6Nd5ntRMyzKS/tdVM7kV8ir+PV
kdNO1LNq0K5RjG8n+t1fR+1869tO6PlrwZV99Wg7oVfZ00D2pWY74Ye/opC2
R7Sd8GuxnEspwrEbwhaLBLNekME7N8qVGdAN4PZexieXDLsTDNgVSd3Q4n7p
b0Q+GTqPKW6c/tQN215chE1fyPBw5VU+T3I3WNgn/rKqIsMi96vvxGa6QVya
sZGvlgwmnn+oE6t+QGCGf9D+r2SIPSx+on37D7A+dbN8ST0ZJF0/6Dqe7yHi
PV1VgS2hPUT+qWOLH+jc6SHqiUYtdrub1kP0+zOgSml620PoMaySnB0u6SH0
bvk8v/BbQw/ocPzs4q+wjfzRA6Ecv78OnDjkYdoLSo7MrdZvyOAx6Hq02r4X
Ar4r6uh8JkPDjn1yTu69oF9iX1lQRobApX5rVf17IdaoT7kZ6ZH0uXJy841e
OO3o9epSMxmmurq3HErshQ/Cy8xftpFBqDYtPPJFL/wKUl/m2on8RF+2I+f1
ws2YyQdvuskwXHzqXPStPsivbCx1miSD3Cfu/IHUPtg2UfZNiU2GceWHTjrZ
fcAjt54VhP58xmGpSUxxH0wdqA6wYpGhvtjJu7a+D7z2m5TmjZPhjaRhBb27
D3ILf/Wm0cgw9nKnGX2sD1y+JPWso6DYlrq99HcfFISVJEl0zM3jF4cHVc68
dnF4wfPM4vCE5415E+HsQ5HDI96XA4dXvM/5HJ7xvmU4vGMecIx5wfmYJ1wP
84b7YR6xHswr1ot5xvwf5vCO+ZfP0cpxFxuAkWMNDzxiybD22IWVn/gHQHV2
++RYOOLH9YFx/Xz0fTl1ToQcQIaBiHSND6x+0Prs3bH9IhkWKvmVXqb0w/rF
pmJLvZH++X50iZZ+MNH9PWPmQQbFIJ3Wj2X9wMx3T1hzlgzcvJvv6b/rh1V/
bC2s3cigUhd2vbGdQsT8Nj6Gx2ooRP4IWU118jOFqKf2Uu1YUhaF6HfEjJtq
/5ACOzl6lnmubTSIoRB6N/pr8dgFUgg/gnIXzmZ4Ugi/2wwf3CTdGgBvYX2q
ci8Z9JLtlAJTB2DzlR83soeR/ltaE6ffDECp/2PnCsTbRZ/Ny64WDYBkXurT
07PoeVR/NKjw6wDscS9zvPeXDCt+HzVf1T0AvNvWRhgtaIct/nfdgsYG4OyH
Z4PhC9vBjJ6eOfF7APZd+Kiov6gdvY+M805+HyTig48dZtoHB4n8c5KPBPSn
Bol6siaP+pMWUYl+SzKrbcgrqSDB0XM4+rMXU5JK6N0Z9ECtcwuV8HPgm923
2F1Uwq/5Vzm1I7lUeNTrsZqvhwx+W04NUUqpMFVfdmM/Oj83Y5RXPWukAqPw
8pL1TDIM3gpecKeHCsNfrg0GTCO//pdbn9CpkLXN2tHrNxkch6Ke1f+lgrj4
qkj6PzS/jrIL3LxD8GifqfH0/Hb4SJfQNxYdgh/3jfyvIT81G/fzirKHQPOC
p6fIvHYIe8r31X4hDQ6rf83ehn4+K3TjhftCNKAmld38hupHfrdeXChBg7iQ
Wq95yK/+4GBIpSoNslNqkz5MoP1cvrk0S5cGt6JLVP+OkoFsteCLkzEN4iMo
im39ZKgiLfvTZ0cD6X+Gxww75uaBedDizAvzgueJecLzxvzLcPaBecT7wrzi
fWKe8b4x75gHHGNecD7mCdc7yuEN98M8Yv4xr1jvHg7P2A/mHft95GPvvj1w
BGqXv5g9HkmGGLHE+iDPERB8yne4L4gM6ZsKlt91HAH/x0Z+dai+tWHNpL/Z
CIicPKilcI4Ml+jJ/rv2jMDvbIXA30h/eWnyC9rWEVAd/XbU4DQZUnY5xQVK
jUDTqX0/eU6SIajexIxHeASmM9TeHTpBRt/9z/Xuaw4TcbjI/UXSisNEvmOi
9ein9cNEvSx367XHeYaJfrVCyo9l/tAIPYGq2jd4x2mE3ns69pWSP2iEnwha
gpxHA43w+4K7wDCONQKHSzYYSCEePjkE0/TnjwKvbN7oU8RLqrn9KxX+UUiT
9yv7hHga325atk9sFBa6XFl0DPFWH+unFaY0ClLrHpVEzZAhpMCPt0t7FOg/
WFRdxGuGzidZg4OjcOh40N4r6LxWvak58cl2FOQlb0VpIL4fM8/5KO0YI+LS
46E5qXvHiHxqf0kt95Exol6SQGnycZcxop+f29iqFJ8xQk/1oR+bPoaMEXqz
dxUwH98aI/wU3w2OtUwdI/z6TwRMv1w5DnpVufrHW8kg7JsZbCc5DkO1Awey
0fv5qrDVV60t42Bo4GB7ewC9Tzb18+nuGoen6zuOLxpB98EhZSdHk3HINGHL
LaQjXhm0+rv243CjeMOhaPS8iNzeZvndfRwoaX/NktHzSKdjM2ttwDhoSljG
a6CYR/T+nywLOqjVLNDe2UcG0DyUOuRMh0vLBWaPoefRJRv//St96GAdeno/
dxfqF5f7UyaEDpT3JjJ70P1CnmpYtfoWHVRvxzova0L+hDLIXSl0kLCpyXEk
kdHzMtjD8zUd1owaJZmUkOH55iW0iv/+eVCJjV/H+7l5YB7ecOaFecHzxDzh
eWPeEjn7wDzifWFe8T4xz3jfmHfMA44xLzgf84TrfeXwhvthHrEezCvWm8fh
GfvBvGO/Oa/upm/77+//qH5POuOEnh+h2462UxkQXrNzeugoGT5ElrOdexjA
rLok1oLuD3EPaofb2hgQG325W8UQvV9H1V5rNjLAs81SgkufDJXf3pfHVDPg
qSDX74PoPrJNeE0euYQBe2+efygEZJCyvblW/BMDXOuPH7XQIcP7z58FB43m
4mcLtnpv0p/LF9p958QF7bl6eYor/Wu2z/XbHxCwa7PSnB7J6DC1VJk5va9v
r2pRFJvzI3s6N7Rx9Zxf9cvl8X1yTKiiHhhWyEE8PJEd2KnChKsHB29mofvz
tkd3Dd7uYMJqk+cnS9D91/rmTTOd//7+T1RGhnMNGUg7pWM69zLhvm6N860G
5M/86YWIQ0w4vlg8yqAFzU9IL1T7CBNKr7+kBaPzVVlbKzltx4SH+4uUdL+j
+mdTFFRr5mI9GXnScNNc/vfBytbk9rl6qn8Mig/0zfVLfdH1i0ab01OZ2LrY
lzmnVyte//TIzJyfL0XpH/XnsQi/7ODR1D2aLBiz//mFG52HYbvsfTm7WJD8
llSqX4zuS3buW3X3s8D1Qehj3moybKrMpg2YsMC5M03ZEfWPS7PpTz7Kgrgz
+is1kN4Fi4xiTzuw4FnAx/Zb7WRw8VxjqnOKBRmLouiu6PwWfakIWevJAjY/
f1oper582V3K0PzBgg45xrx/g2i/AdfGV1NZ4BMKEU0o9mmK4GONs2Bb+8s/
Euj5c3rfw5dlUyz4sq7AgYnuL4fO8cpG/WVB0vaweED1WeeO9OounoB7l+KP
86N5GlaQD/SumIBqA2Ofk+j7KlEhse+k8ASsF/xssr9ibh6YBzwvzAueJ+YJ
zxvzhveBecT7wrzifWKe8b4x75gHHGNeiPPC4QnXw7zhfphHrAfzivVinrEf
zDv2m7thz/U1F97Dcm3pr5/WUODPRr41qRXvoMiTGfdAgAISReldyULvoF5J
jHGdmwLhkqatAcdyYW+pfeDNxRSY37tP93l6Drh/0t/ycgEFblbttY2iv4VV
MuEWA//64Osn58231N5CDFdSjMbfPjjkeFtd0T8bXuR8bX/xpw8MbZlmw3+T
iHj/VGbgobUJRP7eIsmy09vvEfUC7NZvYx2+Q/RzNf/ZkXgpjtAzVQ3+yobR
hF7xnIUvpN9eI/ycqHMWP6N0lfArti42/uXIZ/iyxJt17AgF6h3T5h9Mzofi
CfnoL3YUaHcTU71pUQDUp1ceCThT4NeRW5pLeQuBYVh05r//7/3DieF+w6pC
UPN367I5S4G9S6WGhkKKoE9qPNIMfWds/GlwT0O8GEqNBd7KnqOAGq8xd0FA
MWTJ8mm3o3jQ69f13R/KgTq12uClDwXSZ6StaoUrQFJDs3YnirN6FkRK+VTA
+bq1Mc9Rfll/sK5QUwXUWV64MulBgQNWi384KFdCR8dLJTE3Clz5d1i2NaoS
TCqKRhVPUiDHfr/NTmolpI78TRN1pMAPI7Cz21UFwwYmw9NWFMh+wXuyObIJ
RPdonTQUpUBIZknku2NN0OS7RFF+FQVqm2R3slWboG/b9utr+SkwoGj2M2th
E1hVnV8jhuart77hznRrIwQX29TsXEIBufj69YyMRpDflDTus5ACHwVWN2Rf
boTUZW9lq9G+LD/3CR41aoSCvH5vTRTHMcnN05fqiLhRz8tKT7SOyGdozyut
LK4l6n1Q/Vf/0bmW6Hee/9fCQ8tqwZqjJ73UOLjgVQ2hV1NApH+nRQ3hp1vw
quL8PyTC71E555Flg83wiq/zS6YlBfLvt1w/I9gCSx6ta9I5RoFL++jt9tAC
UKH5rfA4Bc4e1tWtd2sBuuidqP9+70XxX+7mhwktIMXQO3rJlQKPVXb6vKlq
gXT9Qr3XiIcMK4/OkakWUPcem1/tToE8BbGsbdLfINB/Aa0cxawpwxCdnO/g
+OmhX/4JCuSemm9+qfc7KK1zv5nkQoGfPre+RPK1gf8z74sOqP87qkmMpXYb
TD05GbnMAZ3P19viy860wb2dl4se2FBAdz2N9f5eG1iWyHwUQjxPR+YtX1nW
Bpsjn+ZdNqaA4Vrz+yX0NtDR/p3ZZECB5RoeW7tdu0CKNdZrKESB0ZhBts+h
LnTuxPkieSkg+lzBLVmlC35rQ1rgcsRH/15dD8EuMEopWqCE5l+qxDCdmuiE
fP1XUvfQfqy+0TP3fuuE1r6QuHy0P75mn0vn3neCzEZtp+T56HyNm/6KutcJ
GrtyQRfF685y9aT1tRNxe0SPY8GXdiL/ZriLMu1JO1FPdrPLdY3wdqLfiQu8
icUn2wk9tW8VPGL3txN6/9S6D3xSbAcDjp9uicF0U952wq/kSYXReLNuOHUw
Y2mmFgV2CeTI//Pohr1B5ztcdSnAP+2e0xLdDbHzLQ189Sjw4rPZj4VZ3aCb
3EqtRPNz9Xpe50/qhoZZavkxQwq0kJ57b6Z1w3tbQSsNIwpsqJN6Nn/pDzix
wSriyEEKHMs2kBqS+QHmf3tfvENx5NoasaGzPUT8IqrzmI1/D5Ffz7PuYvmN
HqJeqMa6A6JJPUQ/5zv6pVaZPYSebN8dbV6fegi9D04LP7St7gF9jp+MQrKW
QFsP4VfXaMV4oGEvpMY9YbI1KbDQrNNv+mgvvA6bcIsECujrrJZIO9kLlfYL
A1z3oOfRtjVKl317IUq5q+3uXnSeu8K/e4f1guO9dQ+X76eAr8oN3Wt3ekFX
k8eyHOk74Szol5nWCwl1sfMqDiC/fStuf3/bC1sPZs/nQX5YK+lxFtf74PJ5
P8ESlK9z+GVE0P0+kBSt2GWE4kEfGefU9D6QnXDqF0H1Z30PKb9+3wejLYyX
W5Ff3kGneanlfTAouro4DvnlalX9e7alD37LdjxX30WBVQKWLisofVCxPPeE
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
yZEmDKLfxtvce0X1GYSek/J3t9doMAi9Gjn0jYlKDMKPu3fni9uSDMIvr/Tl
DpUCJhh62vwURO/DFBuzv5pVTHA4l903iuZ16NW/3V7NTFgYolep/d/vET8u
tLiumwk/wi9kc6H7Ve2HkWiDYSZIvJr6vRPtR1XjNW87mwn5Zm+ODqH9uQ+a
vfKfz4LOyKTKhYiPu3kZEYorWBA9a5Yah2Keke0bXN6yYPXuo2X2IgxYcHz+
/lWFLNhb5/3OFsXaaXxtX6pZoPL3S1E1eh5M5Zv0nvjGAur4Ac10xM+NXHrQ
TA8LXpTzNrJRvfDWE11eoywI6Hwe+h71ZzCjFWunWeDUmP98GOk9KpDydh7X
BHCRxYZuIz9HE1/2bpOchFYdk6ueDDRvzwO32tdPwgx3yOvXI2ifFzqVXVZO
wqvI1D1Pqei+H06RIvNMwt/RjWnm/XSoaDtI01w0Ce63+Mvz0XlyK637F/Nn
AiKUB1X7ftCBPF95gsyegLazyQvKu9H7aN8zc/HxCRiJXtXjgmLbjCajwaC5
2Ii+/+WmS3P5eUqZKRe85urZr1H8UHN6guhHPxN/ZbPTBKGn+lKSZ6r1BKHX
Imgz7ybzCZjl+KmzqClsPDBB+O0+0VnfZzsJKw6GHT6F9n0iTkdM2xl9vw6O
FFSh50F75Mvgt+h7dmN650Qdmtc8v2c3dLwnYfa8SJkvOm+e8jurOi9Pwi5J
6a2laL4kyM+OQN/HuYc/+b1G59Nunk2hduQk3Hhnt1IH8XE2j2I3HTcJV6Uf
Pz2L4narD86q/+biYUHdhSPo+xPn+zd386fwsol632nHfh5YxSb6Gdyb3D4s
yib0nI0Y0/WVZhN6e4Nt00Y2sQk/p7MKWfrb2ITfUR4DvbyzbNia+VL/Poqt
vxfxLDrPhicm++QX8f33e26lwt382CDy8FrEavQ8zHdROjQSwgblWBf5r6hf
6z3SpF8UG/oWKC2VQ/p6y/L+itxmQ4HrmqNSSH8becdQRQIbbDaUhJSiOEwn
Q9b3MRsaCoM3L0B8djo8XibJNwU7S+fJ0lD8NB8Em1dNwbcPsvIkFMsl1B0J
RN+35wN47xqh2NXU0EhSZgr0qnk/eqJ6K1KS3T5tngI1/yMCO1B/kqWJhu72
KTj+MMEmBelzid6o82bnFPQeeX7tJZpHXG6B0GK9Kdh2tiPf/v/NA/OA54X5
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
cEfrx6uulhopG4LKN/K4HrInKvxJ8d4eE7glOnxtAp1HU2bb9DTPDPoH7sVw
/xoGZ5+Io0mRFvDPje/IGdIwdKWV0D4vtYQjuYIn6T4NA8/b2sDXbFYgoBvI
2Y/e21U8J/LFwQqO7uHir/2fjxuHBipYrUAn8HRUOOKr3iZ9tf23BeCpUUM2
iE9N4Sdm+TzmwOHh+9gB8c18TlLPOMwE/tVFtOYhPYwZXtH/sb0PTtKbG+dv
UoAmZTOBqq4Dk75k1v0CCH8Tkhz1uwGjZxy3tJHe82q3G1b5XbGAtRMs8nqj
YD09+3wg1h1zSd181+gxCsUPn/tIZ3piD+6+x0rjR0HASr9h7q43djfW9eW/
klEwPtVmNfD+EcrX6dded6H9uYJbMlk+2JVY6ZdWa6Ogd6FyO+LaY+yjbo2Z
0aExCN3Nd93S/TH2xAOvZSM8BjEP8wQCNx5jEq+3vUVdx6H4aj4d7utjbNlR
pLPSfxyoD9sdo249xsQY7HsvxY5DNYk6wG/qg52leaqfkT4Om1FiR46dfIRZ
6EXC96JxiLHz3cv9xAs7XevvdgobB7blP7xXfT2wA3p2m7wd42DtF7IUzeuG
BQkSl1aHx4FGZ+fdZSNxMLA5e+vkCMKzCrT6UWowFSfp8wCt5xlP02gOvQcO
V8adLJA9mp0lWxfdB+CSuL0HisfB2U2L9pWuCbD6zYh9R/fx8+U4a3HTDPwS
j++NQPc1fiEitMvLHG5UkN4wBYxDvcSBqop5c3hwpvtMOHpv1xpL0Nq8BRDi
XT+euDAGzJms1x+lWMDDacZdzEyIH6oh875ocxj4GL/JSh0Fnsns8UvNprDQ
4LQs1T0K6bfPGB6VNgYnFm2e16UIMz15fJuqD99uWVdLJYxCPYvnt9INLTh1
+GWhhOco0LQqneU7Ig8idv1taUhv3C7OBdp1VyxbaOJ5kuYEaKZdqa+W88BO
vcJSlB8ibKykfv+SF3ZNXZvvguMEWK+kf2khemNVLbc0ZH0ngM38Y//ufT6Y
8UdXMZfICeCZxofdn/TBlms5ibUpE4BrtTVVN36M6dRoHuR8P4H6BcOOiGeP
MS7n62PPaiZQfn1Gp5Pig8nzRm6eSJiE0DD6kK+GPlid/Ddpv6xJpMdkZV7t
I2x52G6QVDoJ1SMbknIN3tiywWoJV+MkUOvH/IWsvDD/whONN7on4WpFkKdk
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
TUq+g387AVqlAl6I4f654tx1dqaIR3X2S1UXzPed5ktWqRXoFwlzyvYkqDvo
5OFNRXwHhY7sRz74byzs5TlRDqfPj6dr7CYBKczekYe/GZzdTZLisX7kRJTf
3nZrBjk9VgYz1v9h9wID5ZZmOL9NxD8I88//q/OjlEQLSDE5PxFBvOyML2tx
BLeAoKls/k/Um8cjvw++J7bAVsHC4Yp1iEcJY6zlZCuIw0HDyjUisEb8LFRO
aoWhVFv/d0tEYPq9tSzsZgfEjQh2tWC83XNFqTW+A7yYROZ5lomww+2J8Wpj
B7zUs9595x8RJoe/iDAvdYAtecsEC+rtGSfP6nLxTjAscZXPQv1Za2gM47nc
CfMfpc84o15RlBK3TD3ohPiLlE+aPCTI/lVyUORTJ3yzaBdl0SMBb25FpmV+
J7xRNJXKvUKCm9ZdG3NCOmHY5FO/BvJjRullgbZxJ9TFRJ+vsyKB9wp76KUD
nTDxTkNZAuut45xG8dhKByzoBvPdRL5A8O367d86YC1yjRKO9fmV3/cma1IH
kG8+8gpHPQnMDgxscekA+Q2651MQPzam6jNVma1wuyn+912Mf66bUVPSbIX4
d9Hdiqg3fexN7P2UFvA20c9qQ/4dl77q1RHeAu+r00lncX1/7r/HzGRaoGJW
PSYJz8NurJ+R29kMQv9Cg34g3vLuHxLZbjeD1+XmHUxmyDc2t+tRQs2QwdY9
YYT5yPhEML7L1QVGHBO//TBfNzcWvtU+0QUVI46ZuZhPi4V7vUW2XSDGq+rw
B/EsnXeJS4vugnFn/U0XEQ9hX7FLi1Vd8JtbMKfhLxHCsjQUXtK64NgkDFxG
PN0OWsvbC3WDt3GZ7doiEdZeLxzWO98NM5L/MhcR38iLS5cOf+8FivuLxrIV
IjjzeInxMvWB9L9qjrhVInxKuP6661AfNFbRLj9FvP8q3MwwMeuDoETRyUQ8
X/4hp/Nhj/rg5j6uKwTkp+Jlx8ZzhX1w5apT4hzyd22XQ/odYh9whQ5vOspP
gm87t+ezo48zkIqdP3iRBC0rF3ToOAcni4aMs5uSYEO60eqe0T5Q0l2T77bA
/l/8tK2gAOdmoUNuEagPxSWvORtC+4C3WrDjMNaXvsKUvodJH7DsMThYgfhP
Mdff6jrY9//fO2CSQXyYAt+7s6z1wv2eXI8QjN238HsKdfQCx3oX+ScOJCAa
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
03Lrxm6joALYsOzIxh7EP/r13xWF0gXQW7Ur2QbxFw/Wray5lQ8PNR07+lA/
+7K+01hlHuhk8o09Q/ObozSkbZflgcoWio4P4u9nEB/laZsLuXqfr51E/Jdc
z96UlPQNPNZcqvBF/N+nktYfGfwKMoVy1+MR/7Zl1xT4/1JgdqVFIh3loblU
olPrUAWYPLzR8ucIE1KKTINy31SANt0mQADl6SP8Z47Jwkoo3yM2PBfl/UV5
puqzayU8NVHZ1YN4cHbxFZUXVMIkY2TVO8Tr5+6ztrvXfIeAuc3t9ohn9Ait
dvLSd3A59Pp+L6ptvjKW2RjXEPXnpSurMy/XEP0bY6pWD6fUEPMMVlffn2yo
IfZ1K1j8Tp/zE8q4er7/lNMaV/5J6A1JKwz94PiT8JOVKuhWG/qT8JvJrdfo
a7oZrWFCMLf/p898hU0rEH/uPIbq9turhJnQxd1nS7ogJony3c3VE1RgX6E1
n6d30+a4Qe85PD+JC7PkyIiXNddv7pfO8xqojuLmgesabl64f5ibJ573iZs3
3neBy8OOq+cVlxfWq8Hlif20cnljvzYbXfsWdtfCG6Hm4jRr9Hw/rLt9alkd
zE8Q/6ntyIRLe4foTlAHUKZRn+fChNMHdXSqPOpgaM39sI0nmFDwT6A2/nEd
yA7vtrmE3sdJW7W835Hq4JVB3u636H2QYuvV3DdRBzvPD/CT0fv7i7xkuur6
egjwn8UuRTVnwihY+30jOOfE+307jt7HJ/gtL3U0gqK45924Y0z47R1dHCpE
Bf+X5y8eQfs/sMwirNE5Y+K5W+hCxFP6rWpMySkqPNC6nP/IHp0XVrM5Hx9Q
wbpww2cR9D6bDP2ySLSECltCX3y5bMoEo1WWDwvRuU9713TaT0Mm5J3JX0pG
59aUlR8/OKP87PhMz59A50jT276vfqC8481Upc/fo8JKZ+vnJuj393o389vs
41RwW/hvoPM3A6wer5TfvpMKKjsOrLs/yQDvE6xb0ovQObSjVtVxnAGekC3F
amqEtdnPfXePMeCw5xzzhIxGaHx9N9IQ1bJJ1Ev3Jeth3GNs2myaAUe3Sqfa
jtTBxiWyvWfQ+0BCNkp9b3Ed0ALX8meg/c6ZPz2vxNTBkWvyQ7NnM2GMPegm
eKIO8ntX5pxHz0ODv8YiCc06mDnmXvhrMXq/C57i5AnWwab4/vxoEfQ8B1S7
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
a3lCbWj1ojbKT6OACYE38m2U3/PnxApVObZTsYzLS71dnu1U/sGpYYfU2+1U
Pc41I7tmR7dT/To9Vrzf8bydwqNgtqhaP6edwit0fPC+RkU75b9UcvrGqW/t
FF8SEz2WsvOJ/6Qe0ZP0I3rPZOMhfhC8xC/Ch/hJ+BK/iR4kJnqR/Gq2nqQe
0Zv0I34QPMQvgpf4SfwXY/tN+LpymObRtTtwLnA6bBhNh6zbbzM4DTtgx1W3
hfbxdEgNsWHpWXXAiR35b78k0eGm2a2FrRc7wIrLNMsP9eeye38q0K8DWivj
u3z/zndZy1WN73eAj+Gxs5UvcL19fNikEdcBvVvzJ0/j/C2dym+jmtEBlb/v
RWzLxPkpdvDWhB8NXnJrrlfOwvOpV2/T2H0abLXlOmOA8Q4ZEd6hOBqM9rmv
LHiP7y2ZXTubM2hQ/jkq/QLO9xoV+WOZ+TQwcTvbaf8G71vONKNz1TTYpODW
k4H186+6fJjXToOZPmpGuxDPXlnuKw5DNMiawbdfDO+rhmNe7e8YNFApFJ4z
jfNwSKHsUHQHDQTpfFp9+F6Kz3VJ1v5Cgz+S5ZG+V+hQNHL0XlEBDYaM1kbU
XMJ6vdI7l76iwaXQnnNfUM/sB8X/7XlCgy8LlPuvn8f3zd09xafCaGC/rvzk
BOovm1S92eo6DfytJt8vx9jkBYsvNbMDYg32Sovb4H1he/NsWkIHiP7wYk6j
n3zrSu+8Cu0A88sLle/j791yMadK/DvgZthgfCfO/zzXxVOHLnXARL/YeTqe
95VHNmoq2XTAqi38DvF4f92ut+mIMOqAY50HfwpcQL/kGlZvPNgBERaXubci
frlkJdtkk04YGM3dEor+beOYWGBi3wklawK5TqB+EqO1VVpXO2Fxop2z6Vs6
OHwt6jYN7ISPmkOCL9GfwwojxlEPO+Fo9J8xrVy8r4xHFCaSO2Erp6y/ZB7y
bV2vdfp9J9ALHF7vxPells6O67VlnVAXN9UYg/HqO70he+O7qFiD88fX9y+7
qHwrny0MyYIuqp5o+pb8K1+6qH7TC8y2vqN1UXj2Dx09VDPcReHd0KG0JJvj
O8Vn5+aJF46LvkM/my+JE8Jm823B97ASO7/MQlnN2ftfPfeu4zU27v/6Ve6u
V1x2GedpNh61gUJd70v/8Opfj/iQePEfn6Tio3duOP/jm9VTbifn/E8PEhO9
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

       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.031307001340512904`], 
         ArrowBox[BezierCurveBox[{
          1, {0.032546568143713685`, 0.009951761764475132}, 89}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          2, {0.19079525578125364`, 0.03371806082217528}, 57}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          2, {0.1669611736294659, -0.011325384112407133`}, 90}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          3, {0.3850205713890712, 0.04909812960425078}, 62}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          3, {0.45152102920686726`, 0.015920371474497437`}, 91}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          4, {0.5848105802731322, 0.04897833965884131}, 66}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          4, {0.5509988853759178, -0.017575471177944807`}, 91}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          4, {0.6509393733184149, 0.014513689185062156`}, 92}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          5, {0.7842477377523559, 0.050660524085944014`}, 69}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          5, {0.7511191028618782, -0.016967172348103736`}, 92}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          5, {0.8337617684672165, 0.011678868638887587`}, 93}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          6, {0.9816984077977571, 0.05030080974961286}, 75}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          6, {0.9662541185877896, -0.010176567350413147`}, 94}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          6, {1.032202424054467, 0.011306023055081832`}, 95}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          7, {1.1661537549237502`, -0.011106199512975529`}, 96}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          7, {1.2502733852233259`, 0.016275648548313426`}, 97}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          8, {1.3508895554274905`, -0.016620398513010552`}, 97}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          9, {-0.012571273480433048`, 0.23279544638961902`}, 49}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          9, {0.03189786087136382, 0.21016879209770656`}, 98}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          10, {0.21291159742122942`, 0.16631014583100803`}, 58}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          10, {0.16665942544790302`, 0.18729352935385418`}, 99}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          11, {0.417271421096726, 0.14867734993527223`}, 62}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          11, {0.3887282529195233, 0.23124692055628063`}, 63}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          12, {0.618411929172655, 0.15035462183746062`}, 66}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          12, {0.5837223883045307, 0.25163016422279616`}, 67}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          12, {0.6347429726950149, 0.21193955709972928`}, 100}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          13, {0.8162710483659814, 0.1503317389370604}, 69}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          13, {0.787706358276394, 0.23280410372462268`}, 70}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          13, {0.766677997285912, 0.1897163447149945}, 101}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          13, {0.8323960714598795, 0.21057214586978}, 102}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          14, {1.0152198535539423`, 0.1488603468090998}, 75}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          14, {0.9897472007135565, 0.23224141915119972`}, 76}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          14, {0.9663865567230109, 0.18760503208845322`}, 103}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          14, {1.0508670601291916`, 0.21456355057603665`}, 104}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          15, {1.190922848296653, 0.23479582731945567`}, 81}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          15, {1.151569178184402, 0.1827444820498077}, 104}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          15, {1.2348330027764143`, 0.21142840764928467`}, 105}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          16, {1.384899997200011, 0.2519788637568222}, 85}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          16, {1.3678041762273132`, 0.1899591736251838}, 106}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          17, {0.009767462777720665, 0.3673362046724971}, 50}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          17, {-0.01293951844939522, 0.4334042837585415}, 51}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          18, {0.19086998533107472`, 0.4349490535438945}, 59}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          19, {0.4098995423711566, 0.36458925962710503`}, 64}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          19, {0.4343286003106801, 0.40955718007720143`}, 107}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          20, {0.6162889670228534, 0.3522501992287877}, 67}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          20, {0.5839072553160216, 0.4517363579950345}, 68}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          20, {0.5679393089756146, 0.3893748309387033}, 108}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          20, {0.6337945765803181, 0.41286771719832516`}, 109}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          21, {0.8104561625629495, 0.36768660794436847`}, 71}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          21, {0.7837112629191892, 0.45271286828789414`}, 72}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          21, {0.7666629551337413, 0.3908907527581922}, 110}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          21, {0.8329860185999424, 0.41249873450008717`}, 111}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          22, {1.0109359565005576`, 0.36537810493020945`}, 77}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          22, {0.9654788540463907, 0.38949786447440915`}, 112}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          22, {1.0321074357132107`, 0.41005891072699985`}, 113}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          23, {1.2130293067994296`, 0.36756492786972883`}, 82}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          23, {1.166228444121667, 0.388570731687173}, 114}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          24, {1.4181301348383966`, 0.35133117273552883`}, 85}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          24, {1.384636955161686, 0.44976601841717917`}, 86}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          25, {0.00896469712291223, 0.5671705740207319}, 52}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          25, {-0.012186411132115504`, 0.6330221808023035}, 53}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          25, {0.04831617480509536, 0.6169093336571987}, 115}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          26, {0.211211201159026, 0.5689478322855371}, 60}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          26, {0.1493919756134652, 0.583975860405875}, 115}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          26, {0.2502846702986129, 0.6174660877700197}, 116}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          27, {0.34978052930738646`, 0.5833847785628737}, 116}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          27, {0.4334163495029451, 0.6095320896699947}, 117}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          28, {0.6153884800175611, 0.5501322722713345}, 68}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          28, {0.5660803847181475, 0.5876081888049468}, 118}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          28, {0.6322074985116956, 0.6091375851426327}, 119}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          29, {0.8160024652790279, 0.5521793618757721}, 72}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          29, {0.7658858547234154, 0.5882312000127914}, 120}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          29, {0.8322253242305446, 0.6111815433839439}, 121}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          30, {0.9833246536133935, 0.6498147925943776}, 78}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          30, {0.9656945869298786, 0.5889319908528846}, 122}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          30, {1.032663032939259, 0.6106772584361504}, 123}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          31, {1.166422700728432, 0.588183312056586}, 124}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          32, {1.4163403768011469`, 0.5498865492566102}, 86}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          32, {1.383063169675237, 0.6494951928217694}, 87}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          33, {0.012176650374344922`, 0.7664405201462313}, 54}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          33, {-0.010707904352774501`, 0.8349267258801119}, 55}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          33, {0.05095180717794036, 0.8180890716839658}, 125}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          34, {0.1837574760461222, 0.8484315767645366}, 61}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          34, {0.15012892018060092`, 0.7835821881891742}, 125}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          34, {0.23376082177986934`, 0.809197806577678}, 126}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          35, {0.38459509497499994`, 0.8489034243952996}, 65}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          35, {0.3671564012341601, 0.7872386611006953}, 127}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          35, {0.43389317333103944`, 0.8091739095230539}, 128}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          36, {0.5665517770767408, 0.7886511069047035}, 129}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          36, {0.6318428815934801, 0.8113048672225976}, 130}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          37, {0.7883248655995859, 0.8349436502459284}, 73}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          37, {0.765263829357255, 0.7895725822098144}, 131}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          38, {1.0160338492539844`, 0.7490620090416001}, 78}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          38, {0.9875557120575518, 0.8321686574670333}, 79}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          39, {1.1900257925417048`, 0.8324663181775603}, 83}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          39, {1.2506569496428577`, 0.8150432258468665}, 132}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          40, {1.4166955143712288`, 0.7486893447990768}, 87}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          40, {1.384668512189816, 0.8494156679357125}, 88}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          40, {1.3509245405600692`, 0.7820729597130347}, 132}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          41, {0.01104788215896517, 0.9659982091868584}, 56}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          42, {0.21702422858735462`, 0.9484225999100738}, 61}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          42, {0.25111611532619815`, 1.0148876877372377`}, 133}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          43, {0.4166822130189172, 0.950042354552969}, 65}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          43, {0.3499987269498408, 0.9831137328022962}, 133}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          43, {0.431771455835395, 1.0107539762626836`}, 134}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          44, {0.5651638784661293, 0.9883309270075478}, 135}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          44, {0.648840132090137, 1.0153723153807284`}, 136}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          45, {0.8107519901841101, 0.9677158602431762}, 74}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          45, {0.7491993122306008, 0.9829601567320825}, 136}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          45, {0.8492058465210152, 1.0164445735363774`}, 137}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          46, {1.008008750657594, 0.9664581586857293}, 80}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          46, {0.9483759748441158, 0.9828551852071806}, 137}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          46, {1.0481243320705051`, 1.0146864055932934`}, 138}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          47, {1.2122092968661953`, 0.9663950879194803}, 84}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          47, {1.148928899111877, 0.982820516035925}, 138}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          47, {1.2323029646136416`, 1.0115275705683968`}, 139}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          48, {1.4166909517538688`, 0.9510887796534249}, 88}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          48, {1.365558596528648, 0.9899328170761663}, 140}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          49, {0.00953992153756703, 0.23284820128972802`}, 9}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          49, {-0.01204496783185656, 0.30063387096488686`}, 50}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          50, {-0.011745124293424763`, 0.366788837561387}, 17}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          50, {0.010292422248874729`, 0.300160540318179}, 49}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          51, {0.009196028956324598, 0.43343766479137724`}, 17}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          51, {-0.013089637450923767`, 0.5005140642097912}, 52}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          52, {-0.012876461334858091`, 0.5673495229875453}, 25}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          52, {0.008939204354430973, 0.5006145193973534}, 51}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          53, {0.009188351082284833, 0.6329006293790437}, 25}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          53, {-0.011351135974086067`, 0.6987194269287927}, 54}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          54, {-0.010910591570671766`, 0.7666502003693485}, 33}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          54, {0.010351152744892848`, 0.6981838478615219}, 53}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          55, {0.011322959595026634`, 0.8353505091269999}, 33}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          55, {-0.011295185431583508`, 0.901093970358021}, 56}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          56, {-0.010431153369648307`, 0.9667577513396011}, 41}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          56, {0.010112062574300657`, 0.9012615746112262}, 55}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          57, {0.21228275366477667`, 0.03321875256231615}, 2}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          57, {0.1914680034117798, 0.10011095818301516`}, 58}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          58, {0.1917126908921885, 0.16591142390536412`}, 10}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          58, {0.21374842475622743`, 0.0999069800977794}, 57}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          59, {0.21313696372824867`, 0.4348574266065186}, 18}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          59, {0.19039030314936387`, 0.5025091908087117}, 60}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          60, {0.19004021661792808`, 0.5687235097260416}, 26}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          60, {0.21271921970720475`, 0.5028959646114916}, 59}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          61, {0.21680635802294204`, 0.8485273282476463}, 34}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          61, {0.1842282323613716, 0.948744828023404}, 42}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          62, {0.41769526196309503`, 0.04920541898992271}, 3}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          62, {0.38454397961909614`, 0.14848850369033909`}, 11}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          63, {0.41058288740337684`, 0.23188167921312228`}, 11}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          63, {0.386744274456372, 0.2980660172217749}, 64}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          64, {0.3879771440200086, 0.3659422279616671}, 19}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          64, {0.4088276887098233, 0.2986610047395763}, 63}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          65, {0.41780055572009467`, 0.8484837812702585}, 35}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          65, {0.38359172018053034`, 0.948924917801151}, 43}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          66, {0.6181765674770169, 0.048613807044259126`}, 4}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          66, {0.5850454846207603, 0.15014475102119226`}, 12}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          67, {0.6172410077336615, 0.25224052969231686`}, 12}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          67, {0.5837260329006417, 0.3525486547731246}, 20}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          68, {0.6167167612265675, 0.4518345192296847}, 20}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          68, {0.5836484584564081, 0.5497084729116519}, 28}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          69, {0.8170514542396206, 0.050515052656421124`}, 5}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          69, {0.7836624466186578, 0.14973711503538903`}, 13}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          70, {0.8096263361680457, 0.23306483499574362`}, 13}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          70, {0.7875198279236004, 0.3002757305862705}, 71}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          71, {0.7882554915907148, 0.3678818702668953}, 21}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          71, {0.8098090972813496, 0.3000162389485447}, 70}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          72, {0.8171998219655368, 0.4521847785500713}, 21}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          72, {0.7841479252362996, 0.5514010938575522}, 29}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          73, {0.8106218617204568, 0.8343382879728729}, 37}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          73, {0.7897283207170637, 0.9017898752499534}, 74}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          74, {0.7893351304527129, 0.9671648429711843}, 45}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          74, {0.8115466521702623, 0.9016295207501032}, 73}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          75, {1.0147031749673372`, 0.050740392319916346`}, 6}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          75, {0.9831796986192101, 0.14995702454425794`}, 14}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          76, {1.012171398327867, 0.2321807474922114}, 14}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          76, {0.9902380118350709, 0.2986068498098914}, 77}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          77, {0.9885480618125738, 0.36474145166251903`}, 22}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          77, {1.0115234430104194`, 0.2987192032864259}, 76}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          78, {1.0161866045386407`, 0.6495346319598394}, 30}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          78, {0.9836012584940752, 0.7488225802685875}, 38}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          79, {1.0100112911837866`, 0.832609389977249}, 38}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          79, {0.986344164669291, 0.9006029524564114}, 80}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          80, {0.9872133362798048, 0.9667957809834998}, 46}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          80, {1.0088670442369865`, 0.9009369971431503}, 79}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          81, {1.2133646139245866`, 0.23437218738741478`}, 15}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          81, {1.192806411396861, 0.30127072436252317`}, 82}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          82, {1.191011706078807, 0.366193916830813}, 23}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          82, {1.2140862419999632`, 0.30083756513043264`}, 81}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          83, {1.212203364445382, 0.8321653067467089}, 39}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          83, {1.1913879797691345`, 0.8987009283616916}, 84}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          84, {1.1893429031690823`, 0.9652068597940794}, 47}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          84, {1.2127667963300641`, 0.8983686390994174}, 83}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          85, {1.4181751178366666`, 0.2513459035329733}, 16}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          85, {1.3859466411005796`, 0.35102764023258887`}, 24}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          86, {1.4174188536506647`, 0.4501271446015659}, 24}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          86, {1.3835057063207057`, 0.5495209375643949}, 32}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          87, {1.4158484524279915`, 0.6494369080616077}, 32}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          87, {1.3840375432500214`, 0.7492300965092222}, 40}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          88, {1.4180498516689997`, 0.8493034890677938}, 40}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          88, {1.3834718940021575`, 0.9501361382520496}, 48}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          89, {0.03254656814371372, -0.01197367119327372}, 1}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          89, {0.09921323481038036, 0.00995176176447509}, 90}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          90, {0.1663652986670221, 0.011115297399846746`}, 2}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          90, {0.09921323481038045, -0.011973671193274122`}, 89}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          91, {0.451521029206867, -0.016967777962124304`}, 3}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          91, {0.5514615171493648, 0.015121382400878645`}, 4}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          92, {0.6509393733184163, -0.018374460251560372`}, 4}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          92, {0.7502487055904199, 0.015752938974865394`}, 5}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          93, {0.8337617684672148, -0.010246564318862407`}, 5}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          93, {0.900428435133883, 0.011678868638886774`}, 94}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          94, {0.9663767406005599, 0.011236026086632314`}, 6}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          94, {0.9004284351338814, -0.010246564318858752`}, 93}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          95, {1.0322024240544672`, -0.010619409902665139`}, 6}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          95, {1.0988690907211336`, 0.011306023055077939`}, 96}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          96, {1.1663220543540425`, 0.011281079919184265`}, 7}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          96, {1.0988690907211336`, -0.010619409902662929`}, 95}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          97, {1.250273385223326, -0.016612500888309692`}, 7}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          97, {1.3507739596964923`, 0.016635027581919107`}, 8}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          98, {0.031897860871363815`, 0.18824335914054136`}, 9}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          98, {0.09856452753803051, 0.21016879209881315`}, 99}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          99, {0.16694440086212706`, 0.21025212310244012`}, 10}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          99, {0.09856452753803051, 0.18824335914020304`}, 98}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          100, {0.6347429726950133, 0.19001412414344243`}, 12}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          100, {0.7014096393616815, 0.21193955710139478`}, 101}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          101, {0.7671277135356482, 0.2108699252913043}, 13}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          101, {0.70140963936168, 0.19001412414424168`}, 100}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          102, {0.8323960714598782, 0.18864671291381582`}, 13}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          102, {0.8990627381265464, 0.21057214586872933`}, 103}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          103, {0.9668765748660593, 0.21012387316502232`}, 14}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          103, {0.8990627381265447, 0.1886467129113023}, 102}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          104, {1.0508670601291916`, 0.1816754011420345}, 14}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          104, {1.1507975513878705`, 0.21584068497984607`}, 15}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          105, {1.2348330027764143`, 0.18950297468467037`}, 15}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          105, {1.3014996694430812`, 0.2114284076515878}, 106}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          106, {1.3676040918173842`, 0.21158058714985226`}, 16}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          106, {1.301499669443081, 0.18950297469133232`}, 105}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          107, {0.4343286003106809, 0.3876317471207463}, 19}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          107, {0.5009952669773471, 0.4095571800717446}, 108}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          108, {0.5668505345820498, 0.4111246333759079}, 20}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          108, {0.5009952669773469, 0.38763174711258713`}, 107}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          109, {0.6337945765803166, 0.39094228422561494`}, 20}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          109, {0.7004612432469849, 0.41286771719630694`}, 110}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          110, {0.7667843067131843, 0.41255026597132793`}, 21}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          110, {0.7004612432469832, 0.39094228423978855`}, 109}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          111, {0.8329860185999406, 0.39057330153547287`}, 21}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          111, {0.8996526852666089, 0.41249873451341107`}, 112}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          112, {0.9662812669334278, 0.4111343477986735}, 22}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          112, {0.8996526852666074, 0.3905733015383889}, 111}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          113, {1.0321074357132107`, 0.3881334777890333}, 22}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          113, {1.0987741023798772`, 0.410058910737927}, 114}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          114, {1.1658151438511148`, 0.41087834131998524`}, 23}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          114, {1.0987741023798772`, 0.3881334777653665}, 113}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          115, {0.04831617480509537, 0.5840211842229144}, 25}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          115, {0.14920886949024287`, 0.6175114115847313}, 26}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          116, {0.2502846702986128, 0.5845779383319808}, 26}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          116, {0.35058715716084093`, 0.6162066077023035}, 27}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          117, {0.43341634950295094`, 0.5876066567691319}, 27}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          117, {0.5000830161696121, 0.6095320897047639}, 118}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          118, {0.5662101299631646, 0.6091360530589297}, 28}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          118, {0.5000830161696168, 0.5876066567268257}, 117}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          119, {0.632207498511699, 0.5872121521756943}, 28}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          119, {0.6988741651783622, 0.6091375851426327}, 120}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          120, {0.7652136346854901, 0.6101624955547247}, 29}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          120, {0.6988741651783656, 0.5872121521623704}, 119}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          121, {0.8322253242305384, 0.5892561104726252}, 29}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          121, {0.8988919908972114, 0.6111815433632216}, 122}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          122, {0.9658604369065883, 0.6110013780492614}, 30}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          122, {0.898891990897205, 0.5892561104240865}, 121}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          123, {1.032663032939259, 0.588751825466806}, 30}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          123, {1.0993296996059276`, 0.6106772584953446}, 124}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          124, {1.1666769231105953`, 0.6104727810739936}, 31}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          124, {1.0993296996059232`, 0.5887518255248317}, 123}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          125, {0.050951807177940574`, 0.7852009222444765}, 33}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          125, {0.15125037544387532`, 0.8162978988901902}, 34}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          126, {0.23376082177986962`, 0.7872723736238454}, 34}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          126, {0.30042748844653316`, 0.8091978065827624}, 127}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          127, {0.3671642605434184, 0.8092076220501009}, 35}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          127, {0.30042748844653905`, 0.7872723736238454}, 126}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          128, {0.4338931733310453, 0.7872484765584397}, 35}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          128, {0.5005598399977065, 0.8091739095014912}, 129}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          129, {0.5658509445144455, 0.8099022368493655}, 36}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          129, {0.5005598399977111, 0.7872484765794181}, 128}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          130, {0.631842881593474, 0.7893794343163072}, 36}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          130, {0.6985095482601468, 0.811304867200978}, 131}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          131, {0.7651320807847461, 0.811512315094671}, 37}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          131, {0.6985095482601406, 0.7893794343050821}, 130}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          132, {1.2506569496428577`, 0.7821550764256653}, 39}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          132, {1.3509210450808942`, 0.8151359709753967}, 40}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          133, {0.25111611532619815`, 0.9819995382817349}, 42}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          133, {0.34955551087842185`, 1.0151211399616098`}, 43}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          134, {0.4317714558353982, 0.9888285432711349}, 43}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          134, {0.49843812250206204`, 1.0107539761833133`}, 135}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          135, {0.5654477094593939, 1.0103885735611697`}, 44}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          135, {0.498438122502064, 0.9888285432178393}, 134}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          136, {0.6488401320901386, 0.9824841660019323}, 44}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          136, {0.7488466663805488, 1.0159685828582614`}, 45}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          137, {0.8492058465210166, 0.983556424086495}, 45}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          137, {0.9489542037474008, 1.0153876445202406`}, 46}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          138, {1.0481243320705054`, 0.9817982561903122}, 46}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          138, {1.1481650642389316`, 1.0159866687362922`}, 47}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          139, {1.2323029646136443`, 0.9896021376559698}, 47}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          139, {1.2989696312803085`, 1.011527570674988}, 140}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          140, {1.3653774859802998`, 1.0117475770693316`}, 48}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          140, {1.2989696312803107`, 0.9896021374450041}, 139}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{141, 5164, 5167, 5169, 5175, 5177, 5180, 
          141},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          141, {-0.03403495689263318, 0.09899088654382276}, 142}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          142, {0.03181271924104406, 0.09920423436095908}, 141}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          142, {-0.012571273480433048`, 0.23279544638961902`}, 143}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          143, {0.00953992153756703, 0.23284820128972802`}, 142}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          143, {-0.01204496783185656, 0.30063387096488686`}, 144}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          144, {0.010292422248874729`, 0.300160540318179}, 143}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          144, {-0.011745124293424763`, 0.366788837561387}, 145}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          145, {0.009767462777720665, 0.3673362046724971}, 144}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          145, {-0.01293951844939522, 0.4334042837585415}, 146}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          146, {0.009196028956324598, 0.43343766479137724`}, 145}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          146, {-0.013089637450923767`, 0.5005140642097912}, 147}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          147, {0.008939204354430973, 0.5006145193973534}, 146}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          147, {-0.012876461334858091`, 0.5673495229875453}, 148}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          148, {0.00896469712291223, 0.5671705740207319}, 147}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          148, {-0.012186411132115504`, 0.6330221808023035}, 149}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          149, {0.009188351082284833, 0.6329006293790437}, 148}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          149, {-0.011351135974086067`, 0.6987194269287927}, 150}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          150, {0.010351152744892848`, 0.6981838478615219}, 149}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          150, {-0.010910591570671766`, 0.7666502003693485}, 151}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          151, {0.012176650374344922`, 0.7664405201462313}, 150}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          151, {-0.010707904352774501`, 0.8349267258801119}, 152}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          152, {0.011322959595026634`, 0.8353505091269999}, 151}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          152, {-0.011295185431583508`, 0.901093970358021}, 153}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          153, {0.010112062574300657`, 0.9012615746112262}, 152}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          153, {-0.010431153369648307`, 0.9667577513396011}, 154}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          154, {0.01104788215896517, 0.9659982091868584}, 153}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{154, 5603, 5606, 5608, 5614, 5616, 5619, 
          154},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{155, 5626, 5629, 5631, 5637, 5639, 5642, 
          155},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          155, {0.19079525578125364`, 0.03371806082217528}, 156}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          156, {0.21228275366477667`, 0.03321875256231615}, 155}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          156, {0.1914680034117798, 0.10011095818301516`}, 157}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          157, {0.21374842475622743`, 0.0999069800977794}, 156}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          157, {0.1917126908921885, 0.16591142390536412`}, 158}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          158, {0.21291159742122942`, 0.16631014583100803`}, 157}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          158, {0.16845110861985385`, 0.299721131145832}, 159}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          159, {0.23511903049990826`, 0.2996690993819632}, 158}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          159, {0.19086998533107472`, 0.4349490535438945}, 160}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          160, {0.21313696372824867`, 0.4348574266065186}, 159}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          160, {0.19039030314936387`, 0.5025091908087117}, 161}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          161, {0.21271921970720475`, 0.5028959646114916}, 160}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          161, {0.19004021661792808`, 0.5687235097260416}, 162}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          162, {0.211211201159026, 0.5689478322855371}, 161}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          162, {0.16792621362662885`, 0.6996520367005593}, 163}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          163, {0.23278594511851988`, 0.6996050664548927}, 162}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          163, {0.1837574760461222, 0.8484315767645366}, 164}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          164, {0.21680635802294204`, 0.8485273282476463}, 163}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          164, {0.1842282323613716, 0.948744828023404}, 165}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          165, {0.21702422858735462`, 0.9484225999100738}, 164}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{165, 5969, 5972, 5974, 5980, 5982, 5985, 
          165},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{166, 5992, 5995, 5997, 6003, 6005, 6008, 
          166},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          166, {0.3850205713890712, 0.04909812960425078}, 167}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          167, {0.41769526196309503`, 0.04920541898992271}, 166}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          167, {0.38454397961909614`, 0.14848850369033909`}, 168}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          168, {0.417271421096726, 0.14867734993527223`}, 167}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          168, {0.3887282529195233, 0.23124692055628063`}, 169}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          169, {0.41058288740337684`, 0.23188167921312228`}, 168}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          169, {0.386744274456372, 0.2980660172217749}, 170}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          170, {0.4088276887098233, 0.2986610047395763}, 169}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          170, {0.3879771440200086, 0.3659422279616671}, 171}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          171, {0.4098995423711566, 0.36458925962710503`}, 170}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          171, {0.3676551180183389, 0.4984319072022275}, 172}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          172, {0.4334231651286225, 0.4987319296110607}, 171}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          172, {0.3674921780656193, 0.6984686923854629}, 173}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          173, {0.43315067810170427`, 0.6983118738505003}, 172}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          173, {0.38459509497499994`, 0.8489034243952996}, 174}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          174, {0.41780055572009467`, 0.8484837812702585}, 173}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          174, {0.38359172018053034`, 0.948924917801151}, 175}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          175, {0.4166822130189172, 0.950042354552969}, 174}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{175, 6303, 6306, 6308, 6314, 6316, 6319, 
          175},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{176, 6326, 6329, 6331, 6337, 6339, 6342, 
          176},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          176, {0.5848105802731322, 0.04897833965884131}, 177}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          177, {0.6181765674770169, 0.048613807044259126`}, 176}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          177, {0.5850454846207603, 0.15014475102119226`}, 178}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          178, {0.618411929172655, 0.15035462183746062`}, 177}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          178, {0.5837223883045307, 0.25163016422279616`}, 179}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          179, {0.6172410077336615, 0.25224052969231686`}, 178}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          179, {0.5837260329006417, 0.3525486547731246}, 180}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          180, {0.6162889670228534, 0.3522501992287877}, 179}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          180, {0.5839072553160216, 0.4517363579950345}, 181}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          181, {0.6167167612265675, 0.4518345192296847}, 180}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          181, {0.5836484584564081, 0.5497084729116519}, 182}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          182, {0.6153884800175611, 0.5501322722713345}, 181}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          182, {0.5654473177975567, 0.6991985518355894}, 183}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          183, {0.6319363956409508, 0.699318467589489}, 182}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          183, {0.5660191951611789, 0.8996895571884651}, 184}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          184, {0.6313304851891024, 0.8995808342758118}, 183}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{184, 6605, 6608, 6610, 6616, 6618, 6621, 
          184},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{185, 6628, 6631, 6633, 6639, 6641, 6644, 
          185},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          185, {0.7842477377523559, 0.050660524085944014`}, 186}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          186, {0.8170514542396206, 0.050515052656421124`}, 185}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          186, {0.7836624466186578, 0.14973711503538903`}, 187}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          187, {0.8162710483659814, 0.1503317389370604}, 186}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          187, {0.787706358276394, 0.23280410372462268`}, 188}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          188, {0.8096263361680457, 0.23306483499574362`}, 187}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          188, {0.7875198279236004, 0.3002757305862705}, 189}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          189, {0.8098090972813496, 0.3000162389485447}, 188}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          189, {0.7882554915907148, 0.3678818702668953}, 190}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          190, {0.8104561625629495, 0.36768660794436847`}, 189}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          190, {0.7837112629191892, 0.45271286828789414`}, 191}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          191, {0.8171998219655368, 0.4521847785500713}, 190}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          191, {0.7841479252362996, 0.5514010938575522}, 192}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          192, {0.8160024652790279, 0.5521793618757721}, 191}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          192, {0.7657482065338791, 0.700425047545366}, 193}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          193, {0.8316968129118538, 0.7005365259890299}, 192}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          193, {0.7883248655995859, 0.8349436502459284}, 194}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          194, {0.8106218617204568, 0.8343382879728729}, 193}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          194, {0.7897283207170637, 0.9017898752499534}, 195}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          195, {0.8115466521702623, 0.9016295207501032}, 194}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          195, {0.7893351304527129, 0.9671648429711843}, 196}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          196, {0.8107519901841101, 0.9677158602431762}, 195}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{196, 7003, 7006, 7008, 7014, 7016, 7019, 
          196},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{197, 7026, 7029, 7031, 7037, 7039, 7042, 
          197},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          197, {0.9816984077977571, 0.05030080974961286}, 198}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          198, {1.0147031749673372`, 0.050740392319916346`}, 197}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          198, {0.9831796986192101, 0.14995702454425794`}, 199}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          199, {1.0152198535539423`, 0.1488603468090998}, 198}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          199, {0.9897472007135565, 0.23224141915119972`}, 200}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          200, {1.012171398327867, 0.2321807474922114}, 199}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          200, {0.9902380118350709, 0.2986068498098914}, 201}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          201, {1.0115234430104194`, 0.2987192032864259}, 200}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          201, {0.9885480618125738, 0.36474145166251903`}, 202}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          202, {1.0109359565005576`, 0.36537810493020945`}, 201}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          202, {0.9660620699932032, 0.4994967309439318}, 203}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          203, {1.0320417319925976`, 0.4993140052978879}, 202}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          203, {0.9833246536133935, 0.6498147925943776}, 204}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          204, {1.0161866045386407`, 0.6495346319598394}, 203}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          204, {0.9836012584940752, 0.7488225802685875}, 205}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          205, {1.0160338492539844`, 0.7490620090416001}, 204}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          205, {0.9875557120575518, 0.8321686574670333}, 206}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          206, {1.0100112911837866`, 0.832609389977249}, 205}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          206, {0.986344164669291, 0.9006029524564114}, 207}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          207, {1.0088670442369865`, 0.9009369971431503}, 206}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          207, {0.9872133362798048, 0.9667957809834998}, 208}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          208, {1.008008750657594, 0.9664581586857293}, 207}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{208, 7401, 7404, 7406, 7412, 7414, 7417, 
          208},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{209, 7424, 7427, 7429, 7435, 7437, 7440, 
          209},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          209, {1.1678941031676375`, 0.10035028359274192`}, 210}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          210, {1.2338789514987691`, 0.09994698140591854}, 209}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          210, {1.190922848296653, 0.23479582731945567`}, 211}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          211, {1.2133646139245866`, 0.23437218738741478`}, 210}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          211, {1.192806411396861, 0.30127072436252317`}, 212}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          212, {1.2140862419999632`, 0.30083756513043264`}, 211}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          212, {1.191011706078807, 0.366193916830813}, 213}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          213, {1.2130293067994296`, 0.36756492786972883`}, 212}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          213, {1.167530301906325, 0.4997295074452743}, 214}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          214, {1.2328424412530152`, 0.4995649224352714}, 213}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          214, {1.1677149253461778`, 0.6988065871023418}, 215}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          215, {1.2333786151964463`, 0.6987341151940936}, 214}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          215, {1.1900257925417048`, 0.8324663181775603}, 216}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          216, {1.212203364445382, 0.8321653067467089}, 215}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          216, {1.1913879797691345`, 0.8987009283616916}, 217}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          217, {1.2127667963300641`, 0.8983686390994174}, 216}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          217, {1.1893429031690823`, 0.9652068597940794}, 218}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          218, {1.2122092968661953`, 0.9663950879194803}, 217}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{218, 7735, 7738, 7740, 7746, 7748, 7751, 
          218},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{219, 7758, 7761, 7763, 7769, 7771, 7774, 
          219},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          219, {1.367948029079442, 0.10049456547406643`}, 220}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          220, {1.434017366089498, 0.10076255937178528`}, 219}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          220, {1.384899997200011, 0.2519788637568222}, 221}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          221, {1.4181751178366666`, 0.2513459035329733}, 220}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          221, {1.3859466411005796`, 0.35102764023258887`}, 222}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          222, {1.4181301348383966`, 0.35133117273552883`}, 221}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          222, {1.384636955161686, 0.44976601841717917`}, 223}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          223, {1.4174188536506647`, 0.4501271446015659}, 222}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          223, {1.3835057063207057`, 0.5495209375643949}, 224}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          224, {1.4163403768011469`, 0.5498865492566102}, 223}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          224, {1.383063169675237, 0.6494951928217694}, 225}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          225, {1.4158484524279915`, 0.6494369080616077}, 224}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          225, {1.3840375432500214`, 0.7492300965092222}, 226}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          226, {1.4166955143712288`, 0.7486893447990768}, 225}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          226, {1.384668512189816, 0.8494156679357125}, 227}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          227, {1.4180498516689997`, 0.8493034890677938}, 226}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          227, {1.3834718940021575`, 0.9501361382520496}, 228}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          228, {1.4166909517538688`, 0.9510887796534249}, 227}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{228, 8069, 8072, 8074, 8080, 8082, 8085, 
          228},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{229, 8092, 8095, 8097, 8103, 8105, 8108, 
          229},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          229, {0.032546568143713685`, 0.009951761764475132}, 230}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          230, {0.03254656814371372, -0.01197367119327372}, 229}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          230, {0.09921323481038036, 0.00995176176447509}, 231}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          231, {0.09921323481038045, -0.011973671193274122`}, 230}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          231, {0.1663652986670221, 0.011115297399846746`}, 232}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          232, {0.1669611736294659, -0.011325384112407133`}, 231}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          232, {0.30136828016515355`, 0.033148602973287034`}, 233}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          233, {0.3009326531944879, -0.03287143821526258}, 232}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          233, {0.45152102920686726`, 0.015920371474497437`}, 234}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          234, {0.451521029206867, -0.016967777962124304`}, 233}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          234, {0.5514615171493648, 0.015121382400878645`}, 235}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          235, {0.5509988853759178, -0.017575471177944807`}, 234}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          235, {0.6509393733184149, 0.014513689185062156`}, 236}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          236, {0.6509393733184163, -0.018374460251560372`}, 235}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          236, {0.7502487055904199, 0.015752938974865394`}, 237}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          237, {0.7511191028618782, -0.016967172348103736`}, 236}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          237, {0.8337617684672165, 0.011678868638887587`}, 238}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          238, {0.8337617684672148, -0.010246564318862407`}, 237}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          238, {0.900428435133883, 0.011678868638886774`}, 239}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          239, {0.9004284351338814, -0.010246564318858752`}, 238}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          239, {0.9663767406005599, 0.011236026086632314`}, 240}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          240, {0.9662541185877896, -0.010176567350413147`}, 239}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          240, {1.032202424054467, 0.011306023055081832`}, 241}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          241, {1.0322024240544672`, -0.010619409902665139`}, 240}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          241, {1.0988690907211336`, 0.011306023055077939`}, 242}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          242, {1.0988690907211336`, -0.010619409902662929`}, 241}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          242, {1.1663220543540425`, 0.011281079919184265`}, 243}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          243, {1.1661537549237502`, -0.011106199512975529`}, 242}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          243, {1.2502733852233259`, 0.016275648548313426`}, 244}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          244, {1.250273385223326, -0.016612500888309692`}, 243}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          244, {1.3507739596964923`, 0.016635027581919107`}, 245}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          245, {1.3508895554274905`, -0.016620398513010552`}, 244}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{245, 8627, 8630, 8632, 8638, 8640, 8643, 
          245},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{246, 8650, 8653, 8655, 8661, 8663, 8666, 
          246},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          246, {0.03189786087136382, 0.21016879209770656`}, 247}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          247, {0.031897860871363815`, 0.18824335914054136`}, 246}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          247, {0.09856452753803051, 0.21016879209881315`}, 248}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          248, {0.09856452753803051, 0.18824335914020304`}, 247}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          248, {0.16694440086212706`, 0.21025212310244012`}, 249}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          249, {0.16665942544790302`, 0.18729352935385418`}, 248}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          249, {0.3011634413426069, 0.23104875988132867`}, 250}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          250, {0.30116312066658485`, 0.16562941874315462`}, 249}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          250, {0.500581284000764, 0.23267562142754525`}, 251}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          251, {0.50144895193144, 0.16663982098192942`}, 250}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          251, {0.6347429726950149, 0.21193955709972928`}, 252}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          252, {0.6347429726950133, 0.19001412414344243`}, 251}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          252, {0.7014096393616815, 0.21193955710139478`}, 253}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          253, {0.70140963936168, 0.19001412414424168`}, 252}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          253, {0.7671277135356482, 0.2108699252913043}, 254}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          254, {0.766677997285912, 0.1897163447149945}, 253}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          254, {0.8323960714598795, 0.21057214586978}, 255}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          255, {0.8323960714598782, 0.18864671291381582`}, 254}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          255, {0.8990627381265464, 0.21057214586872933`}, 256}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          256, {0.8990627381265447, 0.1886467129113023}, 255}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          256, {0.9668765748660593, 0.21012387316502232`}, 257}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          257, {0.9663865567230109, 0.18760503208845322`}, 256}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          257, {1.0508670601291916`, 0.21456355057603665`}, 258}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          258, {1.0508670601291916`, 0.1816754011420345}, 257}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          258, {1.1507975513878705`, 0.21584068497984607`}, 259}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          259, {1.151569178184402, 0.1827444820498077}, 258}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          259, {1.2348330027764143`, 0.21142840764928467`}, 260}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          260, {1.2348330027764143`, 0.18950297468467037`}, 259}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          260, {1.3014996694430812`, 0.2114284076515878}, 261}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          261, {1.301499669443081, 0.18950297469133232`}, 260}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          261, {1.3676040918173842`, 0.21158058714985226`}, 262}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          262, {1.3678041762273132`, 0.1899591736251838}, 261}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{262, 9185, 9188, 9190, 9196, 9198, 9201, 
          262},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{263, 9208, 9211, 9213, 9219, 9221, 9224, 
          263},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          263, {0.09981070198576167, 0.4339035697469907}, 264}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          264, {0.1002324762817182, 0.36691528695448017`}, 263}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          264, {0.3018336180630342, 0.43256782441367847`}, 265}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          265, {0.3010258225954058, 0.3670772928767479}, 264}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          265, {0.4343286003106801, 0.40955718007720143`}, 266}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          266, {0.4343286003106809, 0.3876317471207463}, 265}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          266, {0.5009952669773471, 0.4095571800717446}, 267}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          267, {0.5009952669773469, 0.38763174711258713`}, 266}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          267, {0.5668505345820498, 0.4111246333759079}, 268}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          268, {0.5679393089756146, 0.3893748309387033}, 267}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          268, {0.6337945765803181, 0.41286771719832516`}, 269}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          269, {0.6337945765803166, 0.39094228422561494`}, 268}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          269, {0.7004612432469849, 0.41286771719630694`}, 270}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          270, {0.7004612432469832, 0.39094228423978855`}, 269}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          270, {0.7667843067131843, 0.41255026597132793`}, 271}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          271, {0.7666629551337413, 0.3908907527581922}, 270}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          271, {0.8329860185999424, 0.41249873450008717`}, 272}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          272, {0.8329860185999406, 0.39057330153547287`}, 271}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          272, {0.8996526852666089, 0.41249873451341107`}, 273}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          273, {0.8996526852666074, 0.3905733015383889}, 272}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          273, {0.9662812669334278, 0.4111343477986735}, 274}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          274, {0.9654788540463907, 0.38949786447440915`}, 273}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          274, {1.0321074357132107`, 0.41005891072699985`}, 275}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          275, {1.0321074357132107`, 0.3881334777890333}, 274}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          275, {1.0987741023798772`, 0.410058910737927}, 276}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          276, {1.0987741023798772`, 0.3881334777653665}, 275}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          276, {1.1658151438511148`, 0.41087834131998524`}, 277}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          277, {1.166228444121667, 0.388570731687173}, 276}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          277, {1.3007967882987097`, 0.4333884565358219}, 278}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          278, {1.3007162901314449`, 0.3670725374897561}, 277}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{278, 9711, 9714, 9716, 9722, 9724, 9727, 
          278},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{279, 9734, 9737, 9739, 9745, 9747, 9750, 
          279},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          279, {0.04831617480509536, 0.6169093336571987}, 280}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          280, {0.04831617480509537, 0.5840211842229144}, 279}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          280, {0.14920886949024287`, 0.6175114115847313}, 281}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          281, {0.1493919756134652, 0.583975860405875}, 280}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          281, {0.2502846702986129, 0.6174660877700197}, 282}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          282, {0.2502846702986128, 0.5845779383319808}, 281}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          282, {0.35058715716084093`, 0.6162066077023035}, 283}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          283, {0.34978052930738646`, 0.5833847785628737}, 282}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          283, {0.4334163495029451, 0.6095320896699947}, 284}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          284, {0.43341634950295094`, 0.5876066567691319}, 283}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          284, {0.5000830161696121, 0.6095320897047639}, 285}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          285, {0.5000830161696168, 0.5876066567268257}, 284}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          285, {0.5662101299631646, 0.6091360530589297}, 286}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          286, {0.5660803847181475, 0.5876081888049468}, 285}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          286, {0.6322074985116956, 0.6091375851426327}, 287}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          287, {0.632207498511699, 0.5872121521756943}, 286}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          287, {0.6988741651783622, 0.6091375851426327}, 288}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          288, {0.6988741651783656, 0.5872121521623704}, 287}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          288, {0.7652136346854901, 0.6101624955547247}, 289}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          289, {0.7658858547234154, 0.5882312000127914}, 288}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          289, {0.8322253242305446, 0.6111815433839439}, 290}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          290, {0.8322253242305384, 0.5892561104726252}, 289}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          290, {0.8988919908972114, 0.6111815433632216}, 291}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          291, {0.898891990897205, 0.5892561104240865}, 290}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          291, {0.9658604369065883, 0.6110013780492614}, 292}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          292, {0.9656945869298786, 0.5889319908528846}, 291}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          292, {1.032663032939259, 0.6106772584361504}, 293}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          293, {1.032663032939259, 0.588751825466806}, 292}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          293, {1.0993296996059276`, 0.6106772584953446}, 294}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          294, {1.0993296996059232`, 0.5887518255248317}, 293}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          294, {1.1666769231105953`, 0.6104727810739936}, 295}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          295, {1.166422700728432, 0.588183312056586}, 294}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          295, {1.2997899299621887`, 0.6319942932071663}, 296}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          296, {1.3000138614176673`, 0.5665696970593115}, 295}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{296, 10301, 10304, 10306, 10312, 10314, 
          10317, 296},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{297, 10324, 10327, 10329, 10335, 10337, 
          10340, 297},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          297, {0.05095180717794036, 0.8180890716839658}, 298}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          298, {0.050951807177940574`, 0.7852009222444765}, 297}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          298, {0.15125037544387532`, 0.8162978988901902}, 299}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          299, {0.15012892018060092`, 0.7835821881891742}, 298}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          299, {0.23376082177986934`, 0.809197806577678}, 300}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          300, {0.23376082177986962`, 0.7872723736238454}, 299}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          300, {0.30042748844653316`, 0.8091978065827624}, 301}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          301, {0.30042748844653905`, 0.7872723736238454}, 300}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          301, {0.3671642605434184, 0.8092076220501009}, 302}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          302, {0.3671564012341601, 0.7872386611006953}, 301}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          302, {0.43389317333103944`, 0.8091739095230539}, 303}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          303, {0.4338931733310453, 0.7872484765584397}, 302}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          303, {0.5005598399977065, 0.8091739095014912}, 304}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          304, {0.5005598399977111, 0.7872484765794181}, 303}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          304, {0.5658509445144455, 0.8099022368493655}, 305}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          305, {0.5665517770767408, 0.7886511069047035}, 304}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          305, {0.6318428815934801, 0.8113048672225976}, 306}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          306, {0.631842881593474, 0.7893794343163072}, 305}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          306, {0.6985095482601468, 0.811304867200978}, 307}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          307, {0.6985095482601406, 0.7893794343050821}, 306}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          307, {0.7651320807847461, 0.811512315094671}, 308}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          308, {0.765263829357255, 0.7895725822098144}, 307}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          308, {0.8994132462100095, 0.8325324584477445}, 309}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          309, {0.8985933315404675, 0.7664599949826202}, 308}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          309, {1.099997786530933, 0.8315104664763435}, 310}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          310, {1.1001127123138819`, 0.7653383914735457}, 309}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          310, {1.2506569496428577`, 0.8150432258468665}, 311}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          311, {1.2506569496428577`, 0.7821550764256653}, 310}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          311, {1.3509210450808942`, 0.8151359709753967}, 312}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          312, {1.3509245405600692`, 0.7820729597130347}, 311}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{312, 10827, 10830, 10832, 10838, 10840, 
          10843, 312},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{313, 10850, 10853, 10855, 10861, 10863, 
          10866, 313},
          SplineDegree->7], 0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          313, {0.10138646978994094`, 1.0315692243775103`}, 314}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          314, {0.10119274524716393`, 0.9659070422483965}, 313}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          314, {0.25111611532619815`, 1.0148876877372377`}, 315}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          315, {0.25111611532619815`, 0.9819995382817349}, 314}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          315, {0.34955551087842185`, 1.0151211399616098`}, 316}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          316, {0.3499987269498408, 0.9831137328022962}, 315}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          316, {0.431771455835395, 1.0107539762626836`}, 317}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          317, {0.4317714558353982, 0.9888285432711349}, 316}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          317, {0.49843812250206204`, 1.0107539761833133`}, 318}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          318, {0.498438122502064, 0.9888285432178393}, 317}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          318, {0.5654477094593939, 1.0103885735611697`}, 319}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          319, {0.5651638784661293, 0.9883309270075478}, 318}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          319, {0.648840132090137, 1.0153723153807284`}, 320}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          320, {0.6488401320901386, 0.9824841660019323}, 319}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          320, {0.7488466663805488, 1.0159685828582614`}, 321}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          321, {0.7491993122306008, 0.9829601567320825}, 320}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          321, {0.8492058465210152, 1.0164445735363774`}, 322}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          322, {0.8492058465210166, 0.983556424086495}, 321}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          322, {0.9489542037474008, 1.0153876445202406`}, 323}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          323, {0.9483759748441158, 0.9828551852071806}, 322}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          323, {1.0481243320705051`, 1.0146864055932934`}, 324}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          324, {1.0481243320705054`, 0.9817982561903122}, 323}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          324, {1.1481650642389316`, 1.0159866687362922`}, 325}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          325, {1.148928899111877, 0.982820516035925}, 324}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          325, {1.2323029646136416`, 1.0115275705683968`}, 326}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          326, {1.2323029646136443`, 0.9896021376559698}, 325}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          326, {1.2989696312803085`, 1.011527570674988}, 327}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          327, {1.2989696312803107`, 0.9896021374450041}, 326}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          327, {1.3653774859802998`, 1.0117475770693316`}, 328}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{
          328, {1.365558596528648, 0.9899328170761663}, 327}], 
          0.01759112590662454], 
         ArrowBox[BezierCurveBox[{328, 11353, 11356, 11358, 11364, 11366, 
          11369, 328},
          SplineDegree->7], 0.01759112590662454]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01759112590662454], DiskBox[2, 0.01759112590662454], 
         DiskBox[3, 0.01759112590662454], DiskBox[4, 0.01759112590662454], 
         DiskBox[5, 0.01759112590662454], DiskBox[6, 0.01759112590662454], 
         DiskBox[7, 0.01759112590662454], DiskBox[8, 0.01759112590662454], 
         DiskBox[9, 0.01759112590662454], DiskBox[10, 0.01759112590662454], 
         DiskBox[11, 0.01759112590662454], DiskBox[12, 0.01759112590662454], 
         DiskBox[13, 0.01759112590662454], DiskBox[14, 0.01759112590662454], 
         DiskBox[15, 0.01759112590662454], DiskBox[16, 0.01759112590662454], 
         DiskBox[17, 0.01759112590662454], DiskBox[18, 0.01759112590662454], 
         DiskBox[19, 0.01759112590662454], DiskBox[20, 0.01759112590662454], 
         DiskBox[21, 0.01759112590662454], DiskBox[22, 0.01759112590662454], 
         DiskBox[23, 0.01759112590662454], DiskBox[24, 0.01759112590662454], 
         DiskBox[25, 0.01759112590662454], DiskBox[26, 0.01759112590662454], 
         DiskBox[27, 0.01759112590662454], DiskBox[28, 0.01759112590662454], 
         DiskBox[29, 0.01759112590662454], DiskBox[30, 0.01759112590662454], 
         DiskBox[31, 0.01759112590662454], DiskBox[32, 0.01759112590662454], 
         DiskBox[33, 0.01759112590662454], DiskBox[34, 0.01759112590662454], 
         DiskBox[35, 0.01759112590662454], DiskBox[36, 0.01759112590662454], 
         DiskBox[37, 0.01759112590662454], DiskBox[38, 0.01759112590662454], 
         DiskBox[39, 0.01759112590662454], DiskBox[40, 0.01759112590662454], 
         DiskBox[41, 0.01759112590662454], DiskBox[42, 0.01759112590662454], 
         DiskBox[43, 0.01759112590662454], DiskBox[44, 0.01759112590662454], 
         DiskBox[45, 0.01759112590662454], DiskBox[46, 0.01759112590662454], 
         DiskBox[47, 0.01759112590662454], DiskBox[48, 0.01759112590662454], 
         DiskBox[49, 0.01759112590662454], DiskBox[50, 0.01759112590662454], 
         DiskBox[51, 0.01759112590662454], DiskBox[52, 0.01759112590662454], 
         DiskBox[53, 0.01759112590662454], DiskBox[54, 0.01759112590662454], 
         DiskBox[55, 0.01759112590662454], DiskBox[56, 0.01759112590662454], 
         DiskBox[57, 0.01759112590662454], DiskBox[58, 0.01759112590662454], 
         DiskBox[59, 0.01759112590662454], DiskBox[60, 0.01759112590662454], 
         DiskBox[61, 0.01759112590662454], DiskBox[62, 0.01759112590662454], 
         DiskBox[63, 0.01759112590662454], DiskBox[64, 0.01759112590662454], 
         DiskBox[65, 0.01759112590662454], DiskBox[66, 0.01759112590662454], 
         DiskBox[67, 0.01759112590662454], DiskBox[68, 0.01759112590662454], 
         DiskBox[69, 0.01759112590662454], DiskBox[70, 0.01759112590662454], 
         DiskBox[71, 0.01759112590662454], DiskBox[72, 0.01759112590662454], 
         DiskBox[73, 0.01759112590662454], DiskBox[74, 0.01759112590662454], 
         DiskBox[75, 0.01759112590662454], DiskBox[76, 0.01759112590662454], 
         DiskBox[77, 0.01759112590662454], DiskBox[78, 0.01759112590662454], 
         DiskBox[79, 0.01759112590662454], DiskBox[80, 0.01759112590662454], 
         DiskBox[81, 0.01759112590662454], DiskBox[82, 0.01759112590662454], 
         DiskBox[83, 0.01759112590662454], DiskBox[84, 0.01759112590662454], 
         DiskBox[85, 0.01759112590662454], DiskBox[86, 0.01759112590662454], 
         DiskBox[87, 0.01759112590662454], DiskBox[88, 0.01759112590662454], 
         DiskBox[89, 0.01759112590662454], DiskBox[90, 0.01759112590662454], 
         DiskBox[91, 0.01759112590662454], DiskBox[92, 0.01759112590662454], 
         DiskBox[93, 0.01759112590662454], DiskBox[94, 0.01759112590662454], 
         DiskBox[95, 0.01759112590662454], DiskBox[96, 0.01759112590662454], 
         DiskBox[97, 0.01759112590662454], DiskBox[98, 0.01759112590662454], 
         DiskBox[99, 0.01759112590662454], DiskBox[100, 0.01759112590662454], 
         DiskBox[101, 0.01759112590662454], DiskBox[102, 0.01759112590662454],
          DiskBox[103, 0.01759112590662454], 
         DiskBox[104, 0.01759112590662454], DiskBox[105, 0.01759112590662454],
          DiskBox[106, 0.01759112590662454], 
         DiskBox[107, 0.01759112590662454], DiskBox[108, 0.01759112590662454],
          DiskBox[109, 0.01759112590662454], 
         DiskBox[110, 0.01759112590662454], DiskBox[111, 0.01759112590662454],
          DiskBox[112, 0.01759112590662454], 
         DiskBox[113, 0.01759112590662454], DiskBox[114, 0.01759112590662454],
          DiskBox[115, 0.01759112590662454], 
         DiskBox[116, 0.01759112590662454], DiskBox[117, 0.01759112590662454],
          DiskBox[118, 0.01759112590662454], 
         DiskBox[119, 0.01759112590662454], DiskBox[120, 0.01759112590662454],
          DiskBox[121, 0.01759112590662454], 
         DiskBox[122, 0.01759112590662454], DiskBox[123, 0.01759112590662454],
          DiskBox[124, 0.01759112590662454], 
         DiskBox[125, 0.01759112590662454], DiskBox[126, 0.01759112590662454],
          DiskBox[127, 0.01759112590662454], 
         DiskBox[128, 0.01759112590662454], DiskBox[129, 0.01759112590662454],
          DiskBox[130, 0.01759112590662454], 
         DiskBox[131, 0.01759112590662454], DiskBox[132, 0.01759112590662454],
          DiskBox[133, 0.01759112590662454], 
         DiskBox[134, 0.01759112590662454], DiskBox[135, 0.01759112590662454],
          DiskBox[136, 0.01759112590662454], 
         DiskBox[137, 0.01759112590662454], DiskBox[138, 0.01759112590662454],
          DiskBox[139, 0.01759112590662454], 
         DiskBox[140, 0.01759112590662454], DiskBox[141, 0.01759112590662454],
          DiskBox[142, 0.01759112590662454], 
         DiskBox[143, 0.01759112590662454], DiskBox[144, 0.01759112590662454],
          DiskBox[145, 0.01759112590662454], 
         DiskBox[146, 0.01759112590662454], DiskBox[147, 0.01759112590662454],
          DiskBox[148, 0.01759112590662454], 
         DiskBox[149, 0.01759112590662454], DiskBox[150, 0.01759112590662454],
          DiskBox[151, 0.01759112590662454], 
         DiskBox[152, 0.01759112590662454], DiskBox[153, 0.01759112590662454],
          DiskBox[154, 0.01759112590662454], 
         DiskBox[155, 0.01759112590662454], DiskBox[156, 0.01759112590662454],
          DiskBox[157, 0.01759112590662454], 
         DiskBox[158, 0.01759112590662454], DiskBox[159, 0.01759112590662454],
          DiskBox[160, 0.01759112590662454], 
         DiskBox[161, 0.01759112590662454], DiskBox[162, 0.01759112590662454],
          DiskBox[163, 0.01759112590662454], 
         DiskBox[164, 0.01759112590662454], DiskBox[165, 0.01759112590662454],
          DiskBox[166, 0.01759112590662454], 
         DiskBox[167, 0.01759112590662454], DiskBox[168, 0.01759112590662454],
          DiskBox[169, 0.01759112590662454], 
         DiskBox[170, 0.01759112590662454], DiskBox[171, 0.01759112590662454],
          DiskBox[172, 0.01759112590662454], 
         DiskBox[173, 0.01759112590662454], DiskBox[174, 0.01759112590662454],
          DiskBox[175, 0.01759112590662454], 
         DiskBox[176, 0.01759112590662454], DiskBox[177, 0.01759112590662454],
          DiskBox[178, 0.01759112590662454], 
         DiskBox[179, 0.01759112590662454], DiskBox[180, 0.01759112590662454],
          DiskBox[181, 0.01759112590662454], 
         DiskBox[182, 0.01759112590662454], DiskBox[183, 0.01759112590662454],
          DiskBox[184, 0.01759112590662454], 
         DiskBox[185, 0.01759112590662454], DiskBox[186, 0.01759112590662454],
          DiskBox[187, 0.01759112590662454], 
         DiskBox[188, 0.01759112590662454], DiskBox[189, 0.01759112590662454],
          DiskBox[190, 0.01759112590662454], 
         DiskBox[191, 0.01759112590662454], DiskBox[192, 0.01759112590662454],
          DiskBox[193, 0.01759112590662454], 
         DiskBox[194, 0.01759112590662454], DiskBox[195, 0.01759112590662454],
          DiskBox[196, 0.01759112590662454], 
         DiskBox[197, 0.01759112590662454], DiskBox[198, 0.01759112590662454],
          DiskBox[199, 0.01759112590662454], 
         DiskBox[200, 0.01759112590662454], DiskBox[201, 0.01759112590662454],
          DiskBox[202, 0.01759112590662454], 
         DiskBox[203, 0.01759112590662454], DiskBox[204, 0.01759112590662454],
          DiskBox[205, 0.01759112590662454], 
         DiskBox[206, 0.01759112590662454], DiskBox[207, 0.01759112590662454],
          DiskBox[208, 0.01759112590662454], 
         DiskBox[209, 0.01759112590662454], DiskBox[210, 0.01759112590662454],
          DiskBox[211, 0.01759112590662454], 
         DiskBox[212, 0.01759112590662454], DiskBox[213, 0.01759112590662454],
          DiskBox[214, 0.01759112590662454], 
         DiskBox[215, 0.01759112590662454], DiskBox[216, 0.01759112590662454],
          DiskBox[217, 0.01759112590662454], 
         DiskBox[218, 0.01759112590662454], DiskBox[219, 0.01759112590662454],
          DiskBox[220, 0.01759112590662454], 
         DiskBox[221, 0.01759112590662454], DiskBox[222, 0.01759112590662454],
          DiskBox[223, 0.01759112590662454], 
         DiskBox[224, 0.01759112590662454], DiskBox[225, 0.01759112590662454],
          DiskBox[226, 0.01759112590662454], 
         DiskBox[227, 0.01759112590662454], DiskBox[228, 0.01759112590662454],
          DiskBox[229, 0.01759112590662454], 
         DiskBox[230, 0.01759112590662454], DiskBox[231, 0.01759112590662454],
          DiskBox[232, 0.01759112590662454], 
         DiskBox[233, 0.01759112590662454], DiskBox[234, 0.01759112590662454],
          DiskBox[235, 0.01759112590662454], 
         DiskBox[236, 0.01759112590662454], DiskBox[237, 0.01759112590662454],
          DiskBox[238, 0.01759112590662454], 
         DiskBox[239, 0.01759112590662454], DiskBox[240, 0.01759112590662454],
          DiskBox[241, 0.01759112590662454], 
         DiskBox[242, 0.01759112590662454], DiskBox[243, 0.01759112590662454],
          DiskBox[244, 0.01759112590662454], 
         DiskBox[245, 0.01759112590662454], DiskBox[246, 0.01759112590662454],
          DiskBox[247, 0.01759112590662454], 
         DiskBox[248, 0.01759112590662454], DiskBox[249, 0.01759112590662454],
          DiskBox[250, 0.01759112590662454], 
         DiskBox[251, 0.01759112590662454], DiskBox[252, 0.01759112590662454],
          DiskBox[253, 0.01759112590662454], 
         DiskBox[254, 0.01759112590662454], DiskBox[255, 0.01759112590662454],
          DiskBox[256, 0.01759112590662454], 
         DiskBox[257, 0.01759112590662454], DiskBox[258, 0.01759112590662454],
          DiskBox[259, 0.01759112590662454], 
         DiskBox[260, 0.01759112590662454], DiskBox[261, 0.01759112590662454],
          DiskBox[262, 0.01759112590662454], 
         DiskBox[263, 0.01759112590662454], DiskBox[264, 0.01759112590662454],
          DiskBox[265, 0.01759112590662454], 
         DiskBox[266, 0.01759112590662454], DiskBox[267, 0.01759112590662454],
          DiskBox[268, 0.01759112590662454], 
         DiskBox[269, 0.01759112590662454], DiskBox[270, 0.01759112590662454],
          DiskBox[271, 0.01759112590662454], 
         DiskBox[272, 0.01759112590662454], DiskBox[273, 0.01759112590662454],
          DiskBox[274, 0.01759112590662454], 
         DiskBox[275, 0.01759112590662454], DiskBox[276, 0.01759112590662454],
          DiskBox[277, 0.01759112590662454], 
         DiskBox[278, 0.01759112590662454], DiskBox[279, 0.01759112590662454],
          DiskBox[280, 0.01759112590662454], 
         DiskBox[281, 0.01759112590662454], DiskBox[282, 0.01759112590662454],
          DiskBox[283, 0.01759112590662454], 
         DiskBox[284, 0.01759112590662454], DiskBox[285, 0.01759112590662454],
          DiskBox[286, 0.01759112590662454], 
         DiskBox[287, 0.01759112590662454], DiskBox[288, 0.01759112590662454],
          DiskBox[289, 0.01759112590662454], 
         DiskBox[290, 0.01759112590662454], DiskBox[291, 0.01759112590662454],
          DiskBox[292, 0.01759112590662454], 
         DiskBox[293, 0.01759112590662454], DiskBox[294, 0.01759112590662454],
          DiskBox[295, 0.01759112590662454], 
         DiskBox[296, 0.01759112590662454], DiskBox[297, 0.01759112590662454],
          DiskBox[298, 0.01759112590662454], 
         DiskBox[299, 0.01759112590662454], DiskBox[300, 0.01759112590662454],
          DiskBox[301, 0.01759112590662454], 
         DiskBox[302, 0.01759112590662454], DiskBox[303, 0.01759112590662454],
          DiskBox[304, 0.01759112590662454], 
         DiskBox[305, 0.01759112590662454], DiskBox[306, 0.01759112590662454],
          DiskBox[307, 0.01759112590662454], 
         DiskBox[308, 0.01759112590662454], DiskBox[309, 0.01759112590662454],
          DiskBox[310, 0.01759112590662454], 
         DiskBox[311, 0.01759112590662454], DiskBox[312, 0.01759112590662454],
          DiskBox[313, 0.01759112590662454], 
         DiskBox[314, 0.01759112590662454], DiskBox[315, 0.01759112590662454],
          DiskBox[316, 0.01759112590662454], 
         DiskBox[317, 0.01759112590662454], DiskBox[318, 0.01759112590662454],
          DiskBox[319, 0.01759112590662454], 
         DiskBox[320, 0.01759112590662454], DiskBox[321, 0.01759112590662454],
          DiskBox[322, 0.01759112590662454], 
         DiskBox[323, 0.01759112590662454], DiskBox[324, 0.01759112590662454],
          DiskBox[325, 0.01759112590662454], 
         DiskBox[326, 0.01759112590662454], DiskBox[327, 0.01759112590662454],
          DiskBox[328, 0.01759112590662454]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{3.7809433357742405`*^9, 3.780943401428094*^9, 
  3.7809434677513113`*^9, 3.78094356521917*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Population and Facility Generation", "Section",
 CellChangeTimes->{{3.7809435049718604`*^9, 3.7809435119808617`*^9}, {
  3.7809436047470207`*^9, 3.780943609788619*^9}}],

Cell["\<\
This section adds population center and facility nodes to the base network \
defined above. The updated map is shown for review.\
\>", "Text",
 CellChangeTimes->{{3.780943614961298*^9, 3.7809436441151314`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initialize", " ", "data", " ", "structures"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pops", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"population", " ", "center", " ", "populations"}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7809438158232875`*^9, 3.780943861966584*^9}, {
  3.780943891997198*^9, 3.7809438926701417`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{758, 833},
WindowMargins->{{90, Automatic}, {Automatic, 60}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 93, 1, 64, "Chapter"],
Cell[676, 25, 266, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[967, 34, 150, 2, 63, "Section"],
Cell[CellGroupData[{
Cell[1142, 40, 218, 3, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[1385, 47, 616, 9, 58, "SubitemNumbered"],
Cell[2004, 58, 293, 3, 24, "SubitemNumbered"],
Cell[2300, 63, 426, 7, 41, "SubitemNumbered"],
Cell[2729, 72, 448, 8, 24, "SubitemNumbered"]
}, Open  ]],
Cell[3192, 83, 315, 4, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[3532, 91, 432, 7, 41, "SubitemNumbered"],
Cell[3967, 100, 377, 4, 24, "SubitemNumbered"],
Cell[4347, 106, 456, 7, 24, "SubitemNumbered"]
}, Open  ]],
Cell[4818, 116, 300, 4, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[5143, 124, 408, 7, 41, "SubitemNumbered"],
Cell[5554, 133, 524, 9, 58, "SubitemNumbered"],
Cell[6081, 144, 721, 14, 58, "SubitemNumbered"],
Cell[6805, 160, 680, 10, 58, "SubitemNumbered"]
}, Open  ]],
Cell[7500, 173, 532, 7, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[8057, 184, 625, 9, 41, "SubitemNumbered"],
Cell[8685, 195, 620, 9, 41, "SubitemNumbered"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9366, 211, 99, 1, 63, "Section"],
Cell[9468, 214, 273, 5, 49, "Text"],
Cell[9744, 221, 6049, 154, 472, "Input"],
Cell[15796, 377, 273, 9, 5, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16118, 392, 94, 1, 64, "Chapter"],
Cell[16215, 395, 328, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[16568, 405, 160, 2, 63, "Section"],
Cell[16731, 409, 340, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[17096, 419, 54579, 1254, 5150, "Input"],
Cell[CellGroupData[{
Cell[71700, 1677, 184, 2, 23, "Print"],
Cell[71887, 1681, 160, 2, 23, "Print"],
Cell[72050, 1685, 161, 2, 23, "Print"],
Cell[72214, 1689, 159, 2, 23, "Print"],
Cell[72376, 1693, 161, 2, 23, "Print"],
Cell[72540, 1697, 313011, 5666, 274, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[385612, 7370, 174, 2, 63, "Section"],
Cell[385789, 7374, 220, 4, 49, "Text"],
Cell[386012, 7380, 471, 12, 72, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

